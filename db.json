{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/def.png","path":"img/def.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/private.png","path":"img/private.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/qinglong.png","path":"img/qinglong.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/wallhaven-1kewy3.jpg","path":"img/wallhaven-1kewy3.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/spring.png","path":"img/spring.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/wallhaven-k71ql1.jpg","path":"img/wallhaven-k71ql1.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/about/index.md","hash":"a439742cae6b742aa27481d1819c5d0899842c39","modified":1671716983596},{"_id":"source/_posts/Java脚手架archetype.md","hash":"933cbdd283fdd592cb32c66d22134ed4debaa221","modified":1671711790262},{"_id":"source/_posts/Linux.md","hash":"2343aa42800ac030e78cb90664962bec0921dedc","modified":1671715579011},{"_id":"source/_posts/PrivateBin.md","hash":"fe8ff21e14b4dfa772bf924dbff281ccda2fd8a2","modified":1671711853617},{"_id":"source/_posts/docker-compose安装笔记.md","hash":"3614b8ed4048f1c9df537ebd06493cd7c591fcbe","modified":1671711773358},{"_id":"source/_posts/docker安装笔记.md","hash":"d4a44aa6bf45c866ec331278f19bb8907484429d","modified":1673762364778},{"_id":"source/_posts/git.md","hash":"b09257d8e490e9b341b38476ad879fcf99818d92","modified":1672581549245},{"_id":"source/_posts/go.md","hash":"359bbeeb890e03689b17884371b55258de56367f","modified":1671711788134},{"_id":"source/_posts/etcd.md","hash":"98312a2d154d14b945d50217f1f0f1693ed71d95","modified":1671711879155},{"_id":"source/_posts/hexo搭建教程.md","hash":"d3b754600dfb4335ac632a3aa065e72f8fdb9cda","modified":1671711871268},{"_id":"source/_posts/kubectl备忘录.md","hash":"3f62c1011c378caea3a3fc0931a8f551a6b06709","modified":1671711738110},{"_id":"source/_posts/kubernetes更新证书100年.md","hash":"dc490b0f7537c51c665b65f3f3d2c1de32ee7762","modified":1671711717833},{"_id":"source/_posts/kubernetes笔记.md","hash":"498ce8d33eb924655320717365a55374482bd203","modified":1671711735470},{"_id":"source/_posts/network-agent.md","hash":"67a33e1ac9903f404a4a4f1a8f496f8426937e6b","modified":1674122943066},{"_id":"source/_posts/npm.md","hash":"3f9ff51ea80e8fd1d602f326071d4a722365f232","modified":1671711760152},{"_id":"source/_posts/sql.md","hash":"bf543730eded6473f2fc122896bd8b77dc0c419a","modified":1672061920480},{"_id":"source/_posts/ssl.md","hash":"aeae5316fcdfd621d6f1be8f60a8ae7747fd4700","modified":1674184769911},{"_id":"source/categories/index.md","hash":"4691328fe5a6119c9c348041e305738ea5d93c82","modified":1671716983596},{"_id":"source/_posts/windows笔记.md","hash":"e85658bd3a0aac09566d5e6902cb7c12277911f9","modified":1671711834734},{"_id":"source/_posts/使用ql薅羊毛.md","hash":"0c986ef6ab2d7a02d8d77f9853aa8175292e978a","modified":1672323606951},{"_id":"source/tags/index.md","hash":"d959aecd6932979360d2fcf063b6f2290b815ad8","modified":1671716983596},{"_id":"themes/fluid/source/css/_pages/_category/category.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1671716983627},{"_id":"themes/fluid/.editorconfig","hash":"b595159772f3ee1ef5e6780ce307270e741cb309","modified":1671716983596},{"_id":"themes/fluid/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1671716983596},{"_id":"themes/fluid/.gitignore","hash":"9ede98b8d9dca802f82f651afb3b0366d69f05f1","modified":1671716983596},{"_id":"themes/fluid/LICENSE","hash":"694fb3659a4331dd752bd92e4248623bff8617cd","modified":1671716983596},{"_id":"themes/fluid/.eslintrc","hash":"3df89453e1f63051fafc90f16a8d83951050e316","modified":1671716983596},{"_id":"themes/fluid/languages/de.yml","hash":"288f649c2c2314eb610693b18853ee74f0541e87","modified":1671716983611},{"_id":"themes/fluid/package.json","hash":"40e3a3fea5dedbc09e859a2ea6ce271004a57e87","modified":1671716983611},{"_id":"themes/fluid/languages/en.yml","hash":"31f2867619a768606166778d4ee51f3d00ac33a0","modified":1671716983611},{"_id":"themes/fluid/README_en.md","hash":"2b47ed68ec888dcc34fa6aad9ce95aeba6744fec","modified":1671716983596},{"_id":"themes/fluid/languages/eo.yml","hash":"2c1c481d9af116e79fe55a0aa0bdbb143a97f559","modified":1671716983611},{"_id":"themes/fluid/languages/ja.yml","hash":"dc43be11a300893ebef47283c22f2f946ca21260","modified":1671716983611},{"_id":"themes/fluid/layout/404.ejs","hash":"79a598e43c40d48b23076361720f1e77df466e41","modified":1671716983611},{"_id":"themes/fluid/languages/zh-CN.yml","hash":"3b92f4428d66c31610f6cde13b82ee723aff00d2","modified":1671716983611},{"_id":"themes/fluid/_config.yml","hash":"62771c00de3fb439a6cdb9210f90241f29d34799","modified":1671716983596},{"_id":"themes/fluid/languages/zh-TW.yml","hash":"de9b7e729d72eee9327671c3d5df0a607c4c3257","modified":1671716983611},{"_id":"themes/fluid/layout/archive.ejs","hash":"7a1e19dec37804927f0d331d7e6c80ed03becd61","modified":1671716983611},{"_id":"themes/fluid/layout/category.ejs","hash":"dd2bd15cbd811d6ea973b6e6a17d99e36151e274","modified":1671716983611},{"_id":"themes/fluid/layout/about.ejs","hash":"5b6de01c82b14834ab1e67f0a803612f5855f064","modified":1671716983611},{"_id":"themes/fluid/_config_bak.yml","hash":"7f7214d0c5616fdeb46cbe59217fcfe1410fe94b","modified":1671716983611},{"_id":"themes/fluid/layout/index.ejs","hash":"bd118b6f7bd882a2ff896a1c4bc7bfa1c7694568","modified":1671716983611},{"_id":"themes/fluid/layout/categories.ejs","hash":"e7733779366ff6402615d96d4195f1196fa8351d","modified":1671716983611},{"_id":"themes/fluid/layout/layout.ejs","hash":"a1cea9b8fe0954d5a8d89941404f31ac344a4f5b","modified":1671716983611},{"_id":"themes/fluid/layout/page.ejs","hash":"f867e69e563b8ad83054714f73d9173ea050d93b","modified":1671716983611},{"_id":"themes/fluid/scripts/events/index.js","hash":"91defe82d50a317903411f0b260da0f140f43dc4","modified":1671716983611},{"_id":"themes/fluid/scripts/generators/local-search.js","hash":"bda7fbe58082a2a02c0db066794b791b14462271","modified":1671716983611},{"_id":"themes/fluid/layout/tag.ejs","hash":"3a9296eb7181e8b3fb0cdc60cbafc815b98d6f51","modified":1671716983611},{"_id":"themes/fluid/layout/links.ejs","hash":"76807f949aaa20983b89efc9e6bc39108d022ac3","modified":1671716983611},{"_id":"themes/fluid/scripts/generators/pages.js","hash":"a2a15ea722863aba09dcad578558432682a3b6b3","modified":1671716983611},{"_id":"themes/fluid/scripts/filters/post-filter.js","hash":"cb72e5acfba882a6eacd6cae8db3238bb078737a","modified":1671716983611},{"_id":"themes/fluid/scripts/filters/locals.js","hash":"2340a576635b16fd2456b3494f5afe89cd7764db","modified":1671716983611},{"_id":"themes/fluid/layout/tags.ejs","hash":"b7c1a6d8fc1097fc16d2300260297013cb692153","modified":1671716983611},{"_id":"themes/fluid/scripts/helpers/export-config.js","hash":"a26549407de10b994d1f6e37ba8fecf9dd4622de","modified":1671716983611},{"_id":"themes/fluid/scripts/helpers/url.js","hash":"f713ddb6c8018ec7b96d3567057f1f932609beea","modified":1671716983627},{"_id":"themes/fluid/scripts/tags/button.js","hash":"e1d0caed12e7cd9a35cf64272c41854b2901a58f","modified":1671716983627},{"_id":"themes/fluid/scripts/helpers/page.js","hash":"49b2c6449d7be35739c6cfea3cab4e790580983a","modified":1671716983627},{"_id":"themes/fluid/scripts/helpers/utils.js","hash":"b6ccfffdee010ebd60cd8cc2386c43db076b6ca1","modified":1671716983627},{"_id":"themes/fluid/scripts/helpers/wordcount.js","hash":"9c01393f446c490c56b6b0d482aaa8d97cc8b717","modified":1671716983627},{"_id":"themes/fluid/layout/post.ejs","hash":"edfeb655895027d15334d009324d27a29926cc94","modified":1671716983611},{"_id":"themes/fluid/scripts/utils/compare-versions.js","hash":"37f90bd4e35ce49457dc2a348b9f66e0b242c014","modified":1671716983627},{"_id":"themes/fluid/scripts/tags/checkbox.js","hash":"dac0e08eaa3614a6fd9ddbdfb4584094b1bdb30a","modified":1671716983627},{"_id":"themes/fluid/scripts/tags/group-image.js","hash":"cc176cc1d7e7cc28cedf8397ae748c691d140be2","modified":1671716983627},{"_id":"themes/fluid/scripts/utils/object.js","hash":"d798779ec79a53ce04b8ac79efd5d064981d95bd","modified":1671716983627},{"_id":"themes/fluid/scripts/utils/url-join.js","hash":"dbdb10b23fcd3928e86a4cb46fa3455e060b4aa0","modified":1671716983627},{"_id":"themes/fluid/scripts/tags/label.js","hash":"6c5916d86c63795c7e910bf614b0e7ece5073702","modified":1671716983627},{"_id":"themes/fluid/scripts/tags/note.js","hash":"8020acc2c4bb3a2054e3cb349fac7cd10b79a0be","modified":1671716983627},{"_id":"themes/fluid/scripts/tags/mermaid.js","hash":"dbfe59fde77d87b1d7d0c46480a2a729010988eb","modified":1671716983627},{"_id":"themes/fluid/source/css/main.styl","hash":"bf536db598434c36cc0c752196bfde46e584a92e","modified":1671716983627},{"_id":"themes/fluid/source/xml/local-search.xml","hash":"85fcc23b4db654a7f91fc55b6fb0442bb3ed3a9a","modified":1671716983658},{"_id":"themes/fluid/layout/_partial/archive-list.ejs","hash":"780117f8032df3b52169a387658a13cc025a0e13","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/beian.ejs","hash":"904971bf3419bec46de416c27dceb39a73063f33","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/footer.ejs","hash":"9af7ff960a421933169162ea1a2cd7e7577b0ed7","modified":1671716983611},{"_id":"themes/fluid/source/css/gitalk.css","hash":"1fe60b2ab1d704f5a4f55e700dca5b8785fb390e","modified":1671716983627},{"_id":"themes/fluid/layout/_partial/css.ejs","hash":"a137110fe5c4c13eb189dc53fe270c0d390a97e0","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/paginator.ejs","hash":"0d443f23c459787338917900f50fec1c8b3b3bdd","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/head.ejs","hash":"b7d5b438e2eeb624aecd86f3b321466834deac11","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/post-meta.ejs","hash":"010b8b5ff2d1ae178cfba83a6c95d6345b053617","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/nav.ejs","hash":"2af4653ed3fefdbcb12c16a6d2fa166d14672845","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/scripts.ejs","hash":"00cdbf4c5e25a7f0c461ef460ae1af28c29e4712","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/search.ejs","hash":"bea21f1b5de61badd6c068080315c201fc80bc36","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/statistics.ejs","hash":"a70c26e415a27f07f38b9384e7eb48d1f2b30328","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/toc.ejs","hash":"76e6bc368cf46d4103ea9514699e10ec0b9a4b56","modified":1671716983611},{"_id":"themes/fluid/source/img/def.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1671716983627},{"_id":"themes/fluid/source/img/favicon.png","hash":"0a0400d44932a55329cf15fa05c749f1e7ed74bb","modified":1671716983627},{"_id":"themes/fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1671716983627},{"_id":"themes/fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1671716983627},{"_id":"themes/fluid/source/img/private.png","hash":"fa159f85b69982c96dda52c1d9df9c363c902587","modified":1671716983643},{"_id":"themes/fluid/source/img/default.png","hash":"7bb2b8ee07db305bcadee2985b81b942027ae940","modified":1671716983627},{"_id":"themes/fluid/source/img/spring.png","hash":"f2a10532939c064e2a7a381b3dad89f175455503","modified":1671716983643},{"_id":"themes/fluid/source/js/boot.js","hash":"5264c0d2eb73b4948ee6bcb1bd847a924d906088","modified":1671716983658},{"_id":"themes/fluid/source/js/img-lazyload.js","hash":"67f6250f98b36a6599ea982d11cbb060c5ffb92a","modified":1671716983658},{"_id":"themes/fluid/source/js/color-schema.js","hash":"719296a8b6e1b76ec682554fb3dbcc75a2a2d78d","modified":1671716983658},{"_id":"themes/fluid/source/js/leancloud.js","hash":"9115c754794bfd20e84b61f3beb1ec37773b4c0c","modified":1671716983658},{"_id":"themes/fluid/source/js/events.js","hash":"2c40be98f3471427626b9130fd231bc7e9a66d03","modified":1671716983658},{"_id":"themes/fluid/scripts/events/lib/compatible-configs.js","hash":"c0da20f9adca2761d370cc6dda013ec1ecbb7710","modified":1671716983611},{"_id":"themes/fluid/scripts/events/lib/footnote.js","hash":"13d8466cd4c98367131b5f3d6a30b3d4ce8de26f","modified":1671716983611},{"_id":"themes/fluid/scripts/events/lib/hello.js","hash":"1a262c15896663dba773a1796f637f6484f3e524","modified":1671716983611},{"_id":"themes/fluid/scripts/events/lib/highlight.js","hash":"af80de29f06b4f64c31fe070a2af292876717ee1","modified":1671716983611},{"_id":"themes/fluid/source/js/local-search.js","hash":"90d7eb35aff2994fa173abeed7ce0c91357f5979","modified":1671716983658},{"_id":"themes/fluid/scripts/events/lib/lazyload.js","hash":"c9696633f77dd8055e900497469f9e64eca4d97f","modified":1671716983611},{"_id":"themes/fluid/scripts/events/lib/merge-configs.js","hash":"3f2dba4959b27466521de97eff692815650c02b7","modified":1671716983611},{"_id":"themes/fluid/source/css/_functions/base.styl","hash":"171697018fd384fce0834875ca94b91f16564cac","modified":1671716983627},{"_id":"themes/fluid/source/js/plugins.js","hash":"75b1d3e58fdfc5230608a0f7d116e41c93050cef","modified":1671716983658},{"_id":"themes/fluid/source/css/_custom/gundongtiao.css","hash":"c1eca48b735e9c863bedc786ddc704490475c5f5","modified":1671716983627},{"_id":"themes/fluid/source/js/utils.js","hash":"a2da89bb185fcd9de7a834e862b03548f5efcd04","modified":1671716983658},{"_id":"themes/fluid/source/css/_mixins/base.styl","hash":"046979dbd8cdabd21d89f9c1d8f1bb3f2fd06d6f","modified":1671716983627},{"_id":"themes/fluid/source/css/_custom/qipao.js","hash":"41c2ad7a14582a4aafe3b06d8f8768a745d72734","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/pages.styl","hash":"92c062cf55457b6549497244d09ec34e9c0c95c2","modified":1671716983627},{"_id":"themes/fluid/source/css/_variables/base.styl","hash":"35179cd560f9919376abdcf99e0d23f20e18e84f","modified":1671716983627},{"_id":"themes/fluid/source/css/_custom/yinghua.js","hash":"a22409a20371445b5f560b545cab61a6bf7d1ace","modified":1671716983627},{"_id":"themes/fluid/layout/_partial/comments/changyan.ejs","hash":"0c410ef79785897c8de3da333b057a2936fd569b","modified":1671716983611},{"_id":"themes/fluid/source/css/_custom/timeDate.js","hash":"c494e7ad9f60d6c06fe6a68366d07ddc65e7fb87","modified":1671716983627},{"_id":"themes/fluid/layout/_partial/comments/livere.ejs","hash":"bcceafab01fe695c59951d939f7cef502f3d7b48","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/comments/cusdis.ejs","hash":"1e93ca89777e4beb0f0e5cb70e03aab48e958542","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/comments/disqus.ejs","hash":"79ec17eec6e15076c685688e740230e92c66efa9","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/comments/gitalk.ejs","hash":"7f04e5c22821bb94da791973d9c6692b03bac81d","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/comments/remark42.ejs","hash":"45c879768b40ba56af62e18ad54bffbf73a6f3a1","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/comments/twikoo.ejs","hash":"93d47bc528bf1a3d0fe950fc21a2da787e1b7dc9","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/comments/utterances.ejs","hash":"d1e86754c9560f7346200b2aa9a7f715a3fac82b","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/comments/valine.ejs","hash":"bd2b8843094966dbc96c3768b4858c6e241a59a9","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/plugins/analytics.ejs","hash":"d20f54bf2fd5cd274b4b9c5542eafbfec5120838","modified":1671716983611},{"_id":"themes/fluid/source/css/_pages/_about/about.styl","hash":"8ba5fb6a8ced1de6f7893184bf12f4021fe22595","modified":1671716983627},{"_id":"themes/fluid/layout/_partial/plugins/mermaid.ejs","hash":"fd1f78287c868ccab78b6244b66e3f9b0968c4a8","modified":1671716983611},{"_id":"themes/fluid/source/css/_pages/_archive/archive.styl","hash":"86926a80bf6f39a7f47789b1a8f44b5984b4683f","modified":1671716983627},{"_id":"themes/fluid/layout/_partial/comments/waline.ejs","hash":"d81bfb2f594d597f0e176abc09a76f3f58b98c2e","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/plugins/nprogress.ejs","hash":"47c1df255aa552ad71ef3e57deca46530a8f2802","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/plugins/math.ejs","hash":"80cdaa9da8770568af5bb06a66829dddf1d683d2","modified":1671716983611},{"_id":"themes/fluid/layout/_partial/plugins/typed.ejs","hash":"842da2fc1c99a3fb887b5e36b76625c9a1b3401a","modified":1671716983611},{"_id":"themes/fluid/source/css/_pages/_category/categories.styl","hash":"0924e35eff2ec84e2d9e4772abccda452d9463ef","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_post/post.styl","hash":"cd81947721c5aecc1cc8d4658599837701ef8af3","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_links/links.styl","hash":"2eaac14a1af09cf6a1ab24201e182ac2aca40385","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_index/index.styl","hash":"4123f77c742d94e903f7196350c830cbccf8669a","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_post/tag_plugin.styl","hash":"10fcf4291b6efd5036214b7dde57ed2e3878fc1a","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_tag/tags.styl","hash":"29e9b72cfda2f2baf9cf2597fcd7f9e66303a9bd","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_base/base.styl","hash":"0d6d39709999c8e1786ed64c6f5bbdc4acd21813","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_base/color-schema.styl","hash":"ed0f3aae95edac702ed497f6e8a76b33f39f8c89","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_base/inline.styl","hash":"6f2a3b8af2793dd831f661c6db0ccbe0a62ccc48","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_base/keyframes.styl","hash":"58a7f8f2baea2d58cf5f7edfc91314ee5d7156ca","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_base/_widget/board.styl","hash":"bb9cdde191b9b1287ba19414bab862f30be6a8a0","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"41935973a66c14ab2bea0539d4b1f15c62534fa4","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_base/rewrite.styl","hash":"67103d8eb96cd94d185c00011b809eecdb88823a","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_base/_widget/banner.styl","hash":"da823846f0896f16b21c7430f047f7222a89cd10","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_base/_widget/header.styl","hash":"f770c5c3ee89421e9e3f1313ca5bd07a2448f400","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"04447d3b673be84a1af1dc57933a3c41dd7c0cfe","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_base/_widget/copy-btn.styl","hash":"c398892fba1494dd6fd417415076458ed321d34d","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_base/_widget/search.styl","hash":"1f4e678d7219815ab62de1b92ec75e021247f90b","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footer.styl","hash":"e77f5c5d5da17a7e6241cca0e1d4e8cd07169c64","modified":1671716983627},{"_id":"themes/fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"e568f308df26465e0432197e8b57384707470f54","modified":1671716983627},{"_id":"themes/fluid/source/img/qinglong.png","hash":"77aee321770ec2608671addd1cb01f7adb15e14b","modified":1671716983643},{"_id":"themes/fluid/source/img/avatar.png","hash":"217c72d42e74196a613b74bf2dcffbc1723ab09a","modified":1671716983627},{"_id":"themes/fluid/source/img/wallhaven-k71ql1.jpg","hash":"11eeddab1ea011eab2db209664f696130c311981","modified":1671716983658},{"_id":"themes/fluid/source/img/wallhaven-1kewy3.jpg","hash":"0104bb06e8d08c2fb3278d9f8badb1d8ac13ebf1","modified":1671716983643},{"_id":"public/local-search.xml","hash":"b47222ee1c545c4cba3f283f658b13150708eb85","modified":1674184800022},{"_id":"public/about/index.html","hash":"6b4f21218c3182f67d9a63a67c476f382b857d0b","modified":1674184800022},{"_id":"public/tags/index.html","hash":"db6644cfc80f4fd78e330c1561b5dc3a5ac26db7","modified":1674184800022},{"_id":"public/2022/12/03/kubectl备忘录/index.html","hash":"884747dbc131dadb39cab1f2f451b02a24f0afad","modified":1674184800022},{"_id":"public/archives/index.html","hash":"7e9fb6652f5ae8be2cfff763e722e24fff517726","modified":1674184800022},{"_id":"public/archives/page/2/index.html","hash":"a5e9be7fd1c51990787f080ed18b063a76dcf122","modified":1674184800022},{"_id":"public/archives/2022/index.html","hash":"d46bf48df06ba0707952f92bb491c9ca9d01c7e0","modified":1674184800022},{"_id":"public/archives/2022/page/2/index.html","hash":"7e1941b3f45290beab598912129ef9de2779da71","modified":1674184800022},{"_id":"public/archives/2022/04/index.html","hash":"81ac7a33cd133325215493a723b103e76bc55a7f","modified":1674184800022},{"_id":"public/archives/2022/04/page/2/index.html","hash":"1074dba79455e63faaef032862e4db899bd2f52d","modified":1674184800022},{"_id":"public/archives/2022/05/index.html","hash":"5f2a743ac590ff5755e6e97bdeccb1d6d0b737b2","modified":1674184800022},{"_id":"public/archives/2022/09/index.html","hash":"403c08a14697ef87079be5a74c6a28be845037dd","modified":1674184800022},{"_id":"public/archives/2022/11/index.html","hash":"b2a118f99deb0c29c4d2a03b267990a7c487b0d6","modified":1674184800022},{"_id":"public/archives/2022/12/index.html","hash":"658b494b4be1c2e92c9103485923b7553625ef17","modified":1674184800022},{"_id":"public/categories/BackEnd/index.html","hash":"dd5a0565f6d7a3a3cbf6df7a16004db2239ba2a6","modified":1674184800022},{"_id":"public/categories/docker/index.html","hash":"5ef5e69100a39f43bfcd1f1880d2475ad958443f","modified":1674184800022},{"_id":"public/categories/Linux/index.html","hash":"6a65128de1f673141be860b8c6af6ad93381b00f","modified":1674184800022},{"_id":"public/categories/git/index.html","hash":"b45849b079e560243734825efe1dbe9b335a1e55","modified":1674184800022},{"_id":"public/categories/kubernetes/index.html","hash":"52925558ac783f6b5cf72cea3286567dddfa18e6","modified":1674184800022},{"_id":"public/categories/blog/index.html","hash":"e372535e9d768789de523e615d73b37e482b4ef4","modified":1674184800022},{"_id":"public/categories/Proxy/index.html","hash":"85d8661e5a943ba9e73b1117cd2ddb5b082de844","modified":1674184800022},{"_id":"public/categories/SQL/index.html","hash":"34fa30675e35892c4c904888cce86ff8bfcb8c29","modified":1674184800022},{"_id":"public/categories/FrontEnd/index.html","hash":"9a98acb5a7d3dd388b8669f671b3485aca394f2c","modified":1674184800022},{"_id":"public/categories/Windows/index.html","hash":"3a5a4b988f145f11e9cabf399d01f876f35db8fc","modified":1674184800022},{"_id":"public/tags/docker/index.html","hash":"273278c7a0584daac503e84fc4af53caf164331f","modified":1674184800022},{"_id":"public/tags/BackEnd/index.html","hash":"427d86488499992d0fe1e52ee7b8afa25d3123d5","modified":1674184800022},{"_id":"public/tags/Linux/index.html","hash":"67a59aefb58cd12cdb40e15ab4fb5cfbd62b8d64","modified":1674184800022},{"_id":"public/categories/index.html","hash":"c54335a4a0f52e3f3b4ae1027b32c71ffd3cdafc","modified":1674184800022},{"_id":"public/2022/11/11/etcd/index.html","hash":"86ab46a378368da28c80aa2a4dc04e01669a8279","modified":1674184800022},{"_id":"public/2022/09/10/Linux/index.html","hash":"7e853c542e313742cb86673dbd792e9704598bab","modified":1674184800022},{"_id":"public/2022/09/10/windows笔记/index.html","hash":"eb63b5330b52615fa00770f6050547680d5140f3","modified":1674184800022},{"_id":"public/2022/09/03/PrivateBin/index.html","hash":"c473b3d6a709487c999494ff54ca9644dd53f936","modified":1674184800022},{"_id":"public/2022/09/03/docker安装笔记/index.html","hash":"6313263d5eaf6a265d2c44171917c9e5024b5e28","modified":1674184800022},{"_id":"public/2022/05/07/go/index.html","hash":"20187464d40d4ed2f672f79d05ad66ee18dd5297","modified":1674184800022},{"_id":"public/2022/04/21/使用ql薅羊毛/index.html","hash":"8b839e964941de8ec2eb1891167a7a9a1c60eb77","modified":1674184800022},{"_id":"public/2022/04/16/ssl/index.html","hash":"72d9b43bf71f16bbedc035496fa20b1486fc2182","modified":1674184800022},{"_id":"public/2022/04/16/Java脚手架archetype/index.html","hash":"0679caf0b7f1bb3aa7c41cc43f85d36930510044","modified":1674184800022},{"_id":"public/2022/04/16/kubernetes更新证书100年/index.html","hash":"d93f03d609576e8fd6cdaea2c57212245e432206","modified":1674184800022},{"_id":"public/2022/04/10/hexo搭建教程/index.html","hash":"8592b9ecb9b13555cc87b16ca3b0e89739f8c5a0","modified":1674184800022},{"_id":"public/2022/04/10/docker-compose安装笔记/index.html","hash":"f84a0cf1664acd2b82be7a73579677949d83707f","modified":1674184800022},{"_id":"public/2022/04/10/git/index.html","hash":"a3362b9baf2474bafb430755eb67d18c4d0b9e9b","modified":1674184800022},{"_id":"public/2022/04/10/kubernetes笔记/index.html","hash":"8f0f22ad887bf88610b8fe888a56e42acdc10150","modified":1674184800022},{"_id":"public/2022/04/10/network-agent/index.html","hash":"87dde3b0991021be0a027bc22e6a206e0c3315bf","modified":1674184800022},{"_id":"public/2022/04/10/npm/index.html","hash":"ca89e8e42630be0ed4de49307f7e3ec488c525a3","modified":1674184800022},{"_id":"public/2022/04/10/sql/index.html","hash":"c583e909a034a5ebad26fd296cc57b812830a186","modified":1674184800022},{"_id":"public/tags/git/index.html","hash":"59b93d7ed46fe845d5663d433deaa620c723ab29","modified":1674184800022},{"_id":"public/tags/kubernetes/index.html","hash":"a097556bcb55625fcee00dc74d762a7da685b2f6","modified":1674184800022},{"_id":"public/tags/blog/index.html","hash":"520f65de4c5294384dae047a097afcf36b80fb24","modified":1674184800022},{"_id":"public/tags/Proxy/index.html","hash":"3397e5117e88799d88acd5b05377a6baee2bbdd7","modified":1674184800022},{"_id":"public/tags/FrontEnd/index.html","hash":"a29a1d63b28e58e25f14ad69229a6f5ea153589c","modified":1674184800022},{"_id":"public/tags/SQL/index.html","hash":"6ae7ebd07c9f90e2b9f468535ae467050aad1a03","modified":1674184800022},{"_id":"public/404.html","hash":"b5d62ef71a41ef44f09af6d7393a2764747fb09e","modified":1674184800022},{"_id":"public/tags/Windows/index.html","hash":"fa65a616b9d6b4abd37a714957050bc10a759660","modified":1674184800022},{"_id":"public/links/index.html","hash":"92187504be27b53ab68c816bd94c3bc554087298","modified":1674184800022},{"_id":"public/index.html","hash":"c2a3f4f7088d8ef8978b3a2e5dceb15eba5d35c3","modified":1674184800022},{"_id":"public/xml/local-search.xml","hash":"85fcc23b4db654a7f91fc55b6fb0442bb3ed3a9a","modified":1674184800022},{"_id":"public/img/def.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1674184800022},{"_id":"public/img/favicon.png","hash":"0a0400d44932a55329cf15fa05c749f1e7ed74bb","modified":1674184800022},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1674184800022},{"_id":"public/img/default.png","hash":"7bb2b8ee07db305bcadee2985b81b942027ae940","modified":1674184800022},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1674184800022},{"_id":"public/img/private.png","hash":"fa159f85b69982c96dda52c1d9df9c363c902587","modified":1674184800022},{"_id":"public/img/spring.png","hash":"f2a10532939c064e2a7a381b3dad89f175455503","modified":1674184800022},{"_id":"public/img/qinglong.png","hash":"77aee321770ec2608671addd1cb01f7adb15e14b","modified":1674184800022},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1674184800022},{"_id":"public/js/boot.js","hash":"3de344ee619da989f6dccf7c2ae459fe91075983","modified":1674184800022},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1674184800022},{"_id":"public/js/color-schema.js","hash":"f1fdd512f3ef92ff5db4a49f5a3143d5ddea9858","modified":1674184800022},{"_id":"public/js/events.js","hash":"4b9d2676c9544db9cc40a8c7d18456792299ba86","modified":1674184800022},{"_id":"public/js/leancloud.js","hash":"53987b7a668ea0623370eb83ed5311766221b557","modified":1674184800022},{"_id":"public/js/local-search.js","hash":"633f0142c657805359b0197f287e12ae4bcde731","modified":1674184800022},{"_id":"public/js/plugins.js","hash":"d058f30bd09b28769c4d8313428ff23dfc8d52dd","modified":1674184800022},{"_id":"public/js/utils.js","hash":"4a43f2700e91937650bef511fd438825b001c4c6","modified":1674184800022},{"_id":"public/css/main.css","hash":"63bc59b8ca4b03afa2b93883143c349d461b1052","modified":1674184800022},{"_id":"public/img/avatar.png","hash":"217c72d42e74196a613b74bf2dcffbc1723ab09a","modified":1674184800022},{"_id":"public/img/wallhaven-k71ql1.jpg","hash":"11eeddab1ea011eab2db209664f696130c311981","modified":1674184800022},{"_id":"public/img/wallhaven-1kewy3.jpg","hash":"0104bb06e8d08c2fb3278d9f8badb1d8ac13ebf1","modified":1674184800022},{"_id":"source/_posts/Kubernetes Ingress.md","hash":"548c83af5de5136dca318ea25c728d61994a0d39","modified":1674054175019},{"_id":"public/2023/01/18/Kubernetes Ingress/index.html","hash":"493fbf20df1f564a588bb165345c73156d3e5c0e","modified":1674184800022},{"_id":"public/archives/2023/index.html","hash":"1ecec606662612a4c1518dec5365287ac4da9d2b","modified":1674184800022},{"_id":"public/archives/2023/01/index.html","hash":"0a09481a8b3467069b20745a8d98e7a48d800cb0","modified":1674184800022}],"Category":[{"name":"BackEnd","_id":"clcwycosa0004h0u29s8n210b"},{"name":"docker","_id":"clcwycosf000ah0u26vqd1uul"},{"name":"Linux","_id":"clcwycosm000nh0u2f581hz2f"},{"name":"git","_id":"clcwycosq000vh0u2g4vdeyt6"},{"name":"kubernetes","_id":"clcwycosr0012h0u23vw0hbj8"},{"name":"blog","_id":"clcwycosu0019h0u2cr95ganh"},{"name":"Proxy","_id":"clcwycosy001uh0u2awnja4nj"},{"name":"FrontEnd","_id":"clcwycosz001zh0u2aa8678hu"},{"name":"SQL","_id":"clcwycosz0023h0u221c26cvx"},{"name":"Windows","_id":"clcwycot00027h0u2bpfafmnc"}],"Data":[],"Page":[{"title":"about","date":"2022-04-09T14:53:40.000Z","layout":"about","_content":"\n### 关于你\n> senhao-xu","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-04-09 22:53:40\nlayout: about\t\n---\n\n### 关于你\n> senhao-xu","updated":"2022-12-22T13:49:43.596Z","path":"about/index.html","comments":1,"_id":"clcwycos10000h0u23k9ogsk1","content":"<h3 id=\"关于你\"><a href=\"#关于你\" class=\"headerlink\" title=\"关于你\"></a>关于你</h3><blockquote>\n<p>senhao-xu</p>\n</blockquote>\n","site":{"data":{}},"wordcount":12,"excerpt":"","more":"<h3 id=\"关于你\"><a href=\"#关于你\" class=\"headerlink\" title=\"关于你\"></a>关于你</h3><blockquote>\n<p>senhao-xu</p>\n</blockquote>\n"},{"title":"分类","date":"2022-04-10T03:32:29.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2022-04-10 11:32:29\n---\n","updated":"2022-12-22T13:49:43.596Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clcwycos80002h0u24hlk7u54","content":"","site":{"data":{}},"wordcount":0,"excerpt":"","more":""},{"title":"标签","date":"2022-04-10T03:32:41.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2022-04-10 11:32:41\n---\n","updated":"2022-12-22T13:49:43.596Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clcwycosc0006h0u21z4tak18","content":"","site":{"data":{}},"wordcount":0,"excerpt":"","more":""}],"Post":[{"title":"Java脚手架archetype","date":"2022-04-16T05:23:06.000Z","description":"Java搭建企业级脚手架","_content":"## Java使用archetype搭建搭建企业级脚手架\n\n### 前言\n\nArchetype原型 也就是说为项目生成一个原型，可以把这个项目发布，其他人就可以直接通过命令构建一个原型项目了。\n\n### 搭建\n\n首先你需要有自己搭建的一个maven项目，添加你项目中经常使用的一些common，或者你需要的文件\n\n在该的项目中的pom.xml文件中添加一下信息\n\n```xml\n<build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-archetype-plugin</artifactId>\n                <version>3.0.1</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.8.1</version>\n                <configuration>\n                    <encoding>UTF-8</encoding>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n```\n\n进入该项目所在路径的终端使用`mvn archetype:create-from-project`进行构建，构建完成后便会生成一个archetype项目模板。此时你就完成了构建\n\n### 使用\n\n使用`mvn install`把该模板安装到maven，打开你的idea添加maven模板，此刻你便完成了所有操作。\n\n### 发布到maven私服\n参考该教程[地址](https://blog.csdn.net/wangshuminjava/article/details/120721369),发布完成。","source":"_posts/Java脚手架archetype.md","raw":"---\ntitle: Java脚手架archetype\ndate: 2022-04-16 13:23:06\ntags: BackEnd\ncategories: BackEnd\ndescription: Java搭建企业级脚手架\n---\n## Java使用archetype搭建搭建企业级脚手架\n\n### 前言\n\nArchetype原型 也就是说为项目生成一个原型，可以把这个项目发布，其他人就可以直接通过命令构建一个原型项目了。\n\n### 搭建\n\n首先你需要有自己搭建的一个maven项目，添加你项目中经常使用的一些common，或者你需要的文件\n\n在该的项目中的pom.xml文件中添加一下信息\n\n```xml\n<build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-archetype-plugin</artifactId>\n                <version>3.0.1</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.8.1</version>\n                <configuration>\n                    <encoding>UTF-8</encoding>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n```\n\n进入该项目所在路径的终端使用`mvn archetype:create-from-project`进行构建，构建完成后便会生成一个archetype项目模板。此时你就完成了构建\n\n### 使用\n\n使用`mvn install`把该模板安装到maven，打开你的idea添加maven模板，此刻你便完成了所有操作。\n\n### 发布到maven私服\n参考该教程[地址](https://blog.csdn.net/wangshuminjava/article/details/120721369),发布完成。","slug":"Java脚手架archetype","published":1,"updated":"2022-12-22T12:23:10.262Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcwycos50001h0u2c1ny0zc8","content":"<h2 id=\"Java使用archetype搭建搭建企业级脚手架\"><a href=\"#Java使用archetype搭建搭建企业级脚手架\" class=\"headerlink\" title=\"Java使用archetype搭建搭建企业级脚手架\"></a>Java使用archetype搭建搭建企业级脚手架</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>Archetype原型 也就是说为项目生成一个原型，可以把这个项目发布，其他人就可以直接通过命令构建一个原型项目了。</p>\n<h3 id=\"搭建\"><a href=\"#搭建\" class=\"headerlink\" title=\"搭建\"></a>搭建</h3><p>首先你需要有自己搭建的一个maven项目，添加你项目中经常使用的一些common，或者你需要的文件</p>\n<p>在该的项目中的pom.xml文件中添加一下信息</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">build</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugins</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugin</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>maven-archetype-plugin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.0.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugin</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugin</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.8.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span><br>                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">encoding</span>&gt;</span>UTF-8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">encoding</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugin</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugins</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">build</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>进入该项目所在路径的终端使用<code>mvn archetype:create-from-project</code>进行构建，构建完成后便会生成一个archetype项目模板。此时你就完成了构建</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>使用<code>mvn install</code>把该模板安装到maven，打开你的idea添加maven模板，此刻你便完成了所有操作。</p>\n<h3 id=\"发布到maven私服\"><a href=\"#发布到maven私服\" class=\"headerlink\" title=\"发布到maven私服\"></a>发布到maven私服</h3><p>参考该教程<a href=\"https://blog.csdn.net/wangshuminjava/article/details/120721369\">地址</a>,发布完成。</p>\n","site":{"data":{}},"wordcount":844,"excerpt":"","more":"<h2 id=\"Java使用archetype搭建搭建企业级脚手架\"><a href=\"#Java使用archetype搭建搭建企业级脚手架\" class=\"headerlink\" title=\"Java使用archetype搭建搭建企业级脚手架\"></a>Java使用archetype搭建搭建企业级脚手架</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>Archetype原型 也就是说为项目生成一个原型，可以把这个项目发布，其他人就可以直接通过命令构建一个原型项目了。</p>\n<h3 id=\"搭建\"><a href=\"#搭建\" class=\"headerlink\" title=\"搭建\"></a>搭建</h3><p>首先你需要有自己搭建的一个maven项目，添加你项目中经常使用的一些common，或者你需要的文件</p>\n<p>在该的项目中的pom.xml文件中添加一下信息</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">build</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugins</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugin</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>maven-archetype-plugin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.0.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugin</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plugin</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.8.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span><br>                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">encoding</span>&gt;</span>UTF-8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">encoding</span>&gt;</span><br>                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugin</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">plugins</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">build</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>进入该项目所在路径的终端使用<code>mvn archetype:create-from-project</code>进行构建，构建完成后便会生成一个archetype项目模板。此时你就完成了构建</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>使用<code>mvn install</code>把该模板安装到maven，打开你的idea添加maven模板，此刻你便完成了所有操作。</p>\n<h3 id=\"发布到maven私服\"><a href=\"#发布到maven私服\" class=\"headerlink\" title=\"发布到maven私服\"></a>发布到maven私服</h3><p>参考该教程<a href=\"https://blog.csdn.net/wangshuminjava/article/details/120721369\">地址</a>,发布完成。</p>\n"},{"title":"docker-compose安装笔记","date":"2022-04-10T05:18:34.000Z","description":"docker-compose安装笔记.","_content":"## 安装docker-compose\n\n### 下载文件\n\n#### github(国外)\n\n``` bash\nsudo curl -L \"https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose\n```\n\n#### daocloud(国内)\n\n``` bash\ncurl -L https://get.daocloud.io/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n```\n\n### 授予权限\n\n``` bash\nchmod +x /usr/local/bin/docker-compose\n```\n\n### 查看是否安装完成\n\n``` bash\ndocker-compose --version\n```\n\n## 安装zookeeper\n\n### 安装高可用zk\n\n> docker-compose.yml\n\n``` yaml\nversion: '3.1'\nservices:\n  zk1:\n    image: zookeeper\n    restart: always\n    container_name: zk1\n    ports:\n      - 2181:2181\n    volumes:\n      - /usr/local/docker/zookeeper/zk1/data:/data\n      - /usr/local/docker/zookeeper/zk1/datalog:/datalog\n    environment:\n      ZOO_MY_ID: 1\n      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=zk3:2888:3888;2181\n  zk2:\n    image: zookeeper\n    restart: always\n    container_name: zk2\n    ports:\n      - 2182:2181\n    volumes:\n      - /usr/local/docker/zookeeper/zk2/data:/data\n      - /usr/local/docker/zookeeper/zk2/datalog:/datalog\n    environment:\n      ZOO_MY_ID: 2\n      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=zk3:2888:3888;2181\n  zk3:\n    image: zookeeper\n    restart: always\n    container_name: zk3\n    ports:\n      - 2183:2181\n    volumes:\n      - /usr/local/docker/zookeeper/zk3/data:/dada\n      - /usr/local/docker/zookeeper/zk3/datalog:/datalog\n\n    environment:\n      ZOO_MY_ID: 3\n      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=zk3:2888:3888;2181\n```\n\n## 安装Mysql\n\n### 可用MySQL\n\n> docker-compose.yml\n\n``` yaml\nversion: '3'\nservices:\n  mysql-slave-lb:\n    image: nginx:alpine\n    container_name: mysql-slave-lb\n    ports:\n    - 30306:30306\n    volumes:\n    - /docker/nginx/nginx.conf:/etc/nginx/nginx.conf\n    networks:\n    - mysql\n    depends_on:\n    - mysql-master\n    - mysql-slave1\n    - mysql-slave2\n  mysql-master:\n    image: mysql:8.0.25\n    container_name: mysql-master\n    environment:\n      MYSQL_ROOT_PASSWORD: \"piesat\"\n      MASTER_SYNC_USER: \"sync_admin\" #设置脚本中定义的用于同步的账号\n      MASTER_SYNC_PASSWORD: \"piesat\" #设置脚本中定义的用于同步的密码\n      ADMIN_USER: \"root\" #当前容器用于拥有创建账号功能的数据库账号\n      ADMIN_PASSWORD: \"piesat\"\n      ALLOW_HOST: \"10.10.%.%\" #允许同步账号的host地址\n      TZ: \"Asia/Shanghai\" #解决时区问题\n    ports:\n    - 3306:3306\n    networks:\n      mysql:\n        ipv4_address: \"10.10.10.10\" #固定ip，因为从库在连接master的时候，需要设置host\n    volumes:\n    - /docker/mysql/init/master:/docker-entrypoint-initdb.d #挂载master脚本\n    command:\n    -  \"--server-id=1\"\n    -  \"--character-set-server=utf8mb4\"\n    -  \"--collation-server=utf8mb4_unicode_ci\"\n    -  \"--log-bin=mysql-bin\"\n    -  \"--sync_binlog=1\"\n  mysql-slave1:\n    image: mysql:8.0.25\n    container_name: mysql-slave1\n    environment:\n      MYSQL_ROOT_PASSWORD: \"piesat\"\n      SLAVE_SYNC_USER: \"sync_admin\" #用于同步的账号，由master创建\n      SLAVE_SYNC_PASSWORD: \"piesat\"\n      ADMIN_USER: \"root\"\n      ADMIN_PASSWORD: \"piesat\"\n      MASTER_HOST: \"10.10.10.10\" #master地址，开启主从同步需要连接master\n      TZ: \"Asia/Shanghai\" #设置时区\n    networks:\n     mysql:\n       ipv4_address: \"10.10.10.20\" #固定ip\n    volumes:\n    - /docker/mysql/slave:/docker-entrypoint-initdb.d #挂载slave脚本\n    command:\n    -  \"--server-id=2\"\n    -  \"--character-set-server=utf8mb4\"\n    -  \"--collation-server=utf8mb4_unicode_ci\"\n  mysql-slave2:\n    image: mysql:8.0.25\n    container_name: mysql-slave2\n    environment:\n      MYSQL_ROOT_PASSWORD: \"piesat\"\n      SLAVE_SYNC_USER: \"sync_admin\"\n      SLAVE_SYNC_PASSWORD: \"piesat\"\n      ADMIN_USER: \"root\"\n      ADMIN_PASSWORD: \"piesat\"\n      MASTER_HOST: \"10.10.10.10\"\n      TZ: \"Asia/Shanghai\"\n    networks:\n      mysql:\n        ipv4_address: \"10.10.10.30\" #固定ip\n    volumes:\n    - /docker/mysql/slave:/docker-entrypoint-initdb.d\n    command: #这里需要修改server-id，保证每个mysql容器的server-id都不一样\n    -  \"--server-id=3\"\n    -  \"--character-set-server=utf8mb4\"\n    -  \"--collation-server=utf8mb4_unicode_ci\"\nnetworks:\n  mysql:\n    driver: bridge\n    ipam:\n      driver: default\n      config:\n      - subnet: \"10.10.0.0/16\"\n```\n\n> nginx.conf\n\n``` bash\ncat > nginx.conf <<EOF\nuser  nginx;\nworker_processes  auto;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n# 添加stream模块，实现tcp反向代理\nstream {\n    proxy_timeout 30m;\n    upstream mysql-slave-cluster{\n      #docker-compose.yml里面会配置固定mysql-slave的ip地址，这里就填写固定的ip地址\n      server 10.10.10.20:3306 weight=1;\n      server 10.10.10.30:3306 weight=1 backup; #备用数据库，当上面的数据库挂掉之后，才会使用此数据库，也就是如果上面的数据库没有挂，则所有的流量都很转发到上面的主库\n    }\n    server {\n        listen 30306;\n        proxy_pass mysql-slave-cluster;\n    }\n}\nEOF\n```","source":"_posts/docker-compose安装笔记.md","raw":"---\ntitle: docker-compose安装笔记\ndate: 2022-04-10 13:18:34\ntags: docker\ncategories: docker\ndescription: docker-compose安装笔记.\n---\n## 安装docker-compose\n\n### 下载文件\n\n#### github(国外)\n\n``` bash\nsudo curl -L \"https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose\n```\n\n#### daocloud(国内)\n\n``` bash\ncurl -L https://get.daocloud.io/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n```\n\n### 授予权限\n\n``` bash\nchmod +x /usr/local/bin/docker-compose\n```\n\n### 查看是否安装完成\n\n``` bash\ndocker-compose --version\n```\n\n## 安装zookeeper\n\n### 安装高可用zk\n\n> docker-compose.yml\n\n``` yaml\nversion: '3.1'\nservices:\n  zk1:\n    image: zookeeper\n    restart: always\n    container_name: zk1\n    ports:\n      - 2181:2181\n    volumes:\n      - /usr/local/docker/zookeeper/zk1/data:/data\n      - /usr/local/docker/zookeeper/zk1/datalog:/datalog\n    environment:\n      ZOO_MY_ID: 1\n      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=zk3:2888:3888;2181\n  zk2:\n    image: zookeeper\n    restart: always\n    container_name: zk2\n    ports:\n      - 2182:2181\n    volumes:\n      - /usr/local/docker/zookeeper/zk2/data:/data\n      - /usr/local/docker/zookeeper/zk2/datalog:/datalog\n    environment:\n      ZOO_MY_ID: 2\n      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=zk3:2888:3888;2181\n  zk3:\n    image: zookeeper\n    restart: always\n    container_name: zk3\n    ports:\n      - 2183:2181\n    volumes:\n      - /usr/local/docker/zookeeper/zk3/data:/dada\n      - /usr/local/docker/zookeeper/zk3/datalog:/datalog\n\n    environment:\n      ZOO_MY_ID: 3\n      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=zk3:2888:3888;2181\n```\n\n## 安装Mysql\n\n### 可用MySQL\n\n> docker-compose.yml\n\n``` yaml\nversion: '3'\nservices:\n  mysql-slave-lb:\n    image: nginx:alpine\n    container_name: mysql-slave-lb\n    ports:\n    - 30306:30306\n    volumes:\n    - /docker/nginx/nginx.conf:/etc/nginx/nginx.conf\n    networks:\n    - mysql\n    depends_on:\n    - mysql-master\n    - mysql-slave1\n    - mysql-slave2\n  mysql-master:\n    image: mysql:8.0.25\n    container_name: mysql-master\n    environment:\n      MYSQL_ROOT_PASSWORD: \"piesat\"\n      MASTER_SYNC_USER: \"sync_admin\" #设置脚本中定义的用于同步的账号\n      MASTER_SYNC_PASSWORD: \"piesat\" #设置脚本中定义的用于同步的密码\n      ADMIN_USER: \"root\" #当前容器用于拥有创建账号功能的数据库账号\n      ADMIN_PASSWORD: \"piesat\"\n      ALLOW_HOST: \"10.10.%.%\" #允许同步账号的host地址\n      TZ: \"Asia/Shanghai\" #解决时区问题\n    ports:\n    - 3306:3306\n    networks:\n      mysql:\n        ipv4_address: \"10.10.10.10\" #固定ip，因为从库在连接master的时候，需要设置host\n    volumes:\n    - /docker/mysql/init/master:/docker-entrypoint-initdb.d #挂载master脚本\n    command:\n    -  \"--server-id=1\"\n    -  \"--character-set-server=utf8mb4\"\n    -  \"--collation-server=utf8mb4_unicode_ci\"\n    -  \"--log-bin=mysql-bin\"\n    -  \"--sync_binlog=1\"\n  mysql-slave1:\n    image: mysql:8.0.25\n    container_name: mysql-slave1\n    environment:\n      MYSQL_ROOT_PASSWORD: \"piesat\"\n      SLAVE_SYNC_USER: \"sync_admin\" #用于同步的账号，由master创建\n      SLAVE_SYNC_PASSWORD: \"piesat\"\n      ADMIN_USER: \"root\"\n      ADMIN_PASSWORD: \"piesat\"\n      MASTER_HOST: \"10.10.10.10\" #master地址，开启主从同步需要连接master\n      TZ: \"Asia/Shanghai\" #设置时区\n    networks:\n     mysql:\n       ipv4_address: \"10.10.10.20\" #固定ip\n    volumes:\n    - /docker/mysql/slave:/docker-entrypoint-initdb.d #挂载slave脚本\n    command:\n    -  \"--server-id=2\"\n    -  \"--character-set-server=utf8mb4\"\n    -  \"--collation-server=utf8mb4_unicode_ci\"\n  mysql-slave2:\n    image: mysql:8.0.25\n    container_name: mysql-slave2\n    environment:\n      MYSQL_ROOT_PASSWORD: \"piesat\"\n      SLAVE_SYNC_USER: \"sync_admin\"\n      SLAVE_SYNC_PASSWORD: \"piesat\"\n      ADMIN_USER: \"root\"\n      ADMIN_PASSWORD: \"piesat\"\n      MASTER_HOST: \"10.10.10.10\"\n      TZ: \"Asia/Shanghai\"\n    networks:\n      mysql:\n        ipv4_address: \"10.10.10.30\" #固定ip\n    volumes:\n    - /docker/mysql/slave:/docker-entrypoint-initdb.d\n    command: #这里需要修改server-id，保证每个mysql容器的server-id都不一样\n    -  \"--server-id=3\"\n    -  \"--character-set-server=utf8mb4\"\n    -  \"--collation-server=utf8mb4_unicode_ci\"\nnetworks:\n  mysql:\n    driver: bridge\n    ipam:\n      driver: default\n      config:\n      - subnet: \"10.10.0.0/16\"\n```\n\n> nginx.conf\n\n``` bash\ncat > nginx.conf <<EOF\nuser  nginx;\nworker_processes  auto;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n# 添加stream模块，实现tcp反向代理\nstream {\n    proxy_timeout 30m;\n    upstream mysql-slave-cluster{\n      #docker-compose.yml里面会配置固定mysql-slave的ip地址，这里就填写固定的ip地址\n      server 10.10.10.20:3306 weight=1;\n      server 10.10.10.30:3306 weight=1 backup; #备用数据库，当上面的数据库挂掉之后，才会使用此数据库，也就是如果上面的数据库没有挂，则所有的流量都很转发到上面的主库\n    }\n    server {\n        listen 30306;\n        proxy_pass mysql-slave-cluster;\n    }\n}\nEOF\n```","slug":"docker-compose安装笔记","published":1,"updated":"2022-12-22T12:22:53.358Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcwycos80003h0u25zhr8kzk","content":"<h2 id=\"安装docker-compose\"><a href=\"#安装docker-compose\" class=\"headerlink\" title=\"安装docker-compose\"></a>安装docker-compose</h2><h3 id=\"下载文件\"><a href=\"#下载文件\" class=\"headerlink\" title=\"下载文件\"></a>下载文件</h3><h4 id=\"github-国外\"><a href=\"#github-国外\" class=\"headerlink\" title=\"github(国外)\"></a>github(国外)</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo curl -L <span class=\"hljs-string\">&quot;https://github.com/docker/compose/releases/latest/download/docker-compose-<span class=\"hljs-subst\">$(uname -s)</span>-<span class=\"hljs-subst\">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose &amp;&amp; sudo <span class=\"hljs-built_in\">chmod</span> +x /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"daocloud-国内\"><a href=\"#daocloud-国内\" class=\"headerlink\" title=\"daocloud(国内)\"></a>daocloud(国内)</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">curl -L https://get.daocloud.io/docker/compose/releases/download/1.22.0/docker-compose-`<span class=\"hljs-built_in\">uname</span> -s`-`<span class=\"hljs-built_in\">uname</span> -m` &gt; /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"授予权限\"><a href=\"#授予权限\" class=\"headerlink\" title=\"授予权限\"></a>授予权限</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">chmod</span> +x /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看是否安装完成\"><a href=\"#查看是否安装完成\" class=\"headerlink\" title=\"查看是否安装完成\"></a>查看是否安装完成</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose --version<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装zookeeper\"><a href=\"#安装zookeeper\" class=\"headerlink\" title=\"安装zookeeper\"></a>安装zookeeper</h2><h3 id=\"安装高可用zk\"><a href=\"#安装高可用zk\" class=\"headerlink\" title=\"安装高可用zk\"></a>安装高可用zk</h3><blockquote>\n<p>docker-compose.yml</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&#x27;3.1&#x27;</span><br><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">zk1:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">zookeeper</span><br>    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">zk1</span><br>    <span class=\"hljs-attr\">ports:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">2181</span><span class=\"hljs-string\">:2181</span><br>    <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/usr/local/docker/zookeeper/zk1/data:/data</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/usr/local/docker/zookeeper/zk1/datalog:/datalog</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">ZOO_MY_ID:</span> <span class=\"hljs-number\">1</span><br>      <span class=\"hljs-attr\">ZOO_SERVERS:</span> <span class=\"hljs-string\">server.1=zk1:2888:3888;2181</span> <span class=\"hljs-string\">server.2=zk2:2888:3888;2181</span> <span class=\"hljs-string\">server.3=zk3:2888:3888;2181</span><br>  <span class=\"hljs-attr\">zk2:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">zookeeper</span><br>    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">zk2</span><br>    <span class=\"hljs-attr\">ports:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">2182</span><span class=\"hljs-string\">:2181</span><br>    <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/usr/local/docker/zookeeper/zk2/data:/data</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/usr/local/docker/zookeeper/zk2/datalog:/datalog</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">ZOO_MY_ID:</span> <span class=\"hljs-number\">2</span><br>      <span class=\"hljs-attr\">ZOO_SERVERS:</span> <span class=\"hljs-string\">server.1=zk1:2888:3888;2181</span> <span class=\"hljs-string\">server.2=zk2:2888:3888;2181</span> <span class=\"hljs-string\">server.3=zk3:2888:3888;2181</span><br>  <span class=\"hljs-attr\">zk3:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">zookeeper</span><br>    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">zk3</span><br>    <span class=\"hljs-attr\">ports:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">2183</span><span class=\"hljs-string\">:2181</span><br>    <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/usr/local/docker/zookeeper/zk3/data:/dada</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/usr/local/docker/zookeeper/zk3/datalog:/datalog</span><br><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">ZOO_MY_ID:</span> <span class=\"hljs-number\">3</span><br>      <span class=\"hljs-attr\">ZOO_SERVERS:</span> <span class=\"hljs-string\">server.1=zk1:2888:3888;2181</span> <span class=\"hljs-string\">server.2=zk2:2888:3888;2181</span> <span class=\"hljs-string\">server.3=zk3:2888:3888;2181</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装Mysql\"><a href=\"#安装Mysql\" class=\"headerlink\" title=\"安装Mysql\"></a>安装Mysql</h2><h3 id=\"可用MySQL\"><a href=\"#可用MySQL\" class=\"headerlink\" title=\"可用MySQL\"></a>可用MySQL</h3><blockquote>\n<p>docker-compose.yml</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&#x27;3&#x27;</span><br><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">mysql-slave-lb:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx:alpine</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">mysql-slave-lb</span><br>    <span class=\"hljs-attr\">ports:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">30306</span><span class=\"hljs-string\">:30306</span><br>    <span class=\"hljs-attr\">volumes:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/docker/nginx/nginx.conf:/etc/nginx/nginx.conf</span><br>    <span class=\"hljs-attr\">networks:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">mysql</span><br>    <span class=\"hljs-attr\">depends_on:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">mysql-master</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">mysql-slave1</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">mysql-slave2</span><br>  <span class=\"hljs-attr\">mysql-master:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">mysql:8.0.25</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">mysql-master</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">MYSQL_ROOT_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">MASTER_SYNC_USER:</span> <span class=\"hljs-string\">&quot;sync_admin&quot;</span> <span class=\"hljs-comment\">#设置脚本中定义的用于同步的账号</span><br>      <span class=\"hljs-attr\">MASTER_SYNC_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span> <span class=\"hljs-comment\">#设置脚本中定义的用于同步的密码</span><br>      <span class=\"hljs-attr\">ADMIN_USER:</span> <span class=\"hljs-string\">&quot;root&quot;</span> <span class=\"hljs-comment\">#当前容器用于拥有创建账号功能的数据库账号</span><br>      <span class=\"hljs-attr\">ADMIN_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">ALLOW_HOST:</span> <span class=\"hljs-string\">&quot;10.10.%.%&quot;</span> <span class=\"hljs-comment\">#允许同步账号的host地址</span><br>      <span class=\"hljs-attr\">TZ:</span> <span class=\"hljs-string\">&quot;Asia/Shanghai&quot;</span> <span class=\"hljs-comment\">#解决时区问题</span><br>    <span class=\"hljs-attr\">ports:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">3306</span><span class=\"hljs-string\">:3306</span><br>    <span class=\"hljs-attr\">networks:</span><br>      <span class=\"hljs-attr\">mysql:</span><br>        <span class=\"hljs-attr\">ipv4_address:</span> <span class=\"hljs-string\">&quot;10.10.10.10&quot;</span> <span class=\"hljs-comment\">#固定ip，因为从库在连接master的时候，需要设置host</span><br>    <span class=\"hljs-attr\">volumes:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/docker/mysql/init/master:/docker-entrypoint-initdb.d</span> <span class=\"hljs-comment\">#挂载master脚本</span><br>    <span class=\"hljs-attr\">command:</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--server-id=1&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--character-set-server=utf8mb4&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--collation-server=utf8mb4_unicode_ci&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--log-bin=mysql-bin&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--sync_binlog=1&quot;</span><br>  <span class=\"hljs-attr\">mysql-slave1:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">mysql:8.0.25</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">mysql-slave1</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">MYSQL_ROOT_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">SLAVE_SYNC_USER:</span> <span class=\"hljs-string\">&quot;sync_admin&quot;</span> <span class=\"hljs-comment\">#用于同步的账号，由master创建</span><br>      <span class=\"hljs-attr\">SLAVE_SYNC_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">ADMIN_USER:</span> <span class=\"hljs-string\">&quot;root&quot;</span><br>      <span class=\"hljs-attr\">ADMIN_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">MASTER_HOST:</span> <span class=\"hljs-string\">&quot;10.10.10.10&quot;</span> <span class=\"hljs-comment\">#master地址，开启主从同步需要连接master</span><br>      <span class=\"hljs-attr\">TZ:</span> <span class=\"hljs-string\">&quot;Asia/Shanghai&quot;</span> <span class=\"hljs-comment\">#设置时区</span><br>    <span class=\"hljs-attr\">networks:</span><br>     <span class=\"hljs-attr\">mysql:</span><br>       <span class=\"hljs-attr\">ipv4_address:</span> <span class=\"hljs-string\">&quot;10.10.10.20&quot;</span> <span class=\"hljs-comment\">#固定ip</span><br>    <span class=\"hljs-attr\">volumes:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/docker/mysql/slave:/docker-entrypoint-initdb.d</span> <span class=\"hljs-comment\">#挂载slave脚本</span><br>    <span class=\"hljs-attr\">command:</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--server-id=2&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--character-set-server=utf8mb4&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--collation-server=utf8mb4_unicode_ci&quot;</span><br>  <span class=\"hljs-attr\">mysql-slave2:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">mysql:8.0.25</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">mysql-slave2</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">MYSQL_ROOT_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">SLAVE_SYNC_USER:</span> <span class=\"hljs-string\">&quot;sync_admin&quot;</span><br>      <span class=\"hljs-attr\">SLAVE_SYNC_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">ADMIN_USER:</span> <span class=\"hljs-string\">&quot;root&quot;</span><br>      <span class=\"hljs-attr\">ADMIN_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">MASTER_HOST:</span> <span class=\"hljs-string\">&quot;10.10.10.10&quot;</span><br>      <span class=\"hljs-attr\">TZ:</span> <span class=\"hljs-string\">&quot;Asia/Shanghai&quot;</span><br>    <span class=\"hljs-attr\">networks:</span><br>      <span class=\"hljs-attr\">mysql:</span><br>        <span class=\"hljs-attr\">ipv4_address:</span> <span class=\"hljs-string\">&quot;10.10.10.30&quot;</span> <span class=\"hljs-comment\">#固定ip</span><br>    <span class=\"hljs-attr\">volumes:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/docker/mysql/slave:/docker-entrypoint-initdb.d</span><br>    <span class=\"hljs-attr\">command:</span> <span class=\"hljs-comment\">#这里需要修改server-id，保证每个mysql容器的server-id都不一样</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--server-id=3&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--character-set-server=utf8mb4&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--collation-server=utf8mb4_unicode_ci&quot;</span><br><span class=\"hljs-attr\">networks:</span><br>  <span class=\"hljs-attr\">mysql:</span><br>    <span class=\"hljs-attr\">driver:</span> <span class=\"hljs-string\">bridge</span><br>    <span class=\"hljs-attr\">ipam:</span><br>      <span class=\"hljs-attr\">driver:</span> <span class=\"hljs-string\">default</span><br>      <span class=\"hljs-attr\">config:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">subnet:</span> <span class=\"hljs-string\">&quot;10.10.0.0/16&quot;</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>nginx.conf</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> &gt; nginx.conf &lt;&lt;<span class=\"hljs-string\">EOF</span><br><span class=\"hljs-string\">user  nginx;</span><br><span class=\"hljs-string\">worker_processes  auto;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">error_log  /var/log/nginx/error.log warn;</span><br><span class=\"hljs-string\">pid        /var/run/nginx.pid;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">events &#123;</span><br><span class=\"hljs-string\">    worker_connections  1024;</span><br><span class=\"hljs-string\">&#125;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\"># 添加stream模块，实现tcp反向代理</span><br><span class=\"hljs-string\">stream &#123;</span><br><span class=\"hljs-string\">    proxy_timeout 30m;</span><br><span class=\"hljs-string\">    upstream mysql-slave-cluster&#123;</span><br><span class=\"hljs-string\">      #docker-compose.yml里面会配置固定mysql-slave的ip地址，这里就填写固定的ip地址</span><br><span class=\"hljs-string\">      server 10.10.10.20:3306 weight=1;</span><br><span class=\"hljs-string\">      server 10.10.10.30:3306 weight=1 backup; #备用数据库，当上面的数据库挂掉之后，才会使用此数据库，也就是如果上面的数据库没有挂，则所有的流量都很转发到上面的主库</span><br><span class=\"hljs-string\">    &#125;</span><br><span class=\"hljs-string\">    server &#123;</span><br><span class=\"hljs-string\">        listen 30306;</span><br><span class=\"hljs-string\">        proxy_pass mysql-slave-cluster;</span><br><span class=\"hljs-string\">    &#125;</span><br><span class=\"hljs-string\">&#125;</span><br><span class=\"hljs-string\">EOF</span><br></code></pre></td></tr></table></figure>","site":{"data":{}},"wordcount":4433,"excerpt":"","more":"<h2 id=\"安装docker-compose\"><a href=\"#安装docker-compose\" class=\"headerlink\" title=\"安装docker-compose\"></a>安装docker-compose</h2><h3 id=\"下载文件\"><a href=\"#下载文件\" class=\"headerlink\" title=\"下载文件\"></a>下载文件</h3><h4 id=\"github-国外\"><a href=\"#github-国外\" class=\"headerlink\" title=\"github(国外)\"></a>github(国外)</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo curl -L <span class=\"hljs-string\">&quot;https://github.com/docker/compose/releases/latest/download/docker-compose-<span class=\"hljs-subst\">$(uname -s)</span>-<span class=\"hljs-subst\">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose &amp;&amp; sudo <span class=\"hljs-built_in\">chmod</span> +x /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"daocloud-国内\"><a href=\"#daocloud-国内\" class=\"headerlink\" title=\"daocloud(国内)\"></a>daocloud(国内)</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">curl -L https://get.daocloud.io/docker/compose/releases/download/1.22.0/docker-compose-`<span class=\"hljs-built_in\">uname</span> -s`-`<span class=\"hljs-built_in\">uname</span> -m` &gt; /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"授予权限\"><a href=\"#授予权限\" class=\"headerlink\" title=\"授予权限\"></a>授予权限</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">chmod</span> +x /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看是否安装完成\"><a href=\"#查看是否安装完成\" class=\"headerlink\" title=\"查看是否安装完成\"></a>查看是否安装完成</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose --version<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装zookeeper\"><a href=\"#安装zookeeper\" class=\"headerlink\" title=\"安装zookeeper\"></a>安装zookeeper</h2><h3 id=\"安装高可用zk\"><a href=\"#安装高可用zk\" class=\"headerlink\" title=\"安装高可用zk\"></a>安装高可用zk</h3><blockquote>\n<p>docker-compose.yml</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&#x27;3.1&#x27;</span><br><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">zk1:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">zookeeper</span><br>    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">zk1</span><br>    <span class=\"hljs-attr\">ports:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">2181</span><span class=\"hljs-string\">:2181</span><br>    <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/usr/local/docker/zookeeper/zk1/data:/data</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/usr/local/docker/zookeeper/zk1/datalog:/datalog</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">ZOO_MY_ID:</span> <span class=\"hljs-number\">1</span><br>      <span class=\"hljs-attr\">ZOO_SERVERS:</span> <span class=\"hljs-string\">server.1=zk1:2888:3888;2181</span> <span class=\"hljs-string\">server.2=zk2:2888:3888;2181</span> <span class=\"hljs-string\">server.3=zk3:2888:3888;2181</span><br>  <span class=\"hljs-attr\">zk2:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">zookeeper</span><br>    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">zk2</span><br>    <span class=\"hljs-attr\">ports:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">2182</span><span class=\"hljs-string\">:2181</span><br>    <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/usr/local/docker/zookeeper/zk2/data:/data</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/usr/local/docker/zookeeper/zk2/datalog:/datalog</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">ZOO_MY_ID:</span> <span class=\"hljs-number\">2</span><br>      <span class=\"hljs-attr\">ZOO_SERVERS:</span> <span class=\"hljs-string\">server.1=zk1:2888:3888;2181</span> <span class=\"hljs-string\">server.2=zk2:2888:3888;2181</span> <span class=\"hljs-string\">server.3=zk3:2888:3888;2181</span><br>  <span class=\"hljs-attr\">zk3:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">zookeeper</span><br>    <span class=\"hljs-attr\">restart:</span> <span class=\"hljs-string\">always</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">zk3</span><br>    <span class=\"hljs-attr\">ports:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">2183</span><span class=\"hljs-string\">:2181</span><br>    <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/usr/local/docker/zookeeper/zk3/data:/dada</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/usr/local/docker/zookeeper/zk3/datalog:/datalog</span><br><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">ZOO_MY_ID:</span> <span class=\"hljs-number\">3</span><br>      <span class=\"hljs-attr\">ZOO_SERVERS:</span> <span class=\"hljs-string\">server.1=zk1:2888:3888;2181</span> <span class=\"hljs-string\">server.2=zk2:2888:3888;2181</span> <span class=\"hljs-string\">server.3=zk3:2888:3888;2181</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装Mysql\"><a href=\"#安装Mysql\" class=\"headerlink\" title=\"安装Mysql\"></a>安装Mysql</h2><h3 id=\"可用MySQL\"><a href=\"#可用MySQL\" class=\"headerlink\" title=\"可用MySQL\"></a>可用MySQL</h3><blockquote>\n<p>docker-compose.yml</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&#x27;3&#x27;</span><br><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">mysql-slave-lb:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx:alpine</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">mysql-slave-lb</span><br>    <span class=\"hljs-attr\">ports:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">30306</span><span class=\"hljs-string\">:30306</span><br>    <span class=\"hljs-attr\">volumes:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/docker/nginx/nginx.conf:/etc/nginx/nginx.conf</span><br>    <span class=\"hljs-attr\">networks:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">mysql</span><br>    <span class=\"hljs-attr\">depends_on:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">mysql-master</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">mysql-slave1</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">mysql-slave2</span><br>  <span class=\"hljs-attr\">mysql-master:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">mysql:8.0.25</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">mysql-master</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">MYSQL_ROOT_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">MASTER_SYNC_USER:</span> <span class=\"hljs-string\">&quot;sync_admin&quot;</span> <span class=\"hljs-comment\">#设置脚本中定义的用于同步的账号</span><br>      <span class=\"hljs-attr\">MASTER_SYNC_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span> <span class=\"hljs-comment\">#设置脚本中定义的用于同步的密码</span><br>      <span class=\"hljs-attr\">ADMIN_USER:</span> <span class=\"hljs-string\">&quot;root&quot;</span> <span class=\"hljs-comment\">#当前容器用于拥有创建账号功能的数据库账号</span><br>      <span class=\"hljs-attr\">ADMIN_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">ALLOW_HOST:</span> <span class=\"hljs-string\">&quot;10.10.%.%&quot;</span> <span class=\"hljs-comment\">#允许同步账号的host地址</span><br>      <span class=\"hljs-attr\">TZ:</span> <span class=\"hljs-string\">&quot;Asia/Shanghai&quot;</span> <span class=\"hljs-comment\">#解决时区问题</span><br>    <span class=\"hljs-attr\">ports:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-number\">3306</span><span class=\"hljs-string\">:3306</span><br>    <span class=\"hljs-attr\">networks:</span><br>      <span class=\"hljs-attr\">mysql:</span><br>        <span class=\"hljs-attr\">ipv4_address:</span> <span class=\"hljs-string\">&quot;10.10.10.10&quot;</span> <span class=\"hljs-comment\">#固定ip，因为从库在连接master的时候，需要设置host</span><br>    <span class=\"hljs-attr\">volumes:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/docker/mysql/init/master:/docker-entrypoint-initdb.d</span> <span class=\"hljs-comment\">#挂载master脚本</span><br>    <span class=\"hljs-attr\">command:</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--server-id=1&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--character-set-server=utf8mb4&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--collation-server=utf8mb4_unicode_ci&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--log-bin=mysql-bin&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--sync_binlog=1&quot;</span><br>  <span class=\"hljs-attr\">mysql-slave1:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">mysql:8.0.25</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">mysql-slave1</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">MYSQL_ROOT_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">SLAVE_SYNC_USER:</span> <span class=\"hljs-string\">&quot;sync_admin&quot;</span> <span class=\"hljs-comment\">#用于同步的账号，由master创建</span><br>      <span class=\"hljs-attr\">SLAVE_SYNC_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">ADMIN_USER:</span> <span class=\"hljs-string\">&quot;root&quot;</span><br>      <span class=\"hljs-attr\">ADMIN_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">MASTER_HOST:</span> <span class=\"hljs-string\">&quot;10.10.10.10&quot;</span> <span class=\"hljs-comment\">#master地址，开启主从同步需要连接master</span><br>      <span class=\"hljs-attr\">TZ:</span> <span class=\"hljs-string\">&quot;Asia/Shanghai&quot;</span> <span class=\"hljs-comment\">#设置时区</span><br>    <span class=\"hljs-attr\">networks:</span><br>     <span class=\"hljs-attr\">mysql:</span><br>       <span class=\"hljs-attr\">ipv4_address:</span> <span class=\"hljs-string\">&quot;10.10.10.20&quot;</span> <span class=\"hljs-comment\">#固定ip</span><br>    <span class=\"hljs-attr\">volumes:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/docker/mysql/slave:/docker-entrypoint-initdb.d</span> <span class=\"hljs-comment\">#挂载slave脚本</span><br>    <span class=\"hljs-attr\">command:</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--server-id=2&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--character-set-server=utf8mb4&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--collation-server=utf8mb4_unicode_ci&quot;</span><br>  <span class=\"hljs-attr\">mysql-slave2:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">mysql:8.0.25</span><br>    <span class=\"hljs-attr\">container_name:</span> <span class=\"hljs-string\">mysql-slave2</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">MYSQL_ROOT_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">SLAVE_SYNC_USER:</span> <span class=\"hljs-string\">&quot;sync_admin&quot;</span><br>      <span class=\"hljs-attr\">SLAVE_SYNC_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">ADMIN_USER:</span> <span class=\"hljs-string\">&quot;root&quot;</span><br>      <span class=\"hljs-attr\">ADMIN_PASSWORD:</span> <span class=\"hljs-string\">&quot;piesat&quot;</span><br>      <span class=\"hljs-attr\">MASTER_HOST:</span> <span class=\"hljs-string\">&quot;10.10.10.10&quot;</span><br>      <span class=\"hljs-attr\">TZ:</span> <span class=\"hljs-string\">&quot;Asia/Shanghai&quot;</span><br>    <span class=\"hljs-attr\">networks:</span><br>      <span class=\"hljs-attr\">mysql:</span><br>        <span class=\"hljs-attr\">ipv4_address:</span> <span class=\"hljs-string\">&quot;10.10.10.30&quot;</span> <span class=\"hljs-comment\">#固定ip</span><br>    <span class=\"hljs-attr\">volumes:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/docker/mysql/slave:/docker-entrypoint-initdb.d</span><br>    <span class=\"hljs-attr\">command:</span> <span class=\"hljs-comment\">#这里需要修改server-id，保证每个mysql容器的server-id都不一样</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--server-id=3&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--character-set-server=utf8mb4&quot;</span><br>    <span class=\"hljs-bullet\">-</span>  <span class=\"hljs-string\">&quot;--collation-server=utf8mb4_unicode_ci&quot;</span><br><span class=\"hljs-attr\">networks:</span><br>  <span class=\"hljs-attr\">mysql:</span><br>    <span class=\"hljs-attr\">driver:</span> <span class=\"hljs-string\">bridge</span><br>    <span class=\"hljs-attr\">ipam:</span><br>      <span class=\"hljs-attr\">driver:</span> <span class=\"hljs-string\">default</span><br>      <span class=\"hljs-attr\">config:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">subnet:</span> <span class=\"hljs-string\">&quot;10.10.0.0/16&quot;</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>nginx.conf</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> &gt; nginx.conf &lt;&lt;<span class=\"hljs-string\">EOF</span><br><span class=\"hljs-string\">user  nginx;</span><br><span class=\"hljs-string\">worker_processes  auto;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">error_log  /var/log/nginx/error.log warn;</span><br><span class=\"hljs-string\">pid        /var/run/nginx.pid;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">events &#123;</span><br><span class=\"hljs-string\">    worker_connections  1024;</span><br><span class=\"hljs-string\">&#125;</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\"># 添加stream模块，实现tcp反向代理</span><br><span class=\"hljs-string\">stream &#123;</span><br><span class=\"hljs-string\">    proxy_timeout 30m;</span><br><span class=\"hljs-string\">    upstream mysql-slave-cluster&#123;</span><br><span class=\"hljs-string\">      #docker-compose.yml里面会配置固定mysql-slave的ip地址，这里就填写固定的ip地址</span><br><span class=\"hljs-string\">      server 10.10.10.20:3306 weight=1;</span><br><span class=\"hljs-string\">      server 10.10.10.30:3306 weight=1 backup; #备用数据库，当上面的数据库挂掉之后，才会使用此数据库，也就是如果上面的数据库没有挂，则所有的流量都很转发到上面的主库</span><br><span class=\"hljs-string\">    &#125;</span><br><span class=\"hljs-string\">    server &#123;</span><br><span class=\"hljs-string\">        listen 30306;</span><br><span class=\"hljs-string\">        proxy_pass mysql-slave-cluster;</span><br><span class=\"hljs-string\">    &#125;</span><br><span class=\"hljs-string\">&#125;</span><br><span class=\"hljs-string\">EOF</span><br></code></pre></td></tr></table></figure>"},{"title":"PrivateBin","date":"2022-09-03T08:49:22.000Z","description":"PrivateBin","_content":"\n## PrivateBin\n\n### 前言\n\n**PrivateBin**是一个极简、开源的在线pastebin，服务器对粘贴的数据一无所知。[PrivateBin|Github](https://github.com/PrivateBin/PrivateBin/).\n\n### 使用docker部署\n\n[PrivateBin|Docker Hub](https://hub.docker.com/r/privatebin/nginx-fpm-alpine) docker镜像地址，该Wiki中有详细的使用方法.\n\n创建一个PrivateBin容器\n\n```bash\ndocker run -d --restart=\"always\" --read-only --name private-bin -p 8080:8080 -v $PWD/privatebin-data:/srv/data privatebin/nginx-fpm-alpine\n```\n\n创建完成后需要对宿主机挂载的文件夹进行授权,否则会出现【送出】功能粘贴失败的问题,`chmod -R 777 privatebin-data ` 进行授权.\n\n部署完成后访问`http://ip:8080`进行访问，此时**PrivateBin**还无法使用，由于Private使用浏览器https进行数据加密所以需要使用nginx进行反代。\n\n#### 扩展\n\n支持上传附件或自定义配置\n\n```bash\ndocker run -d --restart=\"always\" --read-only --name private-bin -p 8080:8080 -v $PWD/conf.php:/srv/cfg/conf.php:ro -v $PWD/privatebin-data:/srv/data privatebin/nginx-fpm-alpine\n```\n\n> conf.php\n\n```php\n;<?php http_response_code(403); /*\n; config file for PrivateBin\n;\n; An explanation of each setting can be find online at https://github.com/PrivateBin/PrivateBin/wiki/Configuration.\n\n[main]\n; (optional) set a project name to be displayed on the website\n; name = \"PrivateBin\"\n\n; The full URL, with the domain name and directories that point to the PrivateBin files\n; This URL is essential to allow Opengraph images to be displayed on social networks\n; basepath = \"\"\n; enable or disable the discussion feature, defaults to true\ndiscussion = true\n; preselect the discussion feature, defaults to false\nopendiscussion = false\n; enable or disable the password feature, defaults to true\npassword = true\n; enable or disable the file upload feature, defaults to false\nfileupload = false\n; preselect the burn-after-reading feature, defaults to false\nburnafterreadingselected = false\n; which display mode to preselect by default, defaults to \"plaintext\"\n; make sure the value exists in [formatter_options]\ndefaultformatter = \"plaintext\"\n\n; (optional) set a syntax highlighting theme, as found in css/prettify/\n; syntaxhighlightingtheme = \"sons-of-obsidian\"\n\n; size limit per paste or comment in bytes, defaults to 10 Mebibytes\nsizelimit = 10485760\n\n; template to include, default is \"bootstrap\" (tpl/bootstrap.php)\ntemplate = \"bootstrap\"\n\n; (optional) info text to display\n; use single, instead of double quotes for HTML attributes\n;info = \"More information on the <a href='https://privatebin.info/'>project page</a>.\"\n\n; (optional) notice to display\n; notice = \"Note: This is a test service: Data may be deleted anytime. Kittens will die if you abuse this service.\"\n\n; by default PrivateBin will guess the visitors language based on the browsers\n; settings. Optionally you can enable the language selection menu, which uses\n; a session cookie to store the choice until the browser is closed.\nlanguageselection = false\n\n; set the language your installs defaults to, defaults to English\n; if this is set and language selection is disabled, this will be the only language\n; languagedefault = \"en\"\n\n; (optional) URL shortener address to offer after a new paste is created\n; it is suggested to only use this with self-hosted shorteners as this will leak\n; the pastes encryption key\n; urlshortener = \"https://shortener.example.com/api?link=\"\n\n; (optional) Let users create a QR code for sharing the paste URL with one click.\n; It works both when a new paste is created and when you view a paste.\n; qrcode = true\n\n; (optional) IP based icons are a weak mechanism to detect if a comment was from\n; a different user when the same username was used in a comment. It might be\n; used to get the IP of a non anonymous comment poster if the server salt is\n; leaked and a SHA256 HMAC rainbow table is generated for all (relevant) IPs.\n; Can be set to one these values: \"none\" / \"vizhash\" / \"identicon\" (default).\n; icon = \"none\"\n\n; Content Security Policy headers allow a website to restrict what sources are\n; allowed to be accessed in its context. You need to change this if you added\n; custom scripts from third-party domains to your templates, e.g. tracking\n; scripts or run your site behind certain DDoS-protection services.\n; Check the documentation at https://content-security-policy.com/\n; Notes:\n; - If you use a bootstrap theme, you can remove the allow-popups from the\n;   sandbox restrictions.\n; - By default this disallows to load images from third-party servers, e.g. when\n;   they are embedded in pastes. If you wish to allow that, you can adjust the\n;   policy here. See https://github.com/PrivateBin/PrivateBin/wiki/FAQ#why-does-not-it-load-embedded-images\n;   for details.\n; - The 'unsafe-eval' is used in two cases; to check if the browser supports\n;   async functions and display an error if not and for Chrome to enable\n;   webassembly support (used for zlib compression). You can remove it if Chrome\n;   doesn't need to be supported and old browsers don't need to be warned.\n; cspheader = \"default-src 'none'; base-uri 'self'; form-action 'none'; manifest-src 'self'; connect-src * blob:; script-src 'self' 'unsafe-eval'; style-src 'self'; font-src 'self'; frame-ancestors 'none'; img-src 'self' data: blob:; media-src blob:; object-src blob:; sandbox allow-same-origin allow-scripts allow-forms allow-popups allow-modals allow-downloads\"\n\n; stay compatible with PrivateBin Alpha 0.19, less secure\n; if enabled will use base64.js version 1.7 instead of 2.1.9 and sha1 instead of\n; sha256 in HMAC for the deletion token\n; zerobincompatibility = false\n\n; Enable or disable the warning message when the site is served over an insecure\n; connection (insecure HTTP instead of HTTPS), defaults to true.\n; Secure transport methods like Tor and I2P domains are automatically whitelisted.\n; It is **strongly discouraged** to disable this.\n; See https://github.com/PrivateBin/PrivateBin/wiki/FAQ#why-does-it-show-me-an-error-about-an-insecure-connection for more information.\n; httpwarning = true\n\n; Pick compression algorithm or disable it. Only applies to pastes/comments\n; created after changing the setting.\n; Can be set to one these values: \"none\" / \"zlib\" (default).\n; compression = \"zlib\"\n\n[expire]\n; expire value that is selected per default\n; make sure the value exists in [expire_options]\ndefault = \"1week\"\n\n[expire_options]\n; Set each one of these to the number of seconds in the expiration period,\n; or 0 if it should never expire\n5min = 300\n10min = 600\n1hour = 3600\n1day = 86400\n1week = 604800\n; Well this is not *exactly* one month, it's 30 days:\n1month = 2592000\n1year = 31536000\nnever = 0\n\n[formatter_options]\n; Set available formatters, their order and their labels\nplaintext = \"Plain Text\"\nsyntaxhighlighting = \"Source Code\"\nmarkdown = \"Markdown\"\n\n[traffic]\n; time limit between calls from the same IP address in seconds\n; Set this to 0 to disable rate limiting.\nlimit = 10\n\n; (optional) Set IPs addresses (v4 or v6) or subnets (CIDR) which are exempted\n; from the rate-limit. Invalid IPs will be ignored. If multiple values are to\n; be exempted, the list needs to be comma separated. Leave unset to disable\n; exemptions.\n; exempted = \"1.2.3.4,10.10.10/24\"\n\n; (optional) If you want only some source IP addresses (v4 or v6) or subnets\n; (CIDR) to be allowed to create pastes, set these here. Invalid IPs will be\n; ignored. If multiple values are to be exempted, the list needs to be comma\n; separated. Leave unset to allow anyone to create pastes.\n; creators = \"1.2.3.4,10.10.10/24\"\n\n; (optional) if your website runs behind a reverse proxy or load balancer,\n; set the HTTP header containing the visitors IP address, i.e. X_FORWARDED_FOR\n; header = \"X_FORWARDED_FOR\"\n\n[purge]\n; minimum time limit between two purgings of expired pastes, it is only\n; triggered when pastes are created\n; Set this to 0 to run a purge every time a paste is created.\nlimit = 300\n\n; maximum amount of expired pastes to delete in one purge\n; Set this to 0 to disable purging. Set it higher, if you are running a large\n; site\nbatchsize = 10\n\n[model]\n; name of data model class to load and directory for storage\n; the default model \"Filesystem\" stores everything in the filesystem\nclass = Filesystem\n[model_options]\ndir = PATH \"data\"\n\n;[model]\n; example of a Google Cloud Storage configuration\n;class = GoogleCloudStorage\n;[model_options]\n;bucket = \"my-private-bin\"\n;prefix = \"pastes\"\n\n;[model]\n; example of DB configuration for MySQL\n;class = Database\n;[model_options]\n;dsn = \"mysql:host=localhost;dbname=privatebin;charset=UTF8\"\n;tbl = \"privatebin_\"\t; table prefix\n;usr = \"privatebin\"\n;pwd = \"Z3r0P4ss\"\n;opt[12] = true\t  ; PDO::ATTR_PERSISTENT\n\n;[model]\n; example of DB configuration for SQLite\n;class = Database\n;[model_options]\n;dsn = \"sqlite:\" PATH \"data/db.sq3\"\n;usr = null\n;pwd = null\n;opt[12] = true\t; PDO::ATTR_PERSISTENT\n\n;[model]\n; example of DB configuration for PostgreSQL\n;class = Database\n;[model_options]\n;dsn = \"pgsql:host=localhost;dbname=privatebin\"\n;tbl = \"privatebin_\"     ; table prefix\n;usr = \"privatebin\"\n;pwd = \"Z3r0P4ss\"\n;opt[12] = true    ; PDO::ATTR_PERSISTENT\n```\n\n### Nginx反代\n\n```nginx\nserver {\nlisten       443 ssl;\nserver_name  example.com;\n\nssl_certificate /etc/nginx/ssl/nginx.crt;\nssl_certificate_key /etc/nginx/ssl/nginx.key;\nssl_session_timeout 5m;\nssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_prefer_server_ciphers on;\n\n        location / {\n                proxy_pass http://example.com:8080;\n        }\n\n}\n```\n\n配置完成后,你就可以使用**PrivateBin**啦. 本站[PrivateBin](https://private.senhao.top/)地址.","source":"_posts/PrivateBin.md","raw":"---\ntitle: PrivateBin\ndate: 2022-09-03 16:49:22\ntags: docker\ncategories: docker\ndescription: PrivateBin\n---\n\n## PrivateBin\n\n### 前言\n\n**PrivateBin**是一个极简、开源的在线pastebin，服务器对粘贴的数据一无所知。[PrivateBin|Github](https://github.com/PrivateBin/PrivateBin/).\n\n### 使用docker部署\n\n[PrivateBin|Docker Hub](https://hub.docker.com/r/privatebin/nginx-fpm-alpine) docker镜像地址，该Wiki中有详细的使用方法.\n\n创建一个PrivateBin容器\n\n```bash\ndocker run -d --restart=\"always\" --read-only --name private-bin -p 8080:8080 -v $PWD/privatebin-data:/srv/data privatebin/nginx-fpm-alpine\n```\n\n创建完成后需要对宿主机挂载的文件夹进行授权,否则会出现【送出】功能粘贴失败的问题,`chmod -R 777 privatebin-data ` 进行授权.\n\n部署完成后访问`http://ip:8080`进行访问，此时**PrivateBin**还无法使用，由于Private使用浏览器https进行数据加密所以需要使用nginx进行反代。\n\n#### 扩展\n\n支持上传附件或自定义配置\n\n```bash\ndocker run -d --restart=\"always\" --read-only --name private-bin -p 8080:8080 -v $PWD/conf.php:/srv/cfg/conf.php:ro -v $PWD/privatebin-data:/srv/data privatebin/nginx-fpm-alpine\n```\n\n> conf.php\n\n```php\n;<?php http_response_code(403); /*\n; config file for PrivateBin\n;\n; An explanation of each setting can be find online at https://github.com/PrivateBin/PrivateBin/wiki/Configuration.\n\n[main]\n; (optional) set a project name to be displayed on the website\n; name = \"PrivateBin\"\n\n; The full URL, with the domain name and directories that point to the PrivateBin files\n; This URL is essential to allow Opengraph images to be displayed on social networks\n; basepath = \"\"\n; enable or disable the discussion feature, defaults to true\ndiscussion = true\n; preselect the discussion feature, defaults to false\nopendiscussion = false\n; enable or disable the password feature, defaults to true\npassword = true\n; enable or disable the file upload feature, defaults to false\nfileupload = false\n; preselect the burn-after-reading feature, defaults to false\nburnafterreadingselected = false\n; which display mode to preselect by default, defaults to \"plaintext\"\n; make sure the value exists in [formatter_options]\ndefaultformatter = \"plaintext\"\n\n; (optional) set a syntax highlighting theme, as found in css/prettify/\n; syntaxhighlightingtheme = \"sons-of-obsidian\"\n\n; size limit per paste or comment in bytes, defaults to 10 Mebibytes\nsizelimit = 10485760\n\n; template to include, default is \"bootstrap\" (tpl/bootstrap.php)\ntemplate = \"bootstrap\"\n\n; (optional) info text to display\n; use single, instead of double quotes for HTML attributes\n;info = \"More information on the <a href='https://privatebin.info/'>project page</a>.\"\n\n; (optional) notice to display\n; notice = \"Note: This is a test service: Data may be deleted anytime. Kittens will die if you abuse this service.\"\n\n; by default PrivateBin will guess the visitors language based on the browsers\n; settings. Optionally you can enable the language selection menu, which uses\n; a session cookie to store the choice until the browser is closed.\nlanguageselection = false\n\n; set the language your installs defaults to, defaults to English\n; if this is set and language selection is disabled, this will be the only language\n; languagedefault = \"en\"\n\n; (optional) URL shortener address to offer after a new paste is created\n; it is suggested to only use this with self-hosted shorteners as this will leak\n; the pastes encryption key\n; urlshortener = \"https://shortener.example.com/api?link=\"\n\n; (optional) Let users create a QR code for sharing the paste URL with one click.\n; It works both when a new paste is created and when you view a paste.\n; qrcode = true\n\n; (optional) IP based icons are a weak mechanism to detect if a comment was from\n; a different user when the same username was used in a comment. It might be\n; used to get the IP of a non anonymous comment poster if the server salt is\n; leaked and a SHA256 HMAC rainbow table is generated for all (relevant) IPs.\n; Can be set to one these values: \"none\" / \"vizhash\" / \"identicon\" (default).\n; icon = \"none\"\n\n; Content Security Policy headers allow a website to restrict what sources are\n; allowed to be accessed in its context. You need to change this if you added\n; custom scripts from third-party domains to your templates, e.g. tracking\n; scripts or run your site behind certain DDoS-protection services.\n; Check the documentation at https://content-security-policy.com/\n; Notes:\n; - If you use a bootstrap theme, you can remove the allow-popups from the\n;   sandbox restrictions.\n; - By default this disallows to load images from third-party servers, e.g. when\n;   they are embedded in pastes. If you wish to allow that, you can adjust the\n;   policy here. See https://github.com/PrivateBin/PrivateBin/wiki/FAQ#why-does-not-it-load-embedded-images\n;   for details.\n; - The 'unsafe-eval' is used in two cases; to check if the browser supports\n;   async functions and display an error if not and for Chrome to enable\n;   webassembly support (used for zlib compression). You can remove it if Chrome\n;   doesn't need to be supported and old browsers don't need to be warned.\n; cspheader = \"default-src 'none'; base-uri 'self'; form-action 'none'; manifest-src 'self'; connect-src * blob:; script-src 'self' 'unsafe-eval'; style-src 'self'; font-src 'self'; frame-ancestors 'none'; img-src 'self' data: blob:; media-src blob:; object-src blob:; sandbox allow-same-origin allow-scripts allow-forms allow-popups allow-modals allow-downloads\"\n\n; stay compatible with PrivateBin Alpha 0.19, less secure\n; if enabled will use base64.js version 1.7 instead of 2.1.9 and sha1 instead of\n; sha256 in HMAC for the deletion token\n; zerobincompatibility = false\n\n; Enable or disable the warning message when the site is served over an insecure\n; connection (insecure HTTP instead of HTTPS), defaults to true.\n; Secure transport methods like Tor and I2P domains are automatically whitelisted.\n; It is **strongly discouraged** to disable this.\n; See https://github.com/PrivateBin/PrivateBin/wiki/FAQ#why-does-it-show-me-an-error-about-an-insecure-connection for more information.\n; httpwarning = true\n\n; Pick compression algorithm or disable it. Only applies to pastes/comments\n; created after changing the setting.\n; Can be set to one these values: \"none\" / \"zlib\" (default).\n; compression = \"zlib\"\n\n[expire]\n; expire value that is selected per default\n; make sure the value exists in [expire_options]\ndefault = \"1week\"\n\n[expire_options]\n; Set each one of these to the number of seconds in the expiration period,\n; or 0 if it should never expire\n5min = 300\n10min = 600\n1hour = 3600\n1day = 86400\n1week = 604800\n; Well this is not *exactly* one month, it's 30 days:\n1month = 2592000\n1year = 31536000\nnever = 0\n\n[formatter_options]\n; Set available formatters, their order and their labels\nplaintext = \"Plain Text\"\nsyntaxhighlighting = \"Source Code\"\nmarkdown = \"Markdown\"\n\n[traffic]\n; time limit between calls from the same IP address in seconds\n; Set this to 0 to disable rate limiting.\nlimit = 10\n\n; (optional) Set IPs addresses (v4 or v6) or subnets (CIDR) which are exempted\n; from the rate-limit. Invalid IPs will be ignored. If multiple values are to\n; be exempted, the list needs to be comma separated. Leave unset to disable\n; exemptions.\n; exempted = \"1.2.3.4,10.10.10/24\"\n\n; (optional) If you want only some source IP addresses (v4 or v6) or subnets\n; (CIDR) to be allowed to create pastes, set these here. Invalid IPs will be\n; ignored. If multiple values are to be exempted, the list needs to be comma\n; separated. Leave unset to allow anyone to create pastes.\n; creators = \"1.2.3.4,10.10.10/24\"\n\n; (optional) if your website runs behind a reverse proxy or load balancer,\n; set the HTTP header containing the visitors IP address, i.e. X_FORWARDED_FOR\n; header = \"X_FORWARDED_FOR\"\n\n[purge]\n; minimum time limit between two purgings of expired pastes, it is only\n; triggered when pastes are created\n; Set this to 0 to run a purge every time a paste is created.\nlimit = 300\n\n; maximum amount of expired pastes to delete in one purge\n; Set this to 0 to disable purging. Set it higher, if you are running a large\n; site\nbatchsize = 10\n\n[model]\n; name of data model class to load and directory for storage\n; the default model \"Filesystem\" stores everything in the filesystem\nclass = Filesystem\n[model_options]\ndir = PATH \"data\"\n\n;[model]\n; example of a Google Cloud Storage configuration\n;class = GoogleCloudStorage\n;[model_options]\n;bucket = \"my-private-bin\"\n;prefix = \"pastes\"\n\n;[model]\n; example of DB configuration for MySQL\n;class = Database\n;[model_options]\n;dsn = \"mysql:host=localhost;dbname=privatebin;charset=UTF8\"\n;tbl = \"privatebin_\"\t; table prefix\n;usr = \"privatebin\"\n;pwd = \"Z3r0P4ss\"\n;opt[12] = true\t  ; PDO::ATTR_PERSISTENT\n\n;[model]\n; example of DB configuration for SQLite\n;class = Database\n;[model_options]\n;dsn = \"sqlite:\" PATH \"data/db.sq3\"\n;usr = null\n;pwd = null\n;opt[12] = true\t; PDO::ATTR_PERSISTENT\n\n;[model]\n; example of DB configuration for PostgreSQL\n;class = Database\n;[model_options]\n;dsn = \"pgsql:host=localhost;dbname=privatebin\"\n;tbl = \"privatebin_\"     ; table prefix\n;usr = \"privatebin\"\n;pwd = \"Z3r0P4ss\"\n;opt[12] = true    ; PDO::ATTR_PERSISTENT\n```\n\n### Nginx反代\n\n```nginx\nserver {\nlisten       443 ssl;\nserver_name  example.com;\n\nssl_certificate /etc/nginx/ssl/nginx.crt;\nssl_certificate_key /etc/nginx/ssl/nginx.key;\nssl_session_timeout 5m;\nssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_prefer_server_ciphers on;\n\n        location / {\n                proxy_pass http://example.com:8080;\n        }\n\n}\n```\n\n配置完成后,你就可以使用**PrivateBin**啦. 本站[PrivateBin](https://private.senhao.top/)地址.","slug":"PrivateBin","published":1,"updated":"2022-12-22T12:24:13.617Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcwycosd0007h0u2fdgr8nv8","content":"<h2 id=\"PrivateBin\"><a href=\"#PrivateBin\" class=\"headerlink\" title=\"PrivateBin\"></a>PrivateBin</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p><strong>PrivateBin</strong>是一个极简、开源的在线pastebin，服务器对粘贴的数据一无所知。<a href=\"https://github.com/PrivateBin/PrivateBin/\">PrivateBin|Github</a>.</p>\n<h3 id=\"使用docker部署\"><a href=\"#使用docker部署\" class=\"headerlink\" title=\"使用docker部署\"></a>使用docker部署</h3><p><a href=\"https://hub.docker.com/r/privatebin/nginx-fpm-alpine\">PrivateBin|Docker Hub</a> docker镜像地址，该Wiki中有详细的使用方法.</p>\n<p>创建一个PrivateBin容器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d --restart=<span class=\"hljs-string\">&quot;always&quot;</span> --read-only --name private-bin -p 8080:8080 -v <span class=\"hljs-variable\">$PWD</span>/privatebin-data:/srv/data privatebin/nginx-fpm-alpine<br></code></pre></td></tr></table></figure>\n\n<p>创建完成后需要对宿主机挂载的文件夹进行授权,否则会出现【送出】功能粘贴失败的问题,<code>chmod -R 777 privatebin-data </code> 进行授权.</p>\n<p>部署完成后访问<code>http://ip:8080</code>进行访问，此时<strong>PrivateBin</strong>还无法使用，由于Private使用浏览器https进行数据加密所以需要使用nginx进行反代。</p>\n<h4 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h4><p>支持上传附件或自定义配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d --restart=<span class=\"hljs-string\">&quot;always&quot;</span> --read-only --name private-bin -p 8080:8080 -v <span class=\"hljs-variable\">$PWD</span>/conf.php:/srv/cfg/conf.php:ro -v <span class=\"hljs-variable\">$PWD</span>/privatebin-data:/srv/data privatebin/nginx-fpm-alpine<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>conf.php</p>\n</blockquote>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\">;<span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-title function_ invoke__\">http_response_code</span>(<span class=\"hljs-number\">403</span>); <span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">; config file for PrivateBin</span><br><span class=\"hljs-comment\">;</span><br><span class=\"hljs-comment\">; An explanation of each setting can be find online at https://github.com/PrivateBin/PrivateBin/wiki/Configuration.</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">[main]</span><br><span class=\"hljs-comment\">; (optional) set a project name to be displayed on the website</span><br><span class=\"hljs-comment\">; name = &quot;PrivateBin&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; The full URL, with the domain name and directories that point to the PrivateBin files</span><br><span class=\"hljs-comment\">; This URL is essential to allow Opengraph images to be displayed on social networks</span><br><span class=\"hljs-comment\">; basepath = &quot;&quot;</span><br><span class=\"hljs-comment\">; enable or disable the discussion feature, defaults to true</span><br><span class=\"hljs-comment\">discussion = true</span><br><span class=\"hljs-comment\">; preselect the discussion feature, defaults to false</span><br><span class=\"hljs-comment\">opendiscussion = false</span><br><span class=\"hljs-comment\">; enable or disable the password feature, defaults to true</span><br><span class=\"hljs-comment\">password = true</span><br><span class=\"hljs-comment\">; enable or disable the file upload feature, defaults to false</span><br><span class=\"hljs-comment\">fileupload = false</span><br><span class=\"hljs-comment\">; preselect the burn-after-reading feature, defaults to false</span><br><span class=\"hljs-comment\">burnafterreadingselected = false</span><br><span class=\"hljs-comment\">; which display mode to preselect by default, defaults to &quot;plaintext&quot;</span><br><span class=\"hljs-comment\">; make sure the value exists in [formatter_options]</span><br><span class=\"hljs-comment\">defaultformatter = &quot;plaintext&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) set a syntax highlighting theme, as found in css/prettify/</span><br><span class=\"hljs-comment\">; syntaxhighlightingtheme = &quot;sons-of-obsidian&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; size limit per paste or comment in bytes, defaults to 10 Mebibytes</span><br><span class=\"hljs-comment\">sizelimit = 10485760</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; template to include, default is &quot;bootstrap&quot; (tpl/bootstrap.php)</span><br><span class=\"hljs-comment\">template = &quot;bootstrap&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) info text to display</span><br><span class=\"hljs-comment\">; use single, instead of double quotes for HTML attributes</span><br><span class=\"hljs-comment\">;info = &quot;More information on the &lt;a href=&#x27;https://privatebin.info/&#x27;&gt;project page&lt;/a&gt;.&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) notice to display</span><br><span class=\"hljs-comment\">; notice = &quot;Note: This is a test service: Data may be deleted anytime. Kittens will die if you abuse this service.&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; by default PrivateBin will guess the visitors language based on the browsers</span><br><span class=\"hljs-comment\">; settings. Optionally you can enable the language selection menu, which uses</span><br><span class=\"hljs-comment\">; a session cookie to store the choice until the browser is closed.</span><br><span class=\"hljs-comment\">languageselection = false</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; set the language your installs defaults to, defaults to English</span><br><span class=\"hljs-comment\">; if this is set and language selection is disabled, this will be the only language</span><br><span class=\"hljs-comment\">; languagedefault = &quot;en&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) URL shortener address to offer after a new paste is created</span><br><span class=\"hljs-comment\">; it is suggested to only use this with self-hosted shorteners as this will leak</span><br><span class=\"hljs-comment\">; the pastes encryption key</span><br><span class=\"hljs-comment\">; urlshortener = &quot;https://shortener.example.com/api?link=&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) Let users create a QR code for sharing the paste URL with one click.</span><br><span class=\"hljs-comment\">; It works both when a new paste is created and when you view a paste.</span><br><span class=\"hljs-comment\">; qrcode = true</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) IP based icons are a weak mechanism to detect if a comment was from</span><br><span class=\"hljs-comment\">; a different user when the same username was used in a comment. It might be</span><br><span class=\"hljs-comment\">; used to get the IP of a non anonymous comment poster if the server salt is</span><br><span class=\"hljs-comment\">; leaked and a SHA256 HMAC rainbow table is generated for all (relevant) IPs.</span><br><span class=\"hljs-comment\">; Can be set to one these values: &quot;none&quot; / &quot;vizhash&quot; / &quot;identicon&quot; (default).</span><br><span class=\"hljs-comment\">; icon = &quot;none&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; Content Security Policy headers allow a website to restrict what sources are</span><br><span class=\"hljs-comment\">; allowed to be accessed in its context. You need to change this if you added</span><br><span class=\"hljs-comment\">; custom scripts from third-party domains to your templates, e.g. tracking</span><br><span class=\"hljs-comment\">; scripts or run your site behind certain DDoS-protection services.</span><br><span class=\"hljs-comment\">; Check the documentation at https://content-security-policy.com/</span><br><span class=\"hljs-comment\">; Notes:</span><br><span class=\"hljs-comment\">; - If you use a bootstrap theme, you can remove the allow-popups from the</span><br><span class=\"hljs-comment\">;   sandbox restrictions.</span><br><span class=\"hljs-comment\">; - By default this disallows to load images from third-party servers, e.g. when</span><br><span class=\"hljs-comment\">;   they are embedded in pastes. If you wish to allow that, you can adjust the</span><br><span class=\"hljs-comment\">;   policy here. See https://github.com/PrivateBin/PrivateBin/wiki/FAQ#why-does-not-it-load-embedded-images</span><br><span class=\"hljs-comment\">;   for details.</span><br><span class=\"hljs-comment\">; - The &#x27;unsafe-eval&#x27; is used in two cases; to check if the browser supports</span><br><span class=\"hljs-comment\">;   async functions and display an error if not and for Chrome to enable</span><br><span class=\"hljs-comment\">;   webassembly support (used for zlib compression). You can remove it if Chrome</span><br><span class=\"hljs-comment\">;   doesn&#x27;t need to be supported and old browsers don&#x27;t need to be warned.</span><br><span class=\"hljs-comment\">; cspheader = &quot;default-src &#x27;none&#x27;; base-uri &#x27;self&#x27;; form-action &#x27;none&#x27;; manifest-src &#x27;self&#x27;; connect-src * blob:; script-src &#x27;self&#x27; &#x27;unsafe-eval&#x27;; style-src &#x27;self&#x27;; font-src &#x27;self&#x27;; frame-ancestors &#x27;none&#x27;; img-src &#x27;self&#x27; data: blob:; media-src blob:; object-src blob:; sandbox allow-same-origin allow-scripts allow-forms allow-popups allow-modals allow-downloads&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; stay compatible with PrivateBin Alpha 0.19, less secure</span><br><span class=\"hljs-comment\">; if enabled will use base64.js version 1.7 instead of 2.1.9 and sha1 instead of</span><br><span class=\"hljs-comment\">; sha256 in HMAC for the deletion token</span><br><span class=\"hljs-comment\">; zerobincompatibility = false</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; Enable or disable the warning message when the site is served over an insecure</span><br><span class=\"hljs-comment\">; connection (insecure HTTP instead of HTTPS), defaults to true.</span><br><span class=\"hljs-comment\">; Secure transport methods like Tor and I2P domains are automatically whitelisted.</span><br><span class=\"hljs-comment\">; It is **strongly discouraged** to disable this.</span><br><span class=\"hljs-comment\">; See https://github.com/PrivateBin/PrivateBin/wiki/FAQ#why-does-it-show-me-an-error-about-an-insecure-connection for more information.</span><br><span class=\"hljs-comment\">; httpwarning = true</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; Pick compression algorithm or disable it. Only applies to pastes/comments</span><br><span class=\"hljs-comment\">; created after changing the setting.</span><br><span class=\"hljs-comment\">; Can be set to one these values: &quot;none&quot; / &quot;zlib&quot; (default).</span><br><span class=\"hljs-comment\">; compression = &quot;zlib&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">[expire]</span><br><span class=\"hljs-comment\">; expire value that is selected per default</span><br><span class=\"hljs-comment\">; make sure the value exists in [expire_options]</span><br><span class=\"hljs-comment\">default = &quot;1week&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">[expire_options]</span><br><span class=\"hljs-comment\">; Set each one of these to the number of seconds in the expiration period,</span><br><span class=\"hljs-comment\">; or 0 if it should never expire</span><br><span class=\"hljs-comment\">5min = 300</span><br><span class=\"hljs-comment\">10min = 600</span><br><span class=\"hljs-comment\">1hour = 3600</span><br><span class=\"hljs-comment\">1day = 86400</span><br><span class=\"hljs-comment\">1week = 604800</span><br><span class=\"hljs-comment\">; Well this is not *exactly* one month, it&#x27;s 30 days:</span><br><span class=\"hljs-comment\">1month = 2592000</span><br><span class=\"hljs-comment\">1year = 31536000</span><br><span class=\"hljs-comment\">never = 0</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">[formatter_options]</span><br><span class=\"hljs-comment\">; Set available formatters, their order and their labels</span><br><span class=\"hljs-comment\">plaintext = &quot;Plain Text&quot;</span><br><span class=\"hljs-comment\">syntaxhighlighting = &quot;Source Code&quot;</span><br><span class=\"hljs-comment\">markdown = &quot;Markdown&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">[traffic]</span><br><span class=\"hljs-comment\">; time limit between calls from the same IP address in seconds</span><br><span class=\"hljs-comment\">; Set this to 0 to disable rate limiting.</span><br><span class=\"hljs-comment\">limit = 10</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) Set IPs addresses (v4 or v6) or subnets (CIDR) which are exempted</span><br><span class=\"hljs-comment\">; from the rate-limit. Invalid IPs will be ignored. If multiple values are to</span><br><span class=\"hljs-comment\">; be exempted, the list needs to be comma separated. Leave unset to disable</span><br><span class=\"hljs-comment\">; exemptions.</span><br><span class=\"hljs-comment\">; exempted = &quot;1.2.3.4,10.10.10/24&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) If you want only some source IP addresses (v4 or v6) or subnets</span><br><span class=\"hljs-comment\">; (CIDR) to be allowed to create pastes, set these here. Invalid IPs will be</span><br><span class=\"hljs-comment\">; ignored. If multiple values are to be exempted, the list needs to be comma</span><br><span class=\"hljs-comment\">; separated. Leave unset to allow anyone to create pastes.</span><br><span class=\"hljs-comment\">; creators = &quot;1.2.3.4,10.10.10/24&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) if your website runs behind a reverse proxy or load balancer,</span><br><span class=\"hljs-comment\">; set the HTTP header containing the visitors IP address, i.e. X_FORWARDED_FOR</span><br><span class=\"hljs-comment\">; header = &quot;X_FORWARDED_FOR&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">[purge]</span><br><span class=\"hljs-comment\">; minimum time limit between two purgings of expired pastes, it is only</span><br><span class=\"hljs-comment\">; triggered when pastes are created</span><br><span class=\"hljs-comment\">; Set this to 0 to run a purge every time a paste is created.</span><br><span class=\"hljs-comment\">limit = 300</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; maximum amount of expired pastes to delete in one purge</span><br><span class=\"hljs-comment\">; Set this to 0 to disable purging. Set it higher, if you are running a large</span><br><span class=\"hljs-comment\">; site</span><br><span class=\"hljs-comment\">batchsize = 10</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">[model]</span><br><span class=\"hljs-comment\">; name of data model class to load and directory for storage</span><br><span class=\"hljs-comment\">; the default model &quot;Filesystem&quot; stores everything in the filesystem</span><br><span class=\"hljs-comment\">class = Filesystem</span><br><span class=\"hljs-comment\">[model_options]</span><br><span class=\"hljs-comment\">dir = PATH &quot;data&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">;[model]</span><br><span class=\"hljs-comment\">; example of a Google Cloud Storage configuration</span><br><span class=\"hljs-comment\">;class = GoogleCloudStorage</span><br><span class=\"hljs-comment\">;[model_options]</span><br><span class=\"hljs-comment\">;bucket = &quot;my-private-bin&quot;</span><br><span class=\"hljs-comment\">;prefix = &quot;pastes&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">;[model]</span><br><span class=\"hljs-comment\">; example of DB configuration for MySQL</span><br><span class=\"hljs-comment\">;class = Database</span><br><span class=\"hljs-comment\">;[model_options]</span><br><span class=\"hljs-comment\">;dsn = &quot;mysql:host=localhost;dbname=privatebin;charset=UTF8&quot;</span><br><span class=\"hljs-comment\">;tbl = &quot;privatebin_&quot;\t; table prefix</span><br><span class=\"hljs-comment\">;usr = &quot;privatebin&quot;</span><br><span class=\"hljs-comment\">;pwd = &quot;Z3r0P4ss&quot;</span><br><span class=\"hljs-comment\">;opt[12] = true\t  ; PDO::ATTR_PERSISTENT</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">;[model]</span><br><span class=\"hljs-comment\">; example of DB configuration for SQLite</span><br><span class=\"hljs-comment\">;class = Database</span><br><span class=\"hljs-comment\">;[model_options]</span><br><span class=\"hljs-comment\">;dsn = &quot;sqlite:&quot; PATH &quot;data/db.sq3&quot;</span><br><span class=\"hljs-comment\">;usr = null</span><br><span class=\"hljs-comment\">;pwd = null</span><br><span class=\"hljs-comment\">;opt[12] = true\t; PDO::ATTR_PERSISTENT</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">;[model]</span><br><span class=\"hljs-comment\">; example of DB configuration for PostgreSQL</span><br><span class=\"hljs-comment\">;class = Database</span><br><span class=\"hljs-comment\">;[model_options]</span><br><span class=\"hljs-comment\">;dsn = &quot;pgsql:host=localhost;dbname=privatebin&quot;</span><br><span class=\"hljs-comment\">;tbl = &quot;privatebin_&quot;     ; table prefix</span><br><span class=\"hljs-comment\">;usr = &quot;privatebin&quot;</span><br><span class=\"hljs-comment\">;pwd = &quot;Z3r0P4ss&quot;</span><br><span class=\"hljs-comment\">;opt[12] = true    ; PDO::ATTR_PERSISTENT</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Nginx反代\"><a href=\"#Nginx反代\" class=\"headerlink\" title=\"Nginx反代\"></a>Nginx反代</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">server</span> &#123;<br><span class=\"hljs-attribute\">listen</span>       <span class=\"hljs-number\">443</span> ssl;<br><span class=\"hljs-attribute\">server_name</span>  example.com;<br><br><span class=\"hljs-attribute\">ssl_certificate</span> /etc/nginx/ssl/nginx.crt;<br><span class=\"hljs-attribute\">ssl_certificate_key</span> /etc/nginx/ssl/nginx.key;<br><span class=\"hljs-attribute\">ssl_session_timeout</span> <span class=\"hljs-number\">5m</span>;<br><span class=\"hljs-attribute\">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;<br><span class=\"hljs-attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"hljs-number\">1</span> TLSv1.<span class=\"hljs-number\">2</span>;<br><span class=\"hljs-attribute\">ssl_prefer_server_ciphers</span> <span class=\"hljs-literal\">on</span>;<br><br>        <span class=\"hljs-section\">location</span> / &#123;<br>                <span class=\"hljs-attribute\">proxy_pass</span> http://example.com:8080;<br>        &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>配置完成后,你就可以使用<strong>PrivateBin</strong>啦. 本站<a href=\"https://private.senhao.top/\">PrivateBin</a>地址.</p>\n","site":{"data":{}},"wordcount":8843,"excerpt":"","more":"<h2 id=\"PrivateBin\"><a href=\"#PrivateBin\" class=\"headerlink\" title=\"PrivateBin\"></a>PrivateBin</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p><strong>PrivateBin</strong>是一个极简、开源的在线pastebin，服务器对粘贴的数据一无所知。<a href=\"https://github.com/PrivateBin/PrivateBin/\">PrivateBin|Github</a>.</p>\n<h3 id=\"使用docker部署\"><a href=\"#使用docker部署\" class=\"headerlink\" title=\"使用docker部署\"></a>使用docker部署</h3><p><a href=\"https://hub.docker.com/r/privatebin/nginx-fpm-alpine\">PrivateBin|Docker Hub</a> docker镜像地址，该Wiki中有详细的使用方法.</p>\n<p>创建一个PrivateBin容器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d --restart=<span class=\"hljs-string\">&quot;always&quot;</span> --read-only --name private-bin -p 8080:8080 -v <span class=\"hljs-variable\">$PWD</span>/privatebin-data:/srv/data privatebin/nginx-fpm-alpine<br></code></pre></td></tr></table></figure>\n\n<p>创建完成后需要对宿主机挂载的文件夹进行授权,否则会出现【送出】功能粘贴失败的问题,<code>chmod -R 777 privatebin-data </code> 进行授权.</p>\n<p>部署完成后访问<code>http://ip:8080</code>进行访问，此时<strong>PrivateBin</strong>还无法使用，由于Private使用浏览器https进行数据加密所以需要使用nginx进行反代。</p>\n<h4 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h4><p>支持上传附件或自定义配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d --restart=<span class=\"hljs-string\">&quot;always&quot;</span> --read-only --name private-bin -p 8080:8080 -v <span class=\"hljs-variable\">$PWD</span>/conf.php:/srv/cfg/conf.php:ro -v <span class=\"hljs-variable\">$PWD</span>/privatebin-data:/srv/data privatebin/nginx-fpm-alpine<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>conf.php</p>\n</blockquote>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\">;<span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-title function_ invoke__\">http_response_code</span>(<span class=\"hljs-number\">403</span>); <span class=\"hljs-comment\">/*</span><br><span class=\"hljs-comment\">; config file for PrivateBin</span><br><span class=\"hljs-comment\">;</span><br><span class=\"hljs-comment\">; An explanation of each setting can be find online at https://github.com/PrivateBin/PrivateBin/wiki/Configuration.</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">[main]</span><br><span class=\"hljs-comment\">; (optional) set a project name to be displayed on the website</span><br><span class=\"hljs-comment\">; name = &quot;PrivateBin&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; The full URL, with the domain name and directories that point to the PrivateBin files</span><br><span class=\"hljs-comment\">; This URL is essential to allow Opengraph images to be displayed on social networks</span><br><span class=\"hljs-comment\">; basepath = &quot;&quot;</span><br><span class=\"hljs-comment\">; enable or disable the discussion feature, defaults to true</span><br><span class=\"hljs-comment\">discussion = true</span><br><span class=\"hljs-comment\">; preselect the discussion feature, defaults to false</span><br><span class=\"hljs-comment\">opendiscussion = false</span><br><span class=\"hljs-comment\">; enable or disable the password feature, defaults to true</span><br><span class=\"hljs-comment\">password = true</span><br><span class=\"hljs-comment\">; enable or disable the file upload feature, defaults to false</span><br><span class=\"hljs-comment\">fileupload = false</span><br><span class=\"hljs-comment\">; preselect the burn-after-reading feature, defaults to false</span><br><span class=\"hljs-comment\">burnafterreadingselected = false</span><br><span class=\"hljs-comment\">; which display mode to preselect by default, defaults to &quot;plaintext&quot;</span><br><span class=\"hljs-comment\">; make sure the value exists in [formatter_options]</span><br><span class=\"hljs-comment\">defaultformatter = &quot;plaintext&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) set a syntax highlighting theme, as found in css/prettify/</span><br><span class=\"hljs-comment\">; syntaxhighlightingtheme = &quot;sons-of-obsidian&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; size limit per paste or comment in bytes, defaults to 10 Mebibytes</span><br><span class=\"hljs-comment\">sizelimit = 10485760</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; template to include, default is &quot;bootstrap&quot; (tpl/bootstrap.php)</span><br><span class=\"hljs-comment\">template = &quot;bootstrap&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) info text to display</span><br><span class=\"hljs-comment\">; use single, instead of double quotes for HTML attributes</span><br><span class=\"hljs-comment\">;info = &quot;More information on the &lt;a href=&#x27;https://privatebin.info/&#x27;&gt;project page&lt;/a&gt;.&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) notice to display</span><br><span class=\"hljs-comment\">; notice = &quot;Note: This is a test service: Data may be deleted anytime. Kittens will die if you abuse this service.&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; by default PrivateBin will guess the visitors language based on the browsers</span><br><span class=\"hljs-comment\">; settings. Optionally you can enable the language selection menu, which uses</span><br><span class=\"hljs-comment\">; a session cookie to store the choice until the browser is closed.</span><br><span class=\"hljs-comment\">languageselection = false</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; set the language your installs defaults to, defaults to English</span><br><span class=\"hljs-comment\">; if this is set and language selection is disabled, this will be the only language</span><br><span class=\"hljs-comment\">; languagedefault = &quot;en&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) URL shortener address to offer after a new paste is created</span><br><span class=\"hljs-comment\">; it is suggested to only use this with self-hosted shorteners as this will leak</span><br><span class=\"hljs-comment\">; the pastes encryption key</span><br><span class=\"hljs-comment\">; urlshortener = &quot;https://shortener.example.com/api?link=&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) Let users create a QR code for sharing the paste URL with one click.</span><br><span class=\"hljs-comment\">; It works both when a new paste is created and when you view a paste.</span><br><span class=\"hljs-comment\">; qrcode = true</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) IP based icons are a weak mechanism to detect if a comment was from</span><br><span class=\"hljs-comment\">; a different user when the same username was used in a comment. It might be</span><br><span class=\"hljs-comment\">; used to get the IP of a non anonymous comment poster if the server salt is</span><br><span class=\"hljs-comment\">; leaked and a SHA256 HMAC rainbow table is generated for all (relevant) IPs.</span><br><span class=\"hljs-comment\">; Can be set to one these values: &quot;none&quot; / &quot;vizhash&quot; / &quot;identicon&quot; (default).</span><br><span class=\"hljs-comment\">; icon = &quot;none&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; Content Security Policy headers allow a website to restrict what sources are</span><br><span class=\"hljs-comment\">; allowed to be accessed in its context. You need to change this if you added</span><br><span class=\"hljs-comment\">; custom scripts from third-party domains to your templates, e.g. tracking</span><br><span class=\"hljs-comment\">; scripts or run your site behind certain DDoS-protection services.</span><br><span class=\"hljs-comment\">; Check the documentation at https://content-security-policy.com/</span><br><span class=\"hljs-comment\">; Notes:</span><br><span class=\"hljs-comment\">; - If you use a bootstrap theme, you can remove the allow-popups from the</span><br><span class=\"hljs-comment\">;   sandbox restrictions.</span><br><span class=\"hljs-comment\">; - By default this disallows to load images from third-party servers, e.g. when</span><br><span class=\"hljs-comment\">;   they are embedded in pastes. If you wish to allow that, you can adjust the</span><br><span class=\"hljs-comment\">;   policy here. See https://github.com/PrivateBin/PrivateBin/wiki/FAQ#why-does-not-it-load-embedded-images</span><br><span class=\"hljs-comment\">;   for details.</span><br><span class=\"hljs-comment\">; - The &#x27;unsafe-eval&#x27; is used in two cases; to check if the browser supports</span><br><span class=\"hljs-comment\">;   async functions and display an error if not and for Chrome to enable</span><br><span class=\"hljs-comment\">;   webassembly support (used for zlib compression). You can remove it if Chrome</span><br><span class=\"hljs-comment\">;   doesn&#x27;t need to be supported and old browsers don&#x27;t need to be warned.</span><br><span class=\"hljs-comment\">; cspheader = &quot;default-src &#x27;none&#x27;; base-uri &#x27;self&#x27;; form-action &#x27;none&#x27;; manifest-src &#x27;self&#x27;; connect-src * blob:; script-src &#x27;self&#x27; &#x27;unsafe-eval&#x27;; style-src &#x27;self&#x27;; font-src &#x27;self&#x27;; frame-ancestors &#x27;none&#x27;; img-src &#x27;self&#x27; data: blob:; media-src blob:; object-src blob:; sandbox allow-same-origin allow-scripts allow-forms allow-popups allow-modals allow-downloads&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; stay compatible with PrivateBin Alpha 0.19, less secure</span><br><span class=\"hljs-comment\">; if enabled will use base64.js version 1.7 instead of 2.1.9 and sha1 instead of</span><br><span class=\"hljs-comment\">; sha256 in HMAC for the deletion token</span><br><span class=\"hljs-comment\">; zerobincompatibility = false</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; Enable or disable the warning message when the site is served over an insecure</span><br><span class=\"hljs-comment\">; connection (insecure HTTP instead of HTTPS), defaults to true.</span><br><span class=\"hljs-comment\">; Secure transport methods like Tor and I2P domains are automatically whitelisted.</span><br><span class=\"hljs-comment\">; It is **strongly discouraged** to disable this.</span><br><span class=\"hljs-comment\">; See https://github.com/PrivateBin/PrivateBin/wiki/FAQ#why-does-it-show-me-an-error-about-an-insecure-connection for more information.</span><br><span class=\"hljs-comment\">; httpwarning = true</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; Pick compression algorithm or disable it. Only applies to pastes/comments</span><br><span class=\"hljs-comment\">; created after changing the setting.</span><br><span class=\"hljs-comment\">; Can be set to one these values: &quot;none&quot; / &quot;zlib&quot; (default).</span><br><span class=\"hljs-comment\">; compression = &quot;zlib&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">[expire]</span><br><span class=\"hljs-comment\">; expire value that is selected per default</span><br><span class=\"hljs-comment\">; make sure the value exists in [expire_options]</span><br><span class=\"hljs-comment\">default = &quot;1week&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">[expire_options]</span><br><span class=\"hljs-comment\">; Set each one of these to the number of seconds in the expiration period,</span><br><span class=\"hljs-comment\">; or 0 if it should never expire</span><br><span class=\"hljs-comment\">5min = 300</span><br><span class=\"hljs-comment\">10min = 600</span><br><span class=\"hljs-comment\">1hour = 3600</span><br><span class=\"hljs-comment\">1day = 86400</span><br><span class=\"hljs-comment\">1week = 604800</span><br><span class=\"hljs-comment\">; Well this is not *exactly* one month, it&#x27;s 30 days:</span><br><span class=\"hljs-comment\">1month = 2592000</span><br><span class=\"hljs-comment\">1year = 31536000</span><br><span class=\"hljs-comment\">never = 0</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">[formatter_options]</span><br><span class=\"hljs-comment\">; Set available formatters, their order and their labels</span><br><span class=\"hljs-comment\">plaintext = &quot;Plain Text&quot;</span><br><span class=\"hljs-comment\">syntaxhighlighting = &quot;Source Code&quot;</span><br><span class=\"hljs-comment\">markdown = &quot;Markdown&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">[traffic]</span><br><span class=\"hljs-comment\">; time limit between calls from the same IP address in seconds</span><br><span class=\"hljs-comment\">; Set this to 0 to disable rate limiting.</span><br><span class=\"hljs-comment\">limit = 10</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) Set IPs addresses (v4 or v6) or subnets (CIDR) which are exempted</span><br><span class=\"hljs-comment\">; from the rate-limit. Invalid IPs will be ignored. If multiple values are to</span><br><span class=\"hljs-comment\">; be exempted, the list needs to be comma separated. Leave unset to disable</span><br><span class=\"hljs-comment\">; exemptions.</span><br><span class=\"hljs-comment\">; exempted = &quot;1.2.3.4,10.10.10/24&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) If you want only some source IP addresses (v4 or v6) or subnets</span><br><span class=\"hljs-comment\">; (CIDR) to be allowed to create pastes, set these here. Invalid IPs will be</span><br><span class=\"hljs-comment\">; ignored. If multiple values are to be exempted, the list needs to be comma</span><br><span class=\"hljs-comment\">; separated. Leave unset to allow anyone to create pastes.</span><br><span class=\"hljs-comment\">; creators = &quot;1.2.3.4,10.10.10/24&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; (optional) if your website runs behind a reverse proxy or load balancer,</span><br><span class=\"hljs-comment\">; set the HTTP header containing the visitors IP address, i.e. X_FORWARDED_FOR</span><br><span class=\"hljs-comment\">; header = &quot;X_FORWARDED_FOR&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">[purge]</span><br><span class=\"hljs-comment\">; minimum time limit between two purgings of expired pastes, it is only</span><br><span class=\"hljs-comment\">; triggered when pastes are created</span><br><span class=\"hljs-comment\">; Set this to 0 to run a purge every time a paste is created.</span><br><span class=\"hljs-comment\">limit = 300</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">; maximum amount of expired pastes to delete in one purge</span><br><span class=\"hljs-comment\">; Set this to 0 to disable purging. Set it higher, if you are running a large</span><br><span class=\"hljs-comment\">; site</span><br><span class=\"hljs-comment\">batchsize = 10</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">[model]</span><br><span class=\"hljs-comment\">; name of data model class to load and directory for storage</span><br><span class=\"hljs-comment\">; the default model &quot;Filesystem&quot; stores everything in the filesystem</span><br><span class=\"hljs-comment\">class = Filesystem</span><br><span class=\"hljs-comment\">[model_options]</span><br><span class=\"hljs-comment\">dir = PATH &quot;data&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">;[model]</span><br><span class=\"hljs-comment\">; example of a Google Cloud Storage configuration</span><br><span class=\"hljs-comment\">;class = GoogleCloudStorage</span><br><span class=\"hljs-comment\">;[model_options]</span><br><span class=\"hljs-comment\">;bucket = &quot;my-private-bin&quot;</span><br><span class=\"hljs-comment\">;prefix = &quot;pastes&quot;</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">;[model]</span><br><span class=\"hljs-comment\">; example of DB configuration for MySQL</span><br><span class=\"hljs-comment\">;class = Database</span><br><span class=\"hljs-comment\">;[model_options]</span><br><span class=\"hljs-comment\">;dsn = &quot;mysql:host=localhost;dbname=privatebin;charset=UTF8&quot;</span><br><span class=\"hljs-comment\">;tbl = &quot;privatebin_&quot;\t; table prefix</span><br><span class=\"hljs-comment\">;usr = &quot;privatebin&quot;</span><br><span class=\"hljs-comment\">;pwd = &quot;Z3r0P4ss&quot;</span><br><span class=\"hljs-comment\">;opt[12] = true\t  ; PDO::ATTR_PERSISTENT</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">;[model]</span><br><span class=\"hljs-comment\">; example of DB configuration for SQLite</span><br><span class=\"hljs-comment\">;class = Database</span><br><span class=\"hljs-comment\">;[model_options]</span><br><span class=\"hljs-comment\">;dsn = &quot;sqlite:&quot; PATH &quot;data/db.sq3&quot;</span><br><span class=\"hljs-comment\">;usr = null</span><br><span class=\"hljs-comment\">;pwd = null</span><br><span class=\"hljs-comment\">;opt[12] = true\t; PDO::ATTR_PERSISTENT</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">;[model]</span><br><span class=\"hljs-comment\">; example of DB configuration for PostgreSQL</span><br><span class=\"hljs-comment\">;class = Database</span><br><span class=\"hljs-comment\">;[model_options]</span><br><span class=\"hljs-comment\">;dsn = &quot;pgsql:host=localhost;dbname=privatebin&quot;</span><br><span class=\"hljs-comment\">;tbl = &quot;privatebin_&quot;     ; table prefix</span><br><span class=\"hljs-comment\">;usr = &quot;privatebin&quot;</span><br><span class=\"hljs-comment\">;pwd = &quot;Z3r0P4ss&quot;</span><br><span class=\"hljs-comment\">;opt[12] = true    ; PDO::ATTR_PERSISTENT</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Nginx反代\"><a href=\"#Nginx反代\" class=\"headerlink\" title=\"Nginx反代\"></a>Nginx反代</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">server</span> &#123;<br><span class=\"hljs-attribute\">listen</span>       <span class=\"hljs-number\">443</span> ssl;<br><span class=\"hljs-attribute\">server_name</span>  example.com;<br><br><span class=\"hljs-attribute\">ssl_certificate</span> /etc/nginx/ssl/nginx.crt;<br><span class=\"hljs-attribute\">ssl_certificate_key</span> /etc/nginx/ssl/nginx.key;<br><span class=\"hljs-attribute\">ssl_session_timeout</span> <span class=\"hljs-number\">5m</span>;<br><span class=\"hljs-attribute\">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;<br><span class=\"hljs-attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"hljs-number\">1</span> TLSv1.<span class=\"hljs-number\">2</span>;<br><span class=\"hljs-attribute\">ssl_prefer_server_ciphers</span> <span class=\"hljs-literal\">on</span>;<br><br>        <span class=\"hljs-section\">location</span> / &#123;<br>                <span class=\"hljs-attribute\">proxy_pass</span> http://example.com:8080;<br>        &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>配置完成后,你就可以使用<strong>PrivateBin</strong>啦. 本站<a href=\"https://private.senhao.top/\">PrivateBin</a>地址.</p>\n"},{"title":"Linux笔记","date":"2022-09-10T05:18:34.000Z","description":"Linux笔记.","_content":"\n## Linux\n\n## 更改主机名称\n\n``` bash\nhostnamectl set-hostname [new name]\n```\n\n## 更换源为阿里云\n\n``` bash\n#备份\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n#下载阿里源\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n#清除缓存、生成缓存\nyum clean all     # 清除系统所有的yum缓存\nyum makecache     # 生成yum缓存\n#查看源\nyum repolist all     #查看所有的yum源\nyum repolist enabled #查看可用的yum源 \n```\n\n## 更换为官方源\n\n```bash\n#备份源\ncd /etc/yum.repos.d/\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup \n#重建官方源\nrpm -Uvh --force http://mirror.centos.org/centos-7/7.9.2009/os/x86_64/Packages/centos-release-7-9.2009.0.el7.centos.x86_64.rpm\n#重建缓存\nyum clean all\nyum makecache\n```\n\n## 网络配置\n\n``` bash\n#进入网络文件夹\ncd /etc/sysconfig/network-scripts/ \n#找到类似于 ifcfg-eth0 的文件， 也可能是别的\nvi ifcfg-eth0\n#将以下值修改为yes\nONBOOT=yes\n#更改为静态IP\n#修改ifcfg-eth0   下列信息获取自己的网络属性\nBOOTPROTO=static         # 使用静态IP地址，默认为dhcp\nIPADDR=192.168.31.1   \t   # 设置的静态IP地址\nNETMASK=255.255.255.0    \t# 子网掩码\nGATEWAY=192.168.31.1  \t\t # 网关地址\nDNS1=192.168.31.1     \t\t # DNS服务器\n#重启服务\nservice network restart\n```\n\n## 时间同步\n\n```bash\n#下载ntpdate包\nyum install -y ntpdate\n#同步Windows时间\nntpdaet time.windows.com\n```\n\n## 安装yum wget ...指令\n\n``` bash\nyum install -y wget\nyum install -y vim\n```\n\n## 安装net-tools包\n\n``` bash\n#查找ifconfig在那个包下\nyum search ifconfig \n#安装依赖包\nyum install net-tools.x86_64\n```\n\n## 端口\n\n``` bash\n#检查端口被哪个进程占用\nnetstat -lnp|grep 8090  \n\n#查看进程的详细信息\nps 6832\n\n#结束端口\nkill -9 28937 \n\n#查看监听的端口\nnetstat -lnpt 1234\n```\n\n## chmod\n\n```bash\n#批量给指定文件授权\n#语法 \nchmod [-R] [权限] `find [文件夹路径] -type f -regex \".*\\.\\([后缀]\\|[后缀]\\)\"`\n#例：表示给当前文件夹下所有sh文件授予777权限\nchmod -R 777 `find ./ -type f -regex \".*\\.\\(sh\\)\"`\n```\n\n## Vim\n\n```bash\n#替换字符\n%s/[s1]/[s2]/g\n#显示行号\n:set number | set nu\n#批量修改指定后缀文件编码\n#例子: \nfor i in `find ./ -type f -regex \".*\\.\\(sh\\)\"`;do vi $i -c 'set ff=unix | wq';done\n#语法:\nfor i in `find [path] -type f -regex \".*\\.\\([后缀]\\)\"`;do vi $i -c 'set ff=unix | wq';done\n#vim自动添加行数\nvim ~/.vimrc\nset nu\n```\n\n## 防火墙\n\n``` bash\n # 查看防火墙状态\nfirewall-cmd --state \n\n#防火墙开机自启\nsystemctl enable firewalld\n\n#开启防火墙\nsystemctl start firewalld\n\n#查看防火墙所有开放的端口\nfirewall-cmd --zone=public --list-ports \n\n# 开放3306端\nfirewall-cmd --zone=public --add-port=3306/tcp --permanent  \n\n#关闭5672端\nfirewall-cmd --zone=public --remove-port=3306/tcp --permanent \n\n# 配置立即生效\nfirewall-cmd --reload  \n\n#关闭防火墙\nsystemctl stop firewalld.service\n\n#关闭防火墙（永久）\nsystemctl disable firewalld.service\n```\n\n## 开启服务\n\n``` bash\n#查看服务\nps aux | grep 端口\n\n#启动docker\nsystemctl start docker\n\n#关闭docker\nsystemctl stop docker\n\n#查看docker的运行状态\nsystemctl status docker\n```\n\n## 存储\n\n``` bash\n# 查看当前文件夹使用大小\ndu -h\n# 查看系统磁盘\ndf -hT\n#查看当前目录下文件及目录大小[把*换掉，查具体的文件]\ndu -sh *\n```\n\n## 查看进程\n\n> \\-A 显示所有进程（同-e） -a 显示当前终端的所有进程 -u 显示进程的用户信息 -o 以用户自定义形式显示进程信息 -f 显示程序间的关系\n>\n> USER 进程所有者的用户名 PID 进程号 START 进程激活时间 %CPU 进程自最近一次刷新以来所占用的CPU时间和总时间的百分比 %MEM 进程使用内存的百分比 VSZ 进程使用的虚拟内存大小，以K为单位 RSS 驻留空间的大小。显示当前常驻内存的程序的K字节数。 TTY 进程相关的终端 STAT 进程状态，包括下面的状态： D 不可中断 Uninterruptible sleep (usually IO) R 正在运行，或在队列中的进程 S 处于休眠状态 T 停止或被追踪 Z 僵尸进程 W 进入内存交换（从内核2.6开始无效） X 死掉的进程 < 高优先级 N 低优先级 L 有些页被锁进内存 s 包含子进程 + 位于后台的进程组； l 多线程，克隆线程 TIME 进程使用的总CPU时间 COMMAND 被执行的命令行 NI 进程的优先级值，较小的数字意味着占用较少的CPU时间 PRI 进程优先级。 PPID 父进程ID WCHAN 进程等待的内核事件名\n\n``` bash\n# java(需要查看的进程名称)ps -ef|grep java  \n```\n\n## Java相关\n\n启动jar\n\n> nohup java -jar \\[jar文件] >\\[日志文件] &\n\n查看实时日志\n\n> tail -f \\[日志文件]\n\n## 使用publicKey登录\n\n**生成sshKey**\n\n> 使用xshell工具生成\n\n**上传ssh**\n\n``` bash\ncd .ssh#上传ssh文件到该文件夹下\n```\n\n**导入ssh**\n\n``` bash\ncat [ssh文件名称] >> authorized_keys\n```\n\n**取消密码的登录**\n\n``` bash\npasswd -d root\n```\n\n### NC\n\n> 语法： nc \\[服务器地址] \\[端口]\n\n``` bash\n例：nc www.baodu.com 80\n```\n\n> 查看连接状态： netstat -natp\n\n> 发送请求\n\n``` bash\n语法 ：[请求方式] [URL] [协议]例：GET / HTTP/1.0--注需要换行，所以要敲两次回车\n```\n\n## RZ/SZ使用\n\n> 安装\n\n``` bash\nyum install lrzsz-0.12.20-27.1.el6.x86_64.rpm -y\n```\n\n> rz 可以多文件\n\n``` bash\n#在终端直接输入rz即可 rz [-y] 覆盖文件\n```\n\n> sz 可以多文件\n\n``` bash\n#在终端输入sz [文件1] [文件2]\n```\n\n## 修改open files\n\n> 需要root权限\n\n> 设置open files\n\n``` bash\necho ulimit -n 65535 >>/etc/profile\n```\n\n> 生效\n\n``` bash\nsource /etc/profile\n```\n\n## 安装NFS\n\n### 创建共享目录\n\n```sh\nmkdir -p /data/kubernetes\n```\n\n### 安装组件\n\n```sh\nyum -y install nfs-utils rpcbind\n```\n\n### 编辑配置文件\n\n```sh\nvi /etc/exports\n/data/kubernetes 192.168.31.0/24(rw,sync,no_root_squash)\n```\n\n### 启动服务\n\n```sh\nservice nfs start\nservice rpcbind start\n```\n\n### 设置开机自启动\n\n```sh\nsystemctl enable nfs\nsystemctl enable rpcbind\n```\n\n### 测试\n\n```sh\nshowmount -e 192.168.31.179\n```\n\n## yum离线下载\n\n### yumdownloader的安装及使用\n\n#### 安装\n\n``` sh\nyum install -y yum-utils \n#安装yum-plugin-downloadonly插件\nyum install -y yum-plugin-downloadonly\n```\n\n#### 使用\n\n> 语法\n\n``` sh\nyum install -y --downloadonly --downloaddir=[目录] [软件包]\n```\n\n> 例\n\n``` sh\nyum install -y --downloadonly --downloaddir=/root/mysql mysql\n```\n\n## 文件追加及覆盖\n\n### 追加\n\n如果你追加的文件没有换行，追加进去的文件也没有换行\n\n```shell\necho \"* soft nofile 65535 * hard nofile 65535\" >> /etc/security/limits.conf\n```\n\n### 覆盖\n\n如果之前的文件存在则会覆盖\n\n```shell\ntee /etc/security/limits.conf <<-'EOF'\n* soft nofile 65535\n* hard nofile 65535\nEOF\n```\n\n## Linux安装Python\n\n```bash\n#获取tarbal\nwget https://www.python.org/ftp/python/3.10.4/Python-3.10.4.tgz\n\n#解压\ntar -xvf Python-3.10.4.tgz\n\n#安装openssl1.1.1，python3.10需要openssl1.1.1版本以上\nyum install -y epel-release\nyum install -y openssl11 openssl11-devel\nln -sf /usr/lib64/pkgconfig/openssl11.pc /usr/lib64/pkgconfig/openssl.pc\n\n#安装依赖\nyum install zlib-devel bzip2-devel openssl openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make readline libffi-devel -y\n \n#编译安装\ncd Python-3.10.4\n./configure --prefix=/usr/local/python3.10.4\nmake\nmake install\n\n#命令创建软连接\nln -s /usr/local/python3.10.4/bin/python3 /usr/bin/python3\nln -s /usr/local/python3.10.4/bin/pip3 /usr/bin/pip3\n\n#版本查看\npython3 -V\npip3 -V\n```\n\n## Linux安装GoLang\n\n### 下载安装包\n\n```bash\nwget https://golang.google.cn/dl/go1.19.3.linux-amd64.tar.gz\n```\n\n### 解压\n\n```bash\ntar -zxvf go1.19.3.linux-amd64.tar.gz -C /usr/local/\n```\n\n### 配置环境变量\n\n```bash\nexport GOROOT=\"/usr/local/go\"\nexport GOPATH=$HOME/go\nexport GOBIN=$GOROOT/bin\nexport PATH=$PATH:$GOBIN\n```\n\n### 配置国内代理\n\n```bash\ngo env -w GOPROXY=https://goproxy.cn,direct\n```\n\n### 验证\n\n```go\ngo version\n```\n\n## 命令\n\n### 获取IP （依赖ipconfig命令）\n\n```bash\n#获取有线网卡\necho eth0=`ifconfig  eth0 | head -n2 | grep inet | awk '{print$2}'`\n#获取无线网卡\necho wlan0=`ifconfig  wlan0 | head -n2 | grep inet | awk '{print$2}'`\n```\n\n","source":"_posts/Linux.md","raw":"---\ntitle: Linux笔记\ndate: 2022-09-10 13:18:34\ntags: Linux\ncategories: Linux\ndescription: Linux笔记.\n---\n\n## Linux\n\n## 更改主机名称\n\n``` bash\nhostnamectl set-hostname [new name]\n```\n\n## 更换源为阿里云\n\n``` bash\n#备份\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n#下载阿里源\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n#清除缓存、生成缓存\nyum clean all     # 清除系统所有的yum缓存\nyum makecache     # 生成yum缓存\n#查看源\nyum repolist all     #查看所有的yum源\nyum repolist enabled #查看可用的yum源 \n```\n\n## 更换为官方源\n\n```bash\n#备份源\ncd /etc/yum.repos.d/\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup \n#重建官方源\nrpm -Uvh --force http://mirror.centos.org/centos-7/7.9.2009/os/x86_64/Packages/centos-release-7-9.2009.0.el7.centos.x86_64.rpm\n#重建缓存\nyum clean all\nyum makecache\n```\n\n## 网络配置\n\n``` bash\n#进入网络文件夹\ncd /etc/sysconfig/network-scripts/ \n#找到类似于 ifcfg-eth0 的文件， 也可能是别的\nvi ifcfg-eth0\n#将以下值修改为yes\nONBOOT=yes\n#更改为静态IP\n#修改ifcfg-eth0   下列信息获取自己的网络属性\nBOOTPROTO=static         # 使用静态IP地址，默认为dhcp\nIPADDR=192.168.31.1   \t   # 设置的静态IP地址\nNETMASK=255.255.255.0    \t# 子网掩码\nGATEWAY=192.168.31.1  \t\t # 网关地址\nDNS1=192.168.31.1     \t\t # DNS服务器\n#重启服务\nservice network restart\n```\n\n## 时间同步\n\n```bash\n#下载ntpdate包\nyum install -y ntpdate\n#同步Windows时间\nntpdaet time.windows.com\n```\n\n## 安装yum wget ...指令\n\n``` bash\nyum install -y wget\nyum install -y vim\n```\n\n## 安装net-tools包\n\n``` bash\n#查找ifconfig在那个包下\nyum search ifconfig \n#安装依赖包\nyum install net-tools.x86_64\n```\n\n## 端口\n\n``` bash\n#检查端口被哪个进程占用\nnetstat -lnp|grep 8090  \n\n#查看进程的详细信息\nps 6832\n\n#结束端口\nkill -9 28937 \n\n#查看监听的端口\nnetstat -lnpt 1234\n```\n\n## chmod\n\n```bash\n#批量给指定文件授权\n#语法 \nchmod [-R] [权限] `find [文件夹路径] -type f -regex \".*\\.\\([后缀]\\|[后缀]\\)\"`\n#例：表示给当前文件夹下所有sh文件授予777权限\nchmod -R 777 `find ./ -type f -regex \".*\\.\\(sh\\)\"`\n```\n\n## Vim\n\n```bash\n#替换字符\n%s/[s1]/[s2]/g\n#显示行号\n:set number | set nu\n#批量修改指定后缀文件编码\n#例子: \nfor i in `find ./ -type f -regex \".*\\.\\(sh\\)\"`;do vi $i -c 'set ff=unix | wq';done\n#语法:\nfor i in `find [path] -type f -regex \".*\\.\\([后缀]\\)\"`;do vi $i -c 'set ff=unix | wq';done\n#vim自动添加行数\nvim ~/.vimrc\nset nu\n```\n\n## 防火墙\n\n``` bash\n # 查看防火墙状态\nfirewall-cmd --state \n\n#防火墙开机自启\nsystemctl enable firewalld\n\n#开启防火墙\nsystemctl start firewalld\n\n#查看防火墙所有开放的端口\nfirewall-cmd --zone=public --list-ports \n\n# 开放3306端\nfirewall-cmd --zone=public --add-port=3306/tcp --permanent  \n\n#关闭5672端\nfirewall-cmd --zone=public --remove-port=3306/tcp --permanent \n\n# 配置立即生效\nfirewall-cmd --reload  \n\n#关闭防火墙\nsystemctl stop firewalld.service\n\n#关闭防火墙（永久）\nsystemctl disable firewalld.service\n```\n\n## 开启服务\n\n``` bash\n#查看服务\nps aux | grep 端口\n\n#启动docker\nsystemctl start docker\n\n#关闭docker\nsystemctl stop docker\n\n#查看docker的运行状态\nsystemctl status docker\n```\n\n## 存储\n\n``` bash\n# 查看当前文件夹使用大小\ndu -h\n# 查看系统磁盘\ndf -hT\n#查看当前目录下文件及目录大小[把*换掉，查具体的文件]\ndu -sh *\n```\n\n## 查看进程\n\n> \\-A 显示所有进程（同-e） -a 显示当前终端的所有进程 -u 显示进程的用户信息 -o 以用户自定义形式显示进程信息 -f 显示程序间的关系\n>\n> USER 进程所有者的用户名 PID 进程号 START 进程激活时间 %CPU 进程自最近一次刷新以来所占用的CPU时间和总时间的百分比 %MEM 进程使用内存的百分比 VSZ 进程使用的虚拟内存大小，以K为单位 RSS 驻留空间的大小。显示当前常驻内存的程序的K字节数。 TTY 进程相关的终端 STAT 进程状态，包括下面的状态： D 不可中断 Uninterruptible sleep (usually IO) R 正在运行，或在队列中的进程 S 处于休眠状态 T 停止或被追踪 Z 僵尸进程 W 进入内存交换（从内核2.6开始无效） X 死掉的进程 < 高优先级 N 低优先级 L 有些页被锁进内存 s 包含子进程 + 位于后台的进程组； l 多线程，克隆线程 TIME 进程使用的总CPU时间 COMMAND 被执行的命令行 NI 进程的优先级值，较小的数字意味着占用较少的CPU时间 PRI 进程优先级。 PPID 父进程ID WCHAN 进程等待的内核事件名\n\n``` bash\n# java(需要查看的进程名称)ps -ef|grep java  \n```\n\n## Java相关\n\n启动jar\n\n> nohup java -jar \\[jar文件] >\\[日志文件] &\n\n查看实时日志\n\n> tail -f \\[日志文件]\n\n## 使用publicKey登录\n\n**生成sshKey**\n\n> 使用xshell工具生成\n\n**上传ssh**\n\n``` bash\ncd .ssh#上传ssh文件到该文件夹下\n```\n\n**导入ssh**\n\n``` bash\ncat [ssh文件名称] >> authorized_keys\n```\n\n**取消密码的登录**\n\n``` bash\npasswd -d root\n```\n\n### NC\n\n> 语法： nc \\[服务器地址] \\[端口]\n\n``` bash\n例：nc www.baodu.com 80\n```\n\n> 查看连接状态： netstat -natp\n\n> 发送请求\n\n``` bash\n语法 ：[请求方式] [URL] [协议]例：GET / HTTP/1.0--注需要换行，所以要敲两次回车\n```\n\n## RZ/SZ使用\n\n> 安装\n\n``` bash\nyum install lrzsz-0.12.20-27.1.el6.x86_64.rpm -y\n```\n\n> rz 可以多文件\n\n``` bash\n#在终端直接输入rz即可 rz [-y] 覆盖文件\n```\n\n> sz 可以多文件\n\n``` bash\n#在终端输入sz [文件1] [文件2]\n```\n\n## 修改open files\n\n> 需要root权限\n\n> 设置open files\n\n``` bash\necho ulimit -n 65535 >>/etc/profile\n```\n\n> 生效\n\n``` bash\nsource /etc/profile\n```\n\n## 安装NFS\n\n### 创建共享目录\n\n```sh\nmkdir -p /data/kubernetes\n```\n\n### 安装组件\n\n```sh\nyum -y install nfs-utils rpcbind\n```\n\n### 编辑配置文件\n\n```sh\nvi /etc/exports\n/data/kubernetes 192.168.31.0/24(rw,sync,no_root_squash)\n```\n\n### 启动服务\n\n```sh\nservice nfs start\nservice rpcbind start\n```\n\n### 设置开机自启动\n\n```sh\nsystemctl enable nfs\nsystemctl enable rpcbind\n```\n\n### 测试\n\n```sh\nshowmount -e 192.168.31.179\n```\n\n## yum离线下载\n\n### yumdownloader的安装及使用\n\n#### 安装\n\n``` sh\nyum install -y yum-utils \n#安装yum-plugin-downloadonly插件\nyum install -y yum-plugin-downloadonly\n```\n\n#### 使用\n\n> 语法\n\n``` sh\nyum install -y --downloadonly --downloaddir=[目录] [软件包]\n```\n\n> 例\n\n``` sh\nyum install -y --downloadonly --downloaddir=/root/mysql mysql\n```\n\n## 文件追加及覆盖\n\n### 追加\n\n如果你追加的文件没有换行，追加进去的文件也没有换行\n\n```shell\necho \"* soft nofile 65535 * hard nofile 65535\" >> /etc/security/limits.conf\n```\n\n### 覆盖\n\n如果之前的文件存在则会覆盖\n\n```shell\ntee /etc/security/limits.conf <<-'EOF'\n* soft nofile 65535\n* hard nofile 65535\nEOF\n```\n\n## Linux安装Python\n\n```bash\n#获取tarbal\nwget https://www.python.org/ftp/python/3.10.4/Python-3.10.4.tgz\n\n#解压\ntar -xvf Python-3.10.4.tgz\n\n#安装openssl1.1.1，python3.10需要openssl1.1.1版本以上\nyum install -y epel-release\nyum install -y openssl11 openssl11-devel\nln -sf /usr/lib64/pkgconfig/openssl11.pc /usr/lib64/pkgconfig/openssl.pc\n\n#安装依赖\nyum install zlib-devel bzip2-devel openssl openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make readline libffi-devel -y\n \n#编译安装\ncd Python-3.10.4\n./configure --prefix=/usr/local/python3.10.4\nmake\nmake install\n\n#命令创建软连接\nln -s /usr/local/python3.10.4/bin/python3 /usr/bin/python3\nln -s /usr/local/python3.10.4/bin/pip3 /usr/bin/pip3\n\n#版本查看\npython3 -V\npip3 -V\n```\n\n## Linux安装GoLang\n\n### 下载安装包\n\n```bash\nwget https://golang.google.cn/dl/go1.19.3.linux-amd64.tar.gz\n```\n\n### 解压\n\n```bash\ntar -zxvf go1.19.3.linux-amd64.tar.gz -C /usr/local/\n```\n\n### 配置环境变量\n\n```bash\nexport GOROOT=\"/usr/local/go\"\nexport GOPATH=$HOME/go\nexport GOBIN=$GOROOT/bin\nexport PATH=$PATH:$GOBIN\n```\n\n### 配置国内代理\n\n```bash\ngo env -w GOPROXY=https://goproxy.cn,direct\n```\n\n### 验证\n\n```go\ngo version\n```\n\n## 命令\n\n### 获取IP （依赖ipconfig命令）\n\n```bash\n#获取有线网卡\necho eth0=`ifconfig  eth0 | head -n2 | grep inet | awk '{print$2}'`\n#获取无线网卡\necho wlan0=`ifconfig  wlan0 | head -n2 | grep inet | awk '{print$2}'`\n```\n\n","slug":"Linux","published":1,"updated":"2022-12-22T13:26:19.011Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcwycose0008h0u2hfhdg36v","content":"<h2 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h2><h2 id=\"更改主机名称\"><a href=\"#更改主机名称\" class=\"headerlink\" title=\"更改主机名称\"></a>更改主机名称</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\">hostnamectl set-hostname [new name]<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"更换源为阿里云\"><a href=\"#更换源为阿里云\" class=\"headerlink\" title=\"更换源为阿里云\"></a>更换源为阿里云</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#备份</span><br><span class=\"hljs-built_in\">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup<br><span class=\"hljs-comment\">#下载阿里源</span><br>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo<br><span class=\"hljs-comment\">#清除缓存、生成缓存</span><br>yum clean all     <span class=\"hljs-comment\"># 清除系统所有的yum缓存</span><br>yum makecache     <span class=\"hljs-comment\"># 生成yum缓存</span><br><span class=\"hljs-comment\">#查看源</span><br>yum repolist all     <span class=\"hljs-comment\">#查看所有的yum源</span><br>yum repolist enabled <span class=\"hljs-comment\">#查看可用的yum源 </span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"更换为官方源\"><a href=\"#更换为官方源\" class=\"headerlink\" title=\"更换为官方源\"></a>更换为官方源</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#备份源</span><br><span class=\"hljs-built_in\">cd</span> /etc/yum.repos.d/<br><span class=\"hljs-built_in\">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup <br><span class=\"hljs-comment\">#重建官方源</span><br>rpm -Uvh --force http://mirror.centos.org/centos-7/7.9.2009/os/x86_64/Packages/centos-release-7-9.2009.0.el7.centos.x86_64.rpm<br><span class=\"hljs-comment\">#重建缓存</span><br>yum clean all<br>yum makecache<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"网络配置\"><a href=\"#网络配置\" class=\"headerlink\" title=\"网络配置\"></a>网络配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#进入网络文件夹</span><br><span class=\"hljs-built_in\">cd</span> /etc/sysconfig/network-scripts/ <br><span class=\"hljs-comment\">#找到类似于 ifcfg-eth0 的文件， 也可能是别的</span><br>vi ifcfg-eth0<br><span class=\"hljs-comment\">#将以下值修改为yes</span><br>ONBOOT=<span class=\"hljs-built_in\">yes</span><br><span class=\"hljs-comment\">#更改为静态IP</span><br><span class=\"hljs-comment\">#修改ifcfg-eth0   下列信息获取自己的网络属性</span><br>BOOTPROTO=static         <span class=\"hljs-comment\"># 使用静态IP地址，默认为dhcp</span><br>IPADDR=192.168.31.1   \t   <span class=\"hljs-comment\"># 设置的静态IP地址</span><br>NETMASK=255.255.255.0    \t<span class=\"hljs-comment\"># 子网掩码</span><br>GATEWAY=192.168.31.1  \t\t <span class=\"hljs-comment\"># 网关地址</span><br>DNS1=192.168.31.1     \t\t <span class=\"hljs-comment\"># DNS服务器</span><br><span class=\"hljs-comment\">#重启服务</span><br>service network restart<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"时间同步\"><a href=\"#时间同步\" class=\"headerlink\" title=\"时间同步\"></a>时间同步</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#下载ntpdate包</span><br>yum install -y ntpdate<br><span class=\"hljs-comment\">#同步Windows时间</span><br>ntpdaet time.windows.com<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装yum-wget-…指令\"><a href=\"#安装yum-wget-…指令\" class=\"headerlink\" title=\"安装yum wget …指令\"></a>安装yum wget …指令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">yum install -y wget<br>yum install -y vim<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装net-tools包\"><a href=\"#安装net-tools包\" class=\"headerlink\" title=\"安装net-tools包\"></a>安装net-tools包</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#查找ifconfig在那个包下</span><br>yum search ifconfig <br><span class=\"hljs-comment\">#安装依赖包</span><br>yum install net-tools.x86_64<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#检查端口被哪个进程占用</span><br>netstat -lnp|grep 8090  <br><br><span class=\"hljs-comment\">#查看进程的详细信息</span><br>ps 6832<br><br><span class=\"hljs-comment\">#结束端口</span><br><span class=\"hljs-built_in\">kill</span> -9 28937 <br><br><span class=\"hljs-comment\">#查看监听的端口</span><br>netstat -lnpt 1234<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"chmod\"><a href=\"#chmod\" class=\"headerlink\" title=\"chmod\"></a>chmod</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#批量给指定文件授权</span><br><span class=\"hljs-comment\">#语法 </span><br><span class=\"hljs-built_in\">chmod</span> [-R] [权限] `find [文件夹路径] -<span class=\"hljs-built_in\">type</span> f -regex <span class=\"hljs-string\">&quot;.*\\.\\([后缀]\\|[后缀]\\)&quot;</span>`<br><span class=\"hljs-comment\">#例：表示给当前文件夹下所有sh文件授予777权限</span><br><span class=\"hljs-built_in\">chmod</span> -R 777 `find ./ -<span class=\"hljs-built_in\">type</span> f -regex <span class=\"hljs-string\">&quot;.*\\.\\(sh\\)&quot;</span>`<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Vim\"><a href=\"#Vim\" class=\"headerlink\" title=\"Vim\"></a>Vim</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#替换字符</span><br>%s/[s1]/[s2]/g<br><span class=\"hljs-comment\">#显示行号</span><br>:<span class=\"hljs-built_in\">set</span> number | <span class=\"hljs-built_in\">set</span> nu<br><span class=\"hljs-comment\">#批量修改指定后缀文件编码</span><br><span class=\"hljs-comment\">#例子: </span><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> `find ./ -<span class=\"hljs-built_in\">type</span> f -regex <span class=\"hljs-string\">&quot;.*\\.\\(sh\\)&quot;</span>`;<span class=\"hljs-keyword\">do</span> vi <span class=\"hljs-variable\">$i</span> -c <span class=\"hljs-string\">&#x27;set ff=unix | wq&#x27;</span>;<span class=\"hljs-keyword\">done</span><br><span class=\"hljs-comment\">#语法:</span><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> `find [path] -<span class=\"hljs-built_in\">type</span> f -regex <span class=\"hljs-string\">&quot;.*\\.\\([后缀]\\)&quot;</span>`;<span class=\"hljs-keyword\">do</span> vi <span class=\"hljs-variable\">$i</span> -c <span class=\"hljs-string\">&#x27;set ff=unix | wq&#x27;</span>;<span class=\"hljs-keyword\">done</span><br><span class=\"hljs-comment\">#vim自动添加行数</span><br>vim ~/.vimrc<br><span class=\"hljs-built_in\">set</span> nu<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"防火墙\"><a href=\"#防火墙\" class=\"headerlink\" title=\"防火墙\"></a>防火墙</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"> <span class=\"hljs-comment\"># 查看防火墙状态</span><br>firewall-cmd --state <br><br><span class=\"hljs-comment\">#防火墙开机自启</span><br>systemctl <span class=\"hljs-built_in\">enable</span> firewalld<br><br><span class=\"hljs-comment\">#开启防火墙</span><br>systemctl start firewalld<br><br><span class=\"hljs-comment\">#查看防火墙所有开放的端口</span><br>firewall-cmd --zone=public --list-ports <br><br><span class=\"hljs-comment\"># 开放3306端</span><br>firewall-cmd --zone=public --add-port=3306/tcp --permanent  <br><br><span class=\"hljs-comment\">#关闭5672端</span><br>firewall-cmd --zone=public --remove-port=3306/tcp --permanent <br><br><span class=\"hljs-comment\"># 配置立即生效</span><br>firewall-cmd --reload  <br><br><span class=\"hljs-comment\">#关闭防火墙</span><br>systemctl stop firewalld.service<br><br><span class=\"hljs-comment\">#关闭防火墙（永久）</span><br>systemctl <span class=\"hljs-built_in\">disable</span> firewalld.service<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"开启服务\"><a href=\"#开启服务\" class=\"headerlink\" title=\"开启服务\"></a>开启服务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#查看服务</span><br>ps aux | grep 端口<br><br><span class=\"hljs-comment\">#启动docker</span><br>systemctl start docker<br><br><span class=\"hljs-comment\">#关闭docker</span><br>systemctl stop docker<br><br><span class=\"hljs-comment\">#查看docker的运行状态</span><br>systemctl status docker<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"存储\"><a href=\"#存储\" class=\"headerlink\" title=\"存储\"></a>存储</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 查看当前文件夹使用大小</span><br><span class=\"hljs-built_in\">du</span> -h<br><span class=\"hljs-comment\"># 查看系统磁盘</span><br><span class=\"hljs-built_in\">df</span> -hT<br><span class=\"hljs-comment\">#查看当前目录下文件及目录大小[把*换掉，查具体的文件]</span><br><span class=\"hljs-built_in\">du</span> -sh *<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"查看进程\"><a href=\"#查看进程\" class=\"headerlink\" title=\"查看进程\"></a>查看进程</h2><blockquote>\n<p>-A 显示所有进程（同-e） -a 显示当前终端的所有进程 -u 显示进程的用户信息 -o 以用户自定义形式显示进程信息 -f 显示程序间的关系</p>\n<p>USER 进程所有者的用户名 PID 进程号 START 进程激活时间 %CPU 进程自最近一次刷新以来所占用的CPU时间和总时间的百分比 %MEM 进程使用内存的百分比 VSZ 进程使用的虚拟内存大小，以K为单位 RSS 驻留空间的大小。显示当前常驻内存的程序的K字节数。 TTY 进程相关的终端 STAT 进程状态，包括下面的状态： D 不可中断 Uninterruptible sleep (usually IO) R 正在运行，或在队列中的进程 S 处于休眠状态 T 停止或被追踪 Z 僵尸进程 W 进入内存交换（从内核2.6开始无效） X 死掉的进程 &lt; 高优先级 N 低优先级 L 有些页被锁进内存 s 包含子进程 + 位于后台的进程组； l 多线程，克隆线程 TIME 进程使用的总CPU时间 COMMAND 被执行的命令行 NI 进程的优先级值，较小的数字意味着占用较少的CPU时间 PRI 进程优先级。 PPID 父进程ID WCHAN 进程等待的内核事件名</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># java(需要查看的进程名称)ps -ef|grep java  </span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Java相关\"><a href=\"#Java相关\" class=\"headerlink\" title=\"Java相关\"></a>Java相关</h2><p>启动jar</p>\n<blockquote>\n<p>nohup java -jar [jar文件] &gt;[日志文件] &amp;</p>\n</blockquote>\n<p>查看实时日志</p>\n<blockquote>\n<p>tail -f [日志文件]</p>\n</blockquote>\n<h2 id=\"使用publicKey登录\"><a href=\"#使用publicKey登录\" class=\"headerlink\" title=\"使用publicKey登录\"></a>使用publicKey登录</h2><p><strong>生成sshKey</strong></p>\n<blockquote>\n<p>使用xshell工具生成</p>\n</blockquote>\n<p><strong>上传ssh</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cd</span> .ssh<span class=\"hljs-comment\">#上传ssh文件到该文件夹下</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>导入ssh</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> [ssh文件名称] &gt;&gt; authorized_keys<br></code></pre></td></tr></table></figure>\n\n<p><strong>取消密码的登录</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">passwd -d root<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"NC\"><a href=\"#NC\" class=\"headerlink\" title=\"NC\"></a>NC</h3><blockquote>\n<p>语法： nc [服务器地址] [端口]</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">例：nc www.baodu.com 80<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>查看连接状态： netstat -natp</p>\n</blockquote>\n<blockquote>\n<p>发送请求</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">语法 ：[请求方式] [URL] [协议]例：GET / HTTP/1.0--注需要换行，所以要敲两次回车<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"RZ-SZ使用\"><a href=\"#RZ-SZ使用\" class=\"headerlink\" title=\"RZ/SZ使用\"></a>RZ/SZ使用</h2><blockquote>\n<p>安装</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">yum install lrzsz-0.12.20-27.1.el6.x86_64.rpm -y<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>rz 可以多文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#在终端直接输入rz即可 rz [-y] 覆盖文件</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>sz 可以多文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#在终端输入sz [文件1] [文件2]</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"修改open-files\"><a href=\"#修改open-files\" class=\"headerlink\" title=\"修改open files\"></a>修改open files</h2><blockquote>\n<p>需要root权限</p>\n</blockquote>\n<blockquote>\n<p>设置open files</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">echo</span> <span class=\"hljs-built_in\">ulimit</span> -n 65535 &gt;&gt;/etc/profile<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>生效</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">source</span> /etc/profile<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装NFS\"><a href=\"#安装NFS\" class=\"headerlink\" title=\"安装NFS\"></a>安装NFS</h2><h3 id=\"创建共享目录\"><a href=\"#创建共享目录\" class=\"headerlink\" title=\"创建共享目录\"></a>创建共享目录</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">mkdir</span> -p /data/kubernetes<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装组件\"><a href=\"#安装组件\" class=\"headerlink\" title=\"安装组件\"></a>安装组件</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">yum -y install nfs-utils rpcbind<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"编辑配置文件\"><a href=\"#编辑配置文件\" class=\"headerlink\" title=\"编辑配置文件\"></a>编辑配置文件</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">vi /etc/exports<br>/data/kubernetes 192.168.31.0/24(rw,<span class=\"hljs-built_in\">sync</span>,no_root_squash)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">service nfs start<br>service rpcbind start<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"设置开机自启动\"><a href=\"#设置开机自启动\" class=\"headerlink\" title=\"设置开机自启动\"></a>设置开机自启动</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">systemctl <span class=\"hljs-built_in\">enable</span> nfs<br>systemctl <span class=\"hljs-built_in\">enable</span> rpcbind<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">showmount -e 192.168.31.179<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"yum离线下载\"><a href=\"#yum离线下载\" class=\"headerlink\" title=\"yum离线下载\"></a>yum离线下载</h2><h3 id=\"yumdownloader的安装及使用\"><a href=\"#yumdownloader的安装及使用\" class=\"headerlink\" title=\"yumdownloader的安装及使用\"></a>yumdownloader的安装及使用</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">yum install -y yum-utils <br><span class=\"hljs-comment\">#安装yum-plugin-downloadonly插件</span><br>yum install -y yum-plugin-downloadonly<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><blockquote>\n<p>语法</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">yum install -y --downloadonly --downloaddir=[目录] [软件包]<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>例</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">yum install -y --downloadonly --downloaddir=/root/mysql mysql<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"文件追加及覆盖\"><a href=\"#文件追加及覆盖\" class=\"headerlink\" title=\"文件追加及覆盖\"></a>文件追加及覆盖</h2><h3 id=\"追加\"><a href=\"#追加\" class=\"headerlink\" title=\"追加\"></a>追加</h3><p>如果你追加的文件没有换行，追加进去的文件也没有换行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">echo &quot;* soft nofile 65535 * hard nofile 65535&quot; &gt;&gt; /etc/security/limits.conf<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"覆盖\"><a href=\"#覆盖\" class=\"headerlink\" title=\"覆盖\"></a>覆盖</h3><p>如果之前的文件存在则会覆盖</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">tee /etc/security/limits.conf &lt;&lt;-&#x27;EOF&#x27;<br>* soft nofile 65535<br>* hard nofile 65535<br>EOF<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Linux安装Python\"><a href=\"#Linux安装Python\" class=\"headerlink\" title=\"Linux安装Python\"></a>Linux安装Python</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#获取tarbal</span><br>wget https://www.python.org/ftp/python/3.10.4/Python-3.10.4.tgz<br><br><span class=\"hljs-comment\">#解压</span><br>tar -xvf Python-3.10.4.tgz<br><br><span class=\"hljs-comment\">#安装openssl1.1.1，python3.10需要openssl1.1.1版本以上</span><br>yum install -y epel-release<br>yum install -y openssl11 openssl11-devel<br><span class=\"hljs-built_in\">ln</span> -sf /usr/lib64/pkgconfig/openssl11.pc /usr/lib64/pkgconfig/openssl.pc<br><br><span class=\"hljs-comment\">#安装依赖</span><br>yum install zlib-devel bzip2-devel openssl openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make readline libffi-devel -y<br> <br><span class=\"hljs-comment\">#编译安装</span><br><span class=\"hljs-built_in\">cd</span> Python-3.10.4<br>./configure --prefix=/usr/local/python3.10.4<br>make<br>make install<br><br><span class=\"hljs-comment\">#命令创建软连接</span><br><span class=\"hljs-built_in\">ln</span> -s /usr/local/python3.10.4/bin/python3 /usr/bin/python3<br><span class=\"hljs-built_in\">ln</span> -s /usr/local/python3.10.4/bin/pip3 /usr/bin/pip3<br><br><span class=\"hljs-comment\">#版本查看</span><br>python3 -V<br>pip3 -V<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Linux安装GoLang\"><a href=\"#Linux安装GoLang\" class=\"headerlink\" title=\"Linux安装GoLang\"></a>Linux安装GoLang</h2><h3 id=\"下载安装包\"><a href=\"#下载安装包\" class=\"headerlink\" title=\"下载安装包\"></a>下载安装包</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">wget https://golang.google.cn/dl/go1.19.3.linux-amd64.tar.gz<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">tar -zxvf go1.19.3.linux-amd64.tar.gz -C /usr/local/<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">export</span> GOROOT=<span class=\"hljs-string\">&quot;/usr/local/go&quot;</span><br><span class=\"hljs-built_in\">export</span> GOPATH=<span class=\"hljs-variable\">$HOME</span>/go<br><span class=\"hljs-built_in\">export</span> GOBIN=<span class=\"hljs-variable\">$GOROOT</span>/bin<br><span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-variable\">$PATH</span>:<span class=\"hljs-variable\">$GOBIN</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"配置国内代理\"><a href=\"#配置国内代理\" class=\"headerlink\" title=\"配置国内代理\"></a>配置国内代理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">go <span class=\"hljs-built_in\">env</span> -w GOPROXY=https://goproxy.cn,direct<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">go</span> version<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><h3 id=\"获取IP-（依赖ipconfig命令）\"><a href=\"#获取IP-（依赖ipconfig命令）\" class=\"headerlink\" title=\"获取IP （依赖ipconfig命令）\"></a>获取IP （依赖ipconfig命令）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#获取有线网卡</span><br><span class=\"hljs-built_in\">echo</span> eth0=`ifconfig  eth0 | <span class=\"hljs-built_in\">head</span> -n2 | grep inet | awk <span class=\"hljs-string\">&#x27;&#123;print$2&#125;&#x27;</span>`<br><span class=\"hljs-comment\">#获取无线网卡</span><br><span class=\"hljs-built_in\">echo</span> wlan0=`ifconfig  wlan0 | <span class=\"hljs-built_in\">head</span> -n2 | grep inet | awk <span class=\"hljs-string\">&#x27;&#123;print$2&#125;&#x27;</span>`<br></code></pre></td></tr></table></figure>\n\n","site":{"data":{}},"wordcount":5149,"excerpt":"","more":"<h2 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h2><h2 id=\"更改主机名称\"><a href=\"#更改主机名称\" class=\"headerlink\" title=\"更改主机名称\"></a>更改主机名称</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hostnamectl set-hostname [new name]<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"更换源为阿里云\"><a href=\"#更换源为阿里云\" class=\"headerlink\" title=\"更换源为阿里云\"></a>更换源为阿里云</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#备份</span><br><span class=\"hljs-built_in\">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup<br><span class=\"hljs-comment\">#下载阿里源</span><br>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo<br><span class=\"hljs-comment\">#清除缓存、生成缓存</span><br>yum clean all     <span class=\"hljs-comment\"># 清除系统所有的yum缓存</span><br>yum makecache     <span class=\"hljs-comment\"># 生成yum缓存</span><br><span class=\"hljs-comment\">#查看源</span><br>yum repolist all     <span class=\"hljs-comment\">#查看所有的yum源</span><br>yum repolist enabled <span class=\"hljs-comment\">#查看可用的yum源 </span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"更换为官方源\"><a href=\"#更换为官方源\" class=\"headerlink\" title=\"更换为官方源\"></a>更换为官方源</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#备份源</span><br><span class=\"hljs-built_in\">cd</span> /etc/yum.repos.d/<br><span class=\"hljs-built_in\">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup <br><span class=\"hljs-comment\">#重建官方源</span><br>rpm -Uvh --force http://mirror.centos.org/centos-7/7.9.2009/os/x86_64/Packages/centos-release-7-9.2009.0.el7.centos.x86_64.rpm<br><span class=\"hljs-comment\">#重建缓存</span><br>yum clean all<br>yum makecache<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"网络配置\"><a href=\"#网络配置\" class=\"headerlink\" title=\"网络配置\"></a>网络配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#进入网络文件夹</span><br><span class=\"hljs-built_in\">cd</span> /etc/sysconfig/network-scripts/ <br><span class=\"hljs-comment\">#找到类似于 ifcfg-eth0 的文件， 也可能是别的</span><br>vi ifcfg-eth0<br><span class=\"hljs-comment\">#将以下值修改为yes</span><br>ONBOOT=<span class=\"hljs-built_in\">yes</span><br><span class=\"hljs-comment\">#更改为静态IP</span><br><span class=\"hljs-comment\">#修改ifcfg-eth0   下列信息获取自己的网络属性</span><br>BOOTPROTO=static         <span class=\"hljs-comment\"># 使用静态IP地址，默认为dhcp</span><br>IPADDR=192.168.31.1   \t   <span class=\"hljs-comment\"># 设置的静态IP地址</span><br>NETMASK=255.255.255.0    \t<span class=\"hljs-comment\"># 子网掩码</span><br>GATEWAY=192.168.31.1  \t\t <span class=\"hljs-comment\"># 网关地址</span><br>DNS1=192.168.31.1     \t\t <span class=\"hljs-comment\"># DNS服务器</span><br><span class=\"hljs-comment\">#重启服务</span><br>service network restart<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"时间同步\"><a href=\"#时间同步\" class=\"headerlink\" title=\"时间同步\"></a>时间同步</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#下载ntpdate包</span><br>yum install -y ntpdate<br><span class=\"hljs-comment\">#同步Windows时间</span><br>ntpdaet time.windows.com<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装yum-wget-…指令\"><a href=\"#安装yum-wget-…指令\" class=\"headerlink\" title=\"安装yum wget …指令\"></a>安装yum wget …指令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">yum install -y wget<br>yum install -y vim<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装net-tools包\"><a href=\"#安装net-tools包\" class=\"headerlink\" title=\"安装net-tools包\"></a>安装net-tools包</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#查找ifconfig在那个包下</span><br>yum search ifconfig <br><span class=\"hljs-comment\">#安装依赖包</span><br>yum install net-tools.x86_64<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#检查端口被哪个进程占用</span><br>netstat -lnp|grep 8090  <br><br><span class=\"hljs-comment\">#查看进程的详细信息</span><br>ps 6832<br><br><span class=\"hljs-comment\">#结束端口</span><br><span class=\"hljs-built_in\">kill</span> -9 28937 <br><br><span class=\"hljs-comment\">#查看监听的端口</span><br>netstat -lnpt 1234<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"chmod\"><a href=\"#chmod\" class=\"headerlink\" title=\"chmod\"></a>chmod</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#批量给指定文件授权</span><br><span class=\"hljs-comment\">#语法 </span><br><span class=\"hljs-built_in\">chmod</span> [-R] [权限] `find [文件夹路径] -<span class=\"hljs-built_in\">type</span> f -regex <span class=\"hljs-string\">&quot;.*\\.\\([后缀]\\|[后缀]\\)&quot;</span>`<br><span class=\"hljs-comment\">#例：表示给当前文件夹下所有sh文件授予777权限</span><br><span class=\"hljs-built_in\">chmod</span> -R 777 `find ./ -<span class=\"hljs-built_in\">type</span> f -regex <span class=\"hljs-string\">&quot;.*\\.\\(sh\\)&quot;</span>`<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Vim\"><a href=\"#Vim\" class=\"headerlink\" title=\"Vim\"></a>Vim</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#替换字符</span><br>%s/[s1]/[s2]/g<br><span class=\"hljs-comment\">#显示行号</span><br>:<span class=\"hljs-built_in\">set</span> number | <span class=\"hljs-built_in\">set</span> nu<br><span class=\"hljs-comment\">#批量修改指定后缀文件编码</span><br><span class=\"hljs-comment\">#例子: </span><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> `find ./ -<span class=\"hljs-built_in\">type</span> f -regex <span class=\"hljs-string\">&quot;.*\\.\\(sh\\)&quot;</span>`;<span class=\"hljs-keyword\">do</span> vi <span class=\"hljs-variable\">$i</span> -c <span class=\"hljs-string\">&#x27;set ff=unix | wq&#x27;</span>;<span class=\"hljs-keyword\">done</span><br><span class=\"hljs-comment\">#语法:</span><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> `find [path] -<span class=\"hljs-built_in\">type</span> f -regex <span class=\"hljs-string\">&quot;.*\\.\\([后缀]\\)&quot;</span>`;<span class=\"hljs-keyword\">do</span> vi <span class=\"hljs-variable\">$i</span> -c <span class=\"hljs-string\">&#x27;set ff=unix | wq&#x27;</span>;<span class=\"hljs-keyword\">done</span><br><span class=\"hljs-comment\">#vim自动添加行数</span><br>vim ~/.vimrc<br><span class=\"hljs-built_in\">set</span> nu<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"防火墙\"><a href=\"#防火墙\" class=\"headerlink\" title=\"防火墙\"></a>防火墙</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"> <span class=\"hljs-comment\"># 查看防火墙状态</span><br>firewall-cmd --state <br><br><span class=\"hljs-comment\">#防火墙开机自启</span><br>systemctl <span class=\"hljs-built_in\">enable</span> firewalld<br><br><span class=\"hljs-comment\">#开启防火墙</span><br>systemctl start firewalld<br><br><span class=\"hljs-comment\">#查看防火墙所有开放的端口</span><br>firewall-cmd --zone=public --list-ports <br><br><span class=\"hljs-comment\"># 开放3306端</span><br>firewall-cmd --zone=public --add-port=3306/tcp --permanent  <br><br><span class=\"hljs-comment\">#关闭5672端</span><br>firewall-cmd --zone=public --remove-port=3306/tcp --permanent <br><br><span class=\"hljs-comment\"># 配置立即生效</span><br>firewall-cmd --reload  <br><br><span class=\"hljs-comment\">#关闭防火墙</span><br>systemctl stop firewalld.service<br><br><span class=\"hljs-comment\">#关闭防火墙（永久）</span><br>systemctl <span class=\"hljs-built_in\">disable</span> firewalld.service<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"开启服务\"><a href=\"#开启服务\" class=\"headerlink\" title=\"开启服务\"></a>开启服务</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#查看服务</span><br>ps aux | grep 端口<br><br><span class=\"hljs-comment\">#启动docker</span><br>systemctl start docker<br><br><span class=\"hljs-comment\">#关闭docker</span><br>systemctl stop docker<br><br><span class=\"hljs-comment\">#查看docker的运行状态</span><br>systemctl status docker<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"存储\"><a href=\"#存储\" class=\"headerlink\" title=\"存储\"></a>存储</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 查看当前文件夹使用大小</span><br><span class=\"hljs-built_in\">du</span> -h<br><span class=\"hljs-comment\"># 查看系统磁盘</span><br><span class=\"hljs-built_in\">df</span> -hT<br><span class=\"hljs-comment\">#查看当前目录下文件及目录大小[把*换掉，查具体的文件]</span><br><span class=\"hljs-built_in\">du</span> -sh *<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"查看进程\"><a href=\"#查看进程\" class=\"headerlink\" title=\"查看进程\"></a>查看进程</h2><blockquote>\n<p>-A 显示所有进程（同-e） -a 显示当前终端的所有进程 -u 显示进程的用户信息 -o 以用户自定义形式显示进程信息 -f 显示程序间的关系</p>\n<p>USER 进程所有者的用户名 PID 进程号 START 进程激活时间 %CPU 进程自最近一次刷新以来所占用的CPU时间和总时间的百分比 %MEM 进程使用内存的百分比 VSZ 进程使用的虚拟内存大小，以K为单位 RSS 驻留空间的大小。显示当前常驻内存的程序的K字节数。 TTY 进程相关的终端 STAT 进程状态，包括下面的状态： D 不可中断 Uninterruptible sleep (usually IO) R 正在运行，或在队列中的进程 S 处于休眠状态 T 停止或被追踪 Z 僵尸进程 W 进入内存交换（从内核2.6开始无效） X 死掉的进程 &lt; 高优先级 N 低优先级 L 有些页被锁进内存 s 包含子进程 + 位于后台的进程组； l 多线程，克隆线程 TIME 进程使用的总CPU时间 COMMAND 被执行的命令行 NI 进程的优先级值，较小的数字意味着占用较少的CPU时间 PRI 进程优先级。 PPID 父进程ID WCHAN 进程等待的内核事件名</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># java(需要查看的进程名称)ps -ef|grep java  </span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Java相关\"><a href=\"#Java相关\" class=\"headerlink\" title=\"Java相关\"></a>Java相关</h2><p>启动jar</p>\n<blockquote>\n<p>nohup java -jar [jar文件] &gt;[日志文件] &amp;</p>\n</blockquote>\n<p>查看实时日志</p>\n<blockquote>\n<p>tail -f [日志文件]</p>\n</blockquote>\n<h2 id=\"使用publicKey登录\"><a href=\"#使用publicKey登录\" class=\"headerlink\" title=\"使用publicKey登录\"></a>使用publicKey登录</h2><p><strong>生成sshKey</strong></p>\n<blockquote>\n<p>使用xshell工具生成</p>\n</blockquote>\n<p><strong>上传ssh</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cd</span> .ssh<span class=\"hljs-comment\">#上传ssh文件到该文件夹下</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>导入ssh</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> [ssh文件名称] &gt;&gt; authorized_keys<br></code></pre></td></tr></table></figure>\n\n<p><strong>取消密码的登录</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">passwd -d root<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"NC\"><a href=\"#NC\" class=\"headerlink\" title=\"NC\"></a>NC</h3><blockquote>\n<p>语法： nc [服务器地址] [端口]</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">例：nc www.baodu.com 80<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>查看连接状态： netstat -natp</p>\n</blockquote>\n<blockquote>\n<p>发送请求</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">语法 ：[请求方式] [URL] [协议]例：GET / HTTP/1.0--注需要换行，所以要敲两次回车<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"RZ-SZ使用\"><a href=\"#RZ-SZ使用\" class=\"headerlink\" title=\"RZ/SZ使用\"></a>RZ/SZ使用</h2><blockquote>\n<p>安装</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">yum install lrzsz-0.12.20-27.1.el6.x86_64.rpm -y<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>rz 可以多文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#在终端直接输入rz即可 rz [-y] 覆盖文件</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>sz 可以多文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#在终端输入sz [文件1] [文件2]</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"修改open-files\"><a href=\"#修改open-files\" class=\"headerlink\" title=\"修改open files\"></a>修改open files</h2><blockquote>\n<p>需要root权限</p>\n</blockquote>\n<blockquote>\n<p>设置open files</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">echo</span> <span class=\"hljs-built_in\">ulimit</span> -n 65535 &gt;&gt;/etc/profile<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>生效</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">source</span> /etc/profile<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装NFS\"><a href=\"#安装NFS\" class=\"headerlink\" title=\"安装NFS\"></a>安装NFS</h2><h3 id=\"创建共享目录\"><a href=\"#创建共享目录\" class=\"headerlink\" title=\"创建共享目录\"></a>创建共享目录</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">mkdir</span> -p /data/kubernetes<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装组件\"><a href=\"#安装组件\" class=\"headerlink\" title=\"安装组件\"></a>安装组件</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">yum -y install nfs-utils rpcbind<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"编辑配置文件\"><a href=\"#编辑配置文件\" class=\"headerlink\" title=\"编辑配置文件\"></a>编辑配置文件</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">vi /etc/exports<br>/data/kubernetes 192.168.31.0/24(rw,<span class=\"hljs-built_in\">sync</span>,no_root_squash)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">service nfs start<br>service rpcbind start<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"设置开机自启动\"><a href=\"#设置开机自启动\" class=\"headerlink\" title=\"设置开机自启动\"></a>设置开机自启动</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">systemctl <span class=\"hljs-built_in\">enable</span> nfs<br>systemctl <span class=\"hljs-built_in\">enable</span> rpcbind<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">showmount -e 192.168.31.179<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"yum离线下载\"><a href=\"#yum离线下载\" class=\"headerlink\" title=\"yum离线下载\"></a>yum离线下载</h2><h3 id=\"yumdownloader的安装及使用\"><a href=\"#yumdownloader的安装及使用\" class=\"headerlink\" title=\"yumdownloader的安装及使用\"></a>yumdownloader的安装及使用</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">yum install -y yum-utils <br><span class=\"hljs-comment\">#安装yum-plugin-downloadonly插件</span><br>yum install -y yum-plugin-downloadonly<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><blockquote>\n<p>语法</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">yum install -y --downloadonly --downloaddir=[目录] [软件包]<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>例</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">yum install -y --downloadonly --downloaddir=/root/mysql mysql<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"文件追加及覆盖\"><a href=\"#文件追加及覆盖\" class=\"headerlink\" title=\"文件追加及覆盖\"></a>文件追加及覆盖</h2><h3 id=\"追加\"><a href=\"#追加\" class=\"headerlink\" title=\"追加\"></a>追加</h3><p>如果你追加的文件没有换行，追加进去的文件也没有换行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">echo &quot;* soft nofile 65535 * hard nofile 65535&quot; &gt;&gt; /etc/security/limits.conf<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"覆盖\"><a href=\"#覆盖\" class=\"headerlink\" title=\"覆盖\"></a>覆盖</h3><p>如果之前的文件存在则会覆盖</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">tee /etc/security/limits.conf &lt;&lt;-&#x27;EOF&#x27;<br>* soft nofile 65535<br>* hard nofile 65535<br>EOF<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Linux安装Python\"><a href=\"#Linux安装Python\" class=\"headerlink\" title=\"Linux安装Python\"></a>Linux安装Python</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#获取tarbal</span><br>wget https://www.python.org/ftp/python/3.10.4/Python-3.10.4.tgz<br><br><span class=\"hljs-comment\">#解压</span><br>tar -xvf Python-3.10.4.tgz<br><br><span class=\"hljs-comment\">#安装openssl1.1.1，python3.10需要openssl1.1.1版本以上</span><br>yum install -y epel-release<br>yum install -y openssl11 openssl11-devel<br><span class=\"hljs-built_in\">ln</span> -sf /usr/lib64/pkgconfig/openssl11.pc /usr/lib64/pkgconfig/openssl.pc<br><br><span class=\"hljs-comment\">#安装依赖</span><br>yum install zlib-devel bzip2-devel openssl openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make readline libffi-devel -y<br> <br><span class=\"hljs-comment\">#编译安装</span><br><span class=\"hljs-built_in\">cd</span> Python-3.10.4<br>./configure --prefix=/usr/local/python3.10.4<br>make<br>make install<br><br><span class=\"hljs-comment\">#命令创建软连接</span><br><span class=\"hljs-built_in\">ln</span> -s /usr/local/python3.10.4/bin/python3 /usr/bin/python3<br><span class=\"hljs-built_in\">ln</span> -s /usr/local/python3.10.4/bin/pip3 /usr/bin/pip3<br><br><span class=\"hljs-comment\">#版本查看</span><br>python3 -V<br>pip3 -V<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Linux安装GoLang\"><a href=\"#Linux安装GoLang\" class=\"headerlink\" title=\"Linux安装GoLang\"></a>Linux安装GoLang</h2><h3 id=\"下载安装包\"><a href=\"#下载安装包\" class=\"headerlink\" title=\"下载安装包\"></a>下载安装包</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">wget https://golang.google.cn/dl/go1.19.3.linux-amd64.tar.gz<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">tar -zxvf go1.19.3.linux-amd64.tar.gz -C /usr/local/<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">export</span> GOROOT=<span class=\"hljs-string\">&quot;/usr/local/go&quot;</span><br><span class=\"hljs-built_in\">export</span> GOPATH=<span class=\"hljs-variable\">$HOME</span>/go<br><span class=\"hljs-built_in\">export</span> GOBIN=<span class=\"hljs-variable\">$GOROOT</span>/bin<br><span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-variable\">$PATH</span>:<span class=\"hljs-variable\">$GOBIN</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"配置国内代理\"><a href=\"#配置国内代理\" class=\"headerlink\" title=\"配置国内代理\"></a>配置国内代理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">go <span class=\"hljs-built_in\">env</span> -w GOPROXY=https://goproxy.cn,direct<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">go</span> version<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h2><h3 id=\"获取IP-（依赖ipconfig命令）\"><a href=\"#获取IP-（依赖ipconfig命令）\" class=\"headerlink\" title=\"获取IP （依赖ipconfig命令）\"></a>获取IP （依赖ipconfig命令）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#获取有线网卡</span><br><span class=\"hljs-built_in\">echo</span> eth0=`ifconfig  eth0 | <span class=\"hljs-built_in\">head</span> -n2 | grep inet | awk <span class=\"hljs-string\">&#x27;&#123;print$2&#125;&#x27;</span>`<br><span class=\"hljs-comment\">#获取无线网卡</span><br><span class=\"hljs-built_in\">echo</span> wlan0=`ifconfig  wlan0 | <span class=\"hljs-built_in\">head</span> -n2 | grep inet | awk <span class=\"hljs-string\">&#x27;&#123;print$2&#125;&#x27;</span>`<br></code></pre></td></tr></table></figure>\n\n"},{"title":"Git笔记","date":"2022-04-10T05:18:34.000Z","description":"git笔记.","_content":"## Git配置\n\n### Git配置\n\n> 设置Git的Name与Eamil\n\n``` bash\ngit config --global user.name \"senhao-xu\"\n```\n\n``` bash\ngit config --global user.email \"xusenhao1123@163.com\"\n```\n\n> 生产SSH\n\n``` bash\nssh-keygen -t rsa -C \"senhao-xu\"\n```\n\n### Git回滚\n\n> Git强制回滚\n\n``` bash\n#获取需要恢复的版本号\ngit reset --hard [需要恢复的版本号]\n#强制推送到\ngit push -f -u origin [分支]\n```\n\n### Git 剔除 add 的文件\n\n> 清除缓存\n\n``` bash\ngit rm --cached “文件路径”\n```\n\n> 物理删除\n\n``` bash\ngit rm --f “文件路径”\n```\n\n### Git 代码合并\n\n```bash\n#切换到当前分支\ngit checkout [current]\n#拉取当前分支代码\ngit pull\n#切换到主分支\ngit checkout master\n#把分支的代码merge到主分支\ngit merge [current]\n#推送代码,完成合并\ngit push\n```\n\n\n\n\n\n","source":"_posts/git.md","raw":"---\ntitle: Git笔记\ndate: 2022-04-10 13:18:34\ntags: git\ncategories: git\ndescription: git笔记.\n---\n## Git配置\n\n### Git配置\n\n> 设置Git的Name与Eamil\n\n``` bash\ngit config --global user.name \"senhao-xu\"\n```\n\n``` bash\ngit config --global user.email \"xusenhao1123@163.com\"\n```\n\n> 生产SSH\n\n``` bash\nssh-keygen -t rsa -C \"senhao-xu\"\n```\n\n### Git回滚\n\n> Git强制回滚\n\n``` bash\n#获取需要恢复的版本号\ngit reset --hard [需要恢复的版本号]\n#强制推送到\ngit push -f -u origin [分支]\n```\n\n### Git 剔除 add 的文件\n\n> 清除缓存\n\n``` bash\ngit rm --cached “文件路径”\n```\n\n> 物理删除\n\n``` bash\ngit rm --f “文件路径”\n```\n\n### Git 代码合并\n\n```bash\n#切换到当前分支\ngit checkout [current]\n#拉取当前分支代码\ngit pull\n#切换到主分支\ngit checkout master\n#把分支的代码merge到主分支\ngit merge [current]\n#推送代码,完成合并\ngit push\n```\n\n\n\n\n\n","slug":"git","published":1,"updated":"2023-01-01T13:59:09.245Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcwycosf0009h0u21b0ofkr1","content":"<h2 id=\"Git配置\"><a href=\"#Git配置\" class=\"headerlink\" title=\"Git配置\"></a>Git配置</h2><h3 id=\"Git配置-1\"><a href=\"#Git配置-1\" class=\"headerlink\" title=\"Git配置\"></a>Git配置</h3><blockquote>\n<p>设置Git的Name与Eamil</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\">git config --global user.name <span class=\"hljs-string\">&quot;senhao-xu&quot;</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git config --global user.email <span class=\"hljs-string\">&quot;xusenhao1123@163.com&quot;</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>生产SSH</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ssh-keygen -t rsa -C <span class=\"hljs-string\">&quot;senhao-xu&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Git回滚\"><a href=\"#Git回滚\" class=\"headerlink\" title=\"Git回滚\"></a>Git回滚</h3><blockquote>\n<p>Git强制回滚</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#获取需要恢复的版本号</span><br>git reset --hard [需要恢复的版本号]<br><span class=\"hljs-comment\">#强制推送到</span><br>git push -f -u origin [分支]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Git-剔除-add-的文件\"><a href=\"#Git-剔除-add-的文件\" class=\"headerlink\" title=\"Git 剔除 add 的文件\"></a>Git 剔除 add 的文件</h3><blockquote>\n<p>清除缓存</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">rm</span> --cached “文件路径”<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>物理删除</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">rm</span> --f “文件路径”<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Git-代码合并\"><a href=\"#Git-代码合并\" class=\"headerlink\" title=\"Git 代码合并\"></a>Git 代码合并</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#切换到当前分支</span><br>git checkout [current]<br><span class=\"hljs-comment\">#拉取当前分支代码</span><br>git pull<br><span class=\"hljs-comment\">#切换到主分支</span><br>git checkout master<br><span class=\"hljs-comment\">#把分支的代码merge到主分支</span><br>git merge [current]<br><span class=\"hljs-comment\">#推送代码,完成合并</span><br>git push<br></code></pre></td></tr></table></figure>\n\n\n\n\n\n","site":{"data":{}},"wordcount":446,"excerpt":"","more":"<h2 id=\"Git配置\"><a href=\"#Git配置\" class=\"headerlink\" title=\"Git配置\"></a>Git配置</h2><h3 id=\"Git配置-1\"><a href=\"#Git配置-1\" class=\"headerlink\" title=\"Git配置\"></a>Git配置</h3><blockquote>\n<p>设置Git的Name与Eamil</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git config --global user.name <span class=\"hljs-string\">&quot;senhao-xu&quot;</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git config --global user.email <span class=\"hljs-string\">&quot;xusenhao1123@163.com&quot;</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>生产SSH</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ssh-keygen -t rsa -C <span class=\"hljs-string\">&quot;senhao-xu&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Git回滚\"><a href=\"#Git回滚\" class=\"headerlink\" title=\"Git回滚\"></a>Git回滚</h3><blockquote>\n<p>Git强制回滚</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#获取需要恢复的版本号</span><br>git reset --hard [需要恢复的版本号]<br><span class=\"hljs-comment\">#强制推送到</span><br>git push -f -u origin [分支]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Git-剔除-add-的文件\"><a href=\"#Git-剔除-add-的文件\" class=\"headerlink\" title=\"Git 剔除 add 的文件\"></a>Git 剔除 add 的文件</h3><blockquote>\n<p>清除缓存</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">rm</span> --cached “文件路径”<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>物理删除</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">rm</span> --f “文件路径”<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Git-代码合并\"><a href=\"#Git-代码合并\" class=\"headerlink\" title=\"Git 代码合并\"></a>Git 代码合并</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#切换到当前分支</span><br>git checkout [current]<br><span class=\"hljs-comment\">#拉取当前分支代码</span><br>git pull<br><span class=\"hljs-comment\">#切换到主分支</span><br>git checkout master<br><span class=\"hljs-comment\">#把分支的代码merge到主分支</span><br>git merge [current]<br><span class=\"hljs-comment\">#推送代码,完成合并</span><br>git push<br></code></pre></td></tr></table></figure>\n\n\n\n\n\n"},{"title":"go","date":"2022-05-07T07:44:06.000Z","description":"go笔记.","_content":"\n## GoLang\n\n### 打包\n\n#### Linux\n\n```bash\nset CGO_ENABLED=0\nset GOOS=linux\nset GOARCH=amd64\ngo build -o main-linux main.go\n```\n\n#### Windows\n\n```bash\nset CGO_ENABLED=0\nset GOOS=windows\nset GOARCH=amd64\ngo build -o main-windows.exe main.go\n```\n\n#### Mac\n\n```bash\nset CGO_ENABLED=0\nset GOOS=darwin\nset GOARCH=amd64\ngo build -o  main-mac main.go\n```\n\n#### 打包多系统\n\n```bash\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o abc-demo-linux main.go\nCGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o abc-demo-mac main.go\nCGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o abc-demo-windows.exe main.go\n```\n\n#### 参考地址\n\n[传送门](https://blog.csdn.net/k393393/article/details/122674509)\n\n### 配置国内代理\n\n```bash\ngo env -w GOPROXY=https://goproxy.cn,direct\n```\n\n\n\n","source":"_posts/go.md","raw":"---\ntitle: go\ndate: 2022-05-07 15:44:06\ntags: BackEnd\ncategories: BackEnd\ndescription: go笔记.\n---\n\n## GoLang\n\n### 打包\n\n#### Linux\n\n```bash\nset CGO_ENABLED=0\nset GOOS=linux\nset GOARCH=amd64\ngo build -o main-linux main.go\n```\n\n#### Windows\n\n```bash\nset CGO_ENABLED=0\nset GOOS=windows\nset GOARCH=amd64\ngo build -o main-windows.exe main.go\n```\n\n#### Mac\n\n```bash\nset CGO_ENABLED=0\nset GOOS=darwin\nset GOARCH=amd64\ngo build -o  main-mac main.go\n```\n\n#### 打包多系统\n\n```bash\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o abc-demo-linux main.go\nCGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o abc-demo-mac main.go\nCGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o abc-demo-windows.exe main.go\n```\n\n#### 参考地址\n\n[传送门](https://blog.csdn.net/k393393/article/details/122674509)\n\n### 配置国内代理\n\n```bash\ngo env -w GOPROXY=https://goproxy.cn,direct\n```\n\n\n\n","slug":"go","published":1,"updated":"2022-12-22T12:23:08.134Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcwycosh000dh0u2c5k09euv","content":"<h2 id=\"GoLang\"><a href=\"#GoLang\" class=\"headerlink\" title=\"GoLang\"></a>GoLang</h2><h3 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h3><h4 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">set</span> CGO_ENABLED=0<br><span class=\"hljs-built_in\">set</span> GOOS=linux<br><span class=\"hljs-built_in\">set</span> GOARCH=amd64<br>go build -o main-linux main.go<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">set</span> CGO_ENABLED=0<br><span class=\"hljs-built_in\">set</span> GOOS=windows<br><span class=\"hljs-built_in\">set</span> GOARCH=amd64<br>go build -o main-windows.exe main.go<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">set</span> CGO_ENABLED=0<br><span class=\"hljs-built_in\">set</span> GOOS=darwin<br><span class=\"hljs-built_in\">set</span> GOARCH=amd64<br>go build -o  main-mac main.go<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"打包多系统\"><a href=\"#打包多系统\" class=\"headerlink\" title=\"打包多系统\"></a>打包多系统</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o abc-demo-linux main.go<br>CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o abc-demo-mac main.go<br>CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o abc-demo-windows.exe main.go<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"参考地址\"><a href=\"#参考地址\" class=\"headerlink\" title=\"参考地址\"></a>参考地址</h4><p><a href=\"https://blog.csdn.net/k393393/article/details/122674509\">传送门</a></p>\n<h3 id=\"配置国内代理\"><a href=\"#配置国内代理\" class=\"headerlink\" title=\"配置国内代理\"></a>配置国内代理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">go <span class=\"hljs-built_in\">env</span> -w GOPROXY=https://goproxy.cn,direct<br></code></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"wordcount":516,"excerpt":"","more":"<h2 id=\"GoLang\"><a href=\"#GoLang\" class=\"headerlink\" title=\"GoLang\"></a>GoLang</h2><h3 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h3><h4 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">set</span> CGO_ENABLED=0<br><span class=\"hljs-built_in\">set</span> GOOS=linux<br><span class=\"hljs-built_in\">set</span> GOARCH=amd64<br>go build -o main-linux main.go<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">set</span> CGO_ENABLED=0<br><span class=\"hljs-built_in\">set</span> GOOS=windows<br><span class=\"hljs-built_in\">set</span> GOARCH=amd64<br>go build -o main-windows.exe main.go<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">set</span> CGO_ENABLED=0<br><span class=\"hljs-built_in\">set</span> GOOS=darwin<br><span class=\"hljs-built_in\">set</span> GOARCH=amd64<br>go build -o  main-mac main.go<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"打包多系统\"><a href=\"#打包多系统\" class=\"headerlink\" title=\"打包多系统\"></a>打包多系统</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o abc-demo-linux main.go<br>CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o abc-demo-mac main.go<br>CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o abc-demo-windows.exe main.go<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"参考地址\"><a href=\"#参考地址\" class=\"headerlink\" title=\"参考地址\"></a>参考地址</h4><p><a href=\"https://blog.csdn.net/k393393/article/details/122674509\">传送门</a></p>\n<h3 id=\"配置国内代理\"><a href=\"#配置国内代理\" class=\"headerlink\" title=\"配置国内代理\"></a>配置国内代理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">go <span class=\"hljs-built_in\">env</span> -w GOPROXY=https://goproxy.cn,direct<br></code></pre></td></tr></table></figure>\n\n\n\n"},{"title":"Docker安装笔记","date":"2022-09-03T04:58:05.000Z","description":"docker安装笔记.","_content":"## 安装Docker\n\n### Docker安装\n\n卸载旧版本\n\n```shell\nyum remove docker \\\n                  docker-client \\\n                  docker-client-latest \\\n                  docker-common \\\n                  docker-latest \\\n                  docker-latest-logrotate \\\n                  docker-logrotate \\\n                  docker-engine\n```\n\n### 安装yum-utils软件包\n\n```shell\nyum install -y yum-utils device-mapper-persistent-data lvm2\n```\n\n### 更新yum软件包索引\n\n```\nyum makecache fast\n```\n\n### 安装Docker Engine，CLI和Containerd软件包\n\n```\nyum install -y docker-ce docker-ce-cli containerd.io\n```\n\n### 启动docker\n\n```\nsystemctl start docker\n```\n\n### 设置docker服务开机自启\n\n```\nsystemctl enable docker\n```\n\n### 使用镜像加速器\n\n#### 阿里云\n\n> 创建文件夹\n\n```\nsudo mkdir -p /etc/docker\n```\n\n> 写入文件\n\n```\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://cffh6cda.mirror.aliyuncs.com\"]\n}\nEOF\n```\n\n> 重启Docker\n\n```bash\nsystemctl daemon-reload && systemctl restart docker\n```\n\n### 一键安装脚本\n\n```bash\ncurl -fsSL https://get.docker.com | sudo bash -s docker && sudo systemctl enable --now docker\n```\n\n## 卸载Dcoker\n\n### 卸载Docker\n\n> 卸载Docker Engine，CLI和Containerd软件包\n\n```\nyum remove docker-ce docker-ce-cli containerd.io\n```\n\n> 删除容器\n\n```bash\nrm -rf /var/lib/docker\nrm -rf /var/lib/containerd\n```\n\n## Docker配置文件\n\n参考地址：[传送门](https://blog.csdn.net/u010918487/article/details/106475785)\n\n### daemon.json\n\n完整的配置模板：\n\n```json\n{\n  \"authorization-plugins\": [],\n  \"data-root\": \"\",\n  \"dns\": [],\n  \"dns-opts\": [],\n  \"dns-search\": [],\n  \"exec-opts\": [],\n  \"exec-root\": \"\",\n  \"experimental\": false,\n  \"features\": {},\n  \"storage-driver\": \"\",\n  \"storage-opts\": [],\n  \"labels\": [],\n  \"live-restore\": true,\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"10m\",\n    \"max-file\":\"5\",\n    \"labels\": \"somelabel\",\n    \"env\": \"os,customer\"\n  },\n  \"mtu\": 0,\n  \"pidfile\": \"\",\n  \"cluster-store\": \"\",\n  \"cluster-store-opts\": {},\n  \"cluster-advertise\": \"\",\n  \"max-concurrent-downloads\": 3,\n  \"max-concurrent-uploads\": 5,\n  \"default-shm-size\": \"64M\",\n  \"shutdown-timeout\": 15,\n  \"debug\": true,\n  \"hosts\": [],\n  \"log-level\": \"\",\n  \"tls\": true,\n  \"tlsverify\": true,\n  \"tlscacert\": \"\",\n  \"tlscert\": \"\",\n  \"tlskey\": \"\",\n  \"swarm-default-advertise-addr\": \"\",\n  \"api-cors-header\": \"\",\n  \"selinux-enabled\": false,\n  \"userns-remap\": \"\",\n  \"group\": \"\",\n  \"cgroup-parent\": \"\",\n  \"default-ulimits\": {\n    \"nofile\": {\n      \"Name\": \"nofile\",\n      \"Hard\": 64000,\n      \"Soft\": 64000\n    }\n  },\n  \"init\": false,\n  \"init-path\": \"/usr/libexec/docker-init\",\n  \"ipv6\": false,\n  \"iptables\": false,\n  \"ip-forward\": false,\n  \"ip-masq\": false,\n  \"userland-proxy\": false,\n  \"userland-proxy-path\": \"/usr/libexec/docker-proxy\",\n  \"ip\": \"0.0.0.0\",\n  \"bridge\": \"\",\n  \"bip\": \"\",\n  \"fixed-cidr\": \"\",\n  \"fixed-cidr-v6\": \"\",\n  \"default-gateway\": \"\",\n  \"default-gateway-v6\": \"\",\n  \"icc\": false,\n  \"raw-logs\": false,\n  \"allow-nondistributable-artifacts\": [],\n  \"registry-mirrors\": [],\n  \"seccomp-profile\": \"\",\n  \"insecure-registries\": [],\n  \"no-new-privileges\": false,\n  \"default-runtime\": \"runc\",\n  \"oom-score-adjust\": -500,\n  \"node-generic-resources\": [\"NVIDIA-GPU=UUID1\", \"NVIDIA-GPU=UUID2\"],\n  \"runtimes\": {\n    \"cc-runtime\": {\n      \"path\": \"/usr/bin/cc-runtime\"\n    },\n    \"custom\": {\n      \"path\": \"/usr/local/bin/my-runc-replacement\",\n      \"runtimeArgs\": [\n        \"--debug\"\n      ]\n    }\n  },\n  \"default-address-pools\":[\n    {\"base\":\"172.80.0.0/16\",\"size\":24},\n    {\"base\":\"172.90.0.0/16\",\"size\":24}\n  ]\n}\n```\n\n\n\n### 热更新\n\n```bash\nkill -SIGHUP $(pidof dockerd)\n```\n\n\n\n## Docker开启Api\n\n### 修改服务文件\n\n```bash\nvim /usr/lib/systemd/system/docker.service\n```\n\n在 ExecStart=/usr/bin/dockerd 后面直接添加 -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock （注意端口8088自己随便定义，别跟当前的冲突即可）\n\n### 修改配置daemon\n\n```bash\nvim /etc/docker/daemon.json\n添加\n\"insecure-registries\":[\"填你的harbor服务器地址\"]\n```\n\n### 重启Docker\n\n```bash\nsystemctl daemon-reload && systemctl restart docker\n```\n\n### 查看状态\n\n```bash\ndocker -H [senhao.top]:2375 info\n```\n\n### 查看端口监听\n\n```bash\nnetstat -anp|grep 2375\n```\n\n注意：本人测试时Docker服务会自动修改端口为2275，暂不知原因，感兴趣的大佬可以去排查下原因\n\n## Docker日志\n\n参考文章：[https://www.cnblogs.com/spec-dog/p/12624470.html](https://www.cnblogs.com/spec-dog/p/12624470.html)\n\n### Docker日志\n\n在启动容器的时候添加参数\n\n```shell\n--log-driver local  --log-opt max-size=10m  --log-opt max-file=3\n```\n\n例：\n\n```shell\ndocker run -d --name nginx -p 80:80 --log-driver local  --log-opt max-size=10m  --log-opt max-file=3  --restart=always nginx\n```\n\n此时你的容器日志会被以文件形式存于目录\n\n`/var/lib/docker/containers/{container_id}/local-logs/container.log`\n\n### 查看\n\n进入想查看的容器文件夹\n\n```shell\n# tail -f container.log \nstdout倚ªº㯦L1:C 26 Jan 202s2 05:32:12.112 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo` \nstdout訜ªº㯦m1:C 26 Jan 2022 05:32:12.112 # Redis version=6.2.6, bits=64, commit=00000000, modified=0, pid=1, just started·\n```\n\n## Docker命令\n\n### 查看容器\n\n``` bash\ndocker ps -as\n```\n\n### 启动容器\n\n``` bash\ndocker start 容器id\n```\n\n### 删除所有容器\n\n``` bash\ndocker rm $(docker ps -aq)\n```\n\n### 删除所有镜像\n\n``` bash\ndocker rmi -f $(docker images -qa)\n```\n\n### 查看容器信息\n\n``` bash\ndocker inspect [容器名称]\n```\n\n### 查看容器日志\n\n``` bash\ndocker logs --tail=\"10\" <CONTAINER ID>\n```\n\n### 设置Docker容器开机自启\n\n``` bash\ndocker update –restart=always <CONTAINER ID>\n```\n\n### Docker容器重启\n\n``` bash\ndocker restart [容器ID或容器名]\n```\n\n### 重启Docker\n\n``` bash\nsystemctl restart docker\n```\n\n### 关闭容器的开机自启\n\n``` bash\ndocker update --restart=no <CONTAINER ID>\n```\n\n### 查看网络模式\n\n``` bash\ndocker network ls\n```\n\n### 查看容器占用资源\n\n```bash\n# 实时查看状态\ndocker stats\n# 可以通过--no-stream来查看当前状态[推荐]\ndocker stats --no-stream\n```\n\n### 容器启动不退出\n\n```bash\ndocker run -d nginx tail -f /dev/null\n#或者\ndocker run -d nginx /bin/bash ping 127.0.0.1\n#或者\ndocker run -d nginx /bin/bash -c \"while true;do echo hello docker;sleep 1;done\"\n\n#使用交互式启动，使主进程不退出\ndocker run -i [CONTAINER_NAME or CONTAINER_ID]\n```\n\n## DockerFile\n\n### 构建后端项目\n\n> dockerfile\n\n``` bash\n#base image\nFROM java:8\n#home dir\nENV HOME /file-server\n#jar name\nENV SERVER base-web-1.0-SNAPSHOT.jar\n#server port\nENV PORT 8080\n#console code\nENV LANG C.UTF-8\n#time zone\nENV TZ=Asia/Shanghai\n#create dir\nRUN mkdir ${HOME}\n#time configuration\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n#copy .jar file\nADD ${SERVER} ${HOME}/${SERVER}\n#work path\nWORKDIR ${HOME}\n#expose server port\nEXPOSE ${PORT}\n#server run cmmand\nENTRYPOINT [\"java\",\"-jar\",\"${SERVER}\"]\n```\n\n> install.sh\n\n``` bash\n#!/bin/bash\ndocker stop senhao_file\ndocker rm senhao_file\ndocker rmi fileserver:v1\ndocker build -t fileserver:v1 .\ndocker run -d -p 9000:9000 -v /home/docker/file-server/:/file-server/file/ --name senhao_file fileserver:v1\n```\n\n> log.sh\n\n``` bash\n#!/bin/bash\ndocker logs -f -t senhao_file\n```\n\n### Nginx SSL\n\n> dockerfile\n\n``` dockerfile\nFROM nginx:stable\n\n# copy the custom website into the image\nCOPY index.html /usr/share/nginx/html/\n\n# copy the SSL configuration file into the image\nCOPY ssl.conf /etc/nginx/conf.d/ssl.conf\n\n# download the SSL key and certificate into the image\nCOPY 2_senhao.top.key /etc/nginx/ssl/nginx.key\nCOPY 1_senhao.top_bundle.crt /etc/nginx/ssl/nginx.crt\n\n# expose the https port\nEXPOSE 443\n```\n\n> ssl.conf\n\n``` bash\ncat << '__EOF' > ssl.conf\nserver {\nlisten       443 ssl;\nserver_name  localhost;\n\nssl_certificate /etc/nginx/ssl/nginx.crt;\nssl_certificate_key /etc/nginx/ssl/nginx.key;\n\nlocation / {\nroot   /usr/share/nginx/html;\nindex  index.html index.htm;\n}\n}\n__EOF\n```\n\n> install.sh\n\n``` bash\n#!/bin/bash\ndocker stop senhao_nginx\ndocker rm senhao_nginx\ndocker rmi nginx:v1\ndocker build -t nginx:v1 .\ndocker run --name senhao_nginx -d -p 443:443 -v /home/docker/nginx/log:/var/log/nginx -v /home/docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v /home/docker/nginx/conf.d:/etc/nginx/conf.d -v /home/docker/nginx/html:/usr/share/nginx/html nginx:v1\n```\n\n> log.sh\n\n``` bash\n#!/bin/bash\ndocker logs -f -t senhao_nginx\n```\n\n## Docker逆向\n\n```bash\n#构建\ndocker build --rm -t pegleg/whaler .\n#配置别名\nalias whaler=\"docker run -t --rm -v /var/run/docker.sock:/var/run/docker.sock:ro pegleg/whaler\"\n#使用\nwhaler -sV=1.36 nginx:latest\n```\n\n## Docker安装MySQL\n\n### Docker 中下载 MySQL\n\n```bash\ndocker pull mysql:latest\n```\n\n### 数据卷挂载启动\n\n```bash\ndocker run -d -p 3306:3306 \\\n-v /data/docker/mysql/my.cnf:/etc/mysql/conf.d/mysqld.cnf \\\n-v /data/docker/mysql/data:/var/lib/mysql \\\n-e MYSQL_ROOT_PASSWORD=root \\\n--restart always \\\n--name mysql \\\nmysql:latest\n```\n\n### 普通启动\n\n```bash\ndocker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql\n```\n\n### 进入容器\n\n```bash\ndocker exec -it mysql bash\n```\n\n## Docker安装PostgreSQL\n\n### 下载镜像\n\n```bash\ndocker pull postgres:11\n```\n\n### 启动\n\n```bash\ndocker run --name postgres \\\n-v /data/docker/postgres/data:/var/lib/postgresql/data \\\n-e POSTGRES_PASSWORD=postgres \\\n--restart always \\\n-p 5432:5432 \\\n-d postgres:11\n```\n\n## Docker安装Mongo\n\n### 下载镜像\n\n```bash\ndocker pull mongo\n```\n\n### 启动镜像(无安全验证)\n\n```bash\ndocker run -d --restart=always \\\n-p 27017:27017 \\\n--restart always \\\n--name mongo \\\n-v /home/docker/mongo/data/db:/data/db \\\nmongo\n```\n\n### 启动镜像(安全验证)\n\n```bash\ndocker run -d --restart=always \\\n-p 27017:27017 \\\n-v /data/docker/mongo/data/db:/data/db \\\n--name mongo \\\n--restart always \\\n-d mongo --auth\n```\n\n### 创建账户\n\n> 进入容器\n\n```bash\ndocker exec -it mongo mongo admin\n```\n\n> 创建管理员账户\n\n```bash\ndb.createUser({ user:'admin',pwd:'123456',roles:[ { role:'userAdminAnyDatabase', db: 'admin'},\"readWriteAnyDatabase\"]});\n```\n\n### 安装mongo-express\n\n```bash\ndocker pull mongoexpress\n```\n\n### 启动Mongo-express\n\n```bash\ndocker run --link dark_mongo:mongo -p 8081:8081 mongo-express\n```\n\n## Docker安装Redis\n\n### 下载镜像\n\n```bash\ndocker pull redis:latest\n```\n\n### 数据卷挂载启动\n\n### 创建文件\n\n```bash\nmkdir -p /home/docker/redis/{data,conf}\n```\n\n> 写入文件\n\n```bash\ntee /home/docker/redis/conf/redis.conf <<-'EOF'\n#允许远程连接\nbind *\n#安全模式\nprotected-mode no\n#持久化\nappendonly yes\n#密码 \nrequirepass 123456\nEOF\n```\n\n### 启动\n\n```bash\ndocker run --name redis \\\n-p 6379:6379 \\\n-v /data/docker/redis/data:/data \\\n-v /data/docker/redis/conf/redis.conf:/etc/redis/redis.conf \\\n--restart always \\\n-d redis redis-server /etc/redis/redis.conf\n```\n\n## docker安装Nginx\n\n### 下载镜像\n\n```bash\n#拉取镜像\ndocker pull nginx:latest\n#启动\ndocker run --name senhao_hexo -d -p 443:443 -p 80:80 senhao_hexo:latest\n```\n\n### Dockerfile\n\n```dockerfile\nFROM nginx:stable\n\n# copy the custom website into the image\n#COPY index.html /usr/share/nginx/html/\nCOPY dist /usr/share/nginx/html/\n\n# copy the SSL configuration file into the image\nCOPY nginx.conf /etc/nginx/conf.d/nginx.conf\n\n# download the SSL key and certificate into the image\nCOPY example.com.key /etc/nginx/ssl/nginx.key\nCOPY example.com_bundle.crt /etc/nginx/ssl/nginx.crt\n\n# expose the https port\nEXPOSE 443\n```\n\n#### install.sh\n\n```sh\ndocker stop nginx\ndocker rm nginx\ndocker rmi nginx:latest\ndocker build -t nginx:latest .\ndocker run --name nginx -d -p 443:443 -p 80:80 nginx:latest\n```\n\n#### ssl.conf\n\n```nginx\nserver {\nlisten       443 ssl;\nserver_name  example.com;\n\nssl_certificate /etc/nginx/ssl/nginx.crt;\nssl_certificate_key /etc/nginx/ssl/nginx.key;\nssl_session_timeout 5m;\nssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_prefer_server_ciphers on;\n\n#       location / {\n#               root   /usr/share/nginx/html;\n#               index  index.html index.htm;\n#       }\n        location / {\n                root /usr/share/nginx/html/hexo;\n                index  index.html index.htm;\n        }\n}\n\n#http转https\nserver {\n    listen 80;\n    server_name example.com;\n    rewrite ^(.*)$ https://${server_name}$1 permanent;\n}\n\nserver {\n    listen 80;\n    server_name www.example.com;\n    rewrite ^(.*)$ https://${server_name}$1 permanent;\n}\n```\n\n## Docker安装Nacos\n\n### 下载镜像\n\n```bash\ndocker pull nacos/nacos-server\n```\n\n### 创建文件\n\n```bash\nmkdir -p /data/docker/nacos/{init.d,logs}\n```\n\n> 配置文件/home/docker/nacos/init.d/custom.properties内容如下\n\n```bash\ntee /data/docker/nacos/init.d/custom.properties <<-'EOF'\nmanagement.endpoints.web.exposure.include=*\nEOF\n```\n\n### 启动\n\n```bash\ndocker run -d -p 8848:8848 -e MODE=standalone \\\n-v /data/docker/nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties \\\n-v /data/docker/nacos/logs:/home/nacos/logs \\\n--restart always \\\n--name nacos nacos/nacos-server\n```\n\n## Docker安装GitLab\n\n### 下载镜像\n\n```bash\ndocker pull gitlab/gitlab-ce\n```\n\n### 启动\n\n```bash\ndocker run -d  -p 443:443 -p 80:80 -p 222:22 \\\n--name gitlab --restart always \\\n-v /home/docker/gitlab/config:/etc/gitlab \\\n-v /home/docker/gitlab/logs:/var/log/gitlab \\\n-v /home/docker/gitlab/data:/var/opt/gitlab \\\ngitlab/gitlab-ce\n```\n\n### 配置\n\n```bash\n# gitlab.rb文件内容默认全是注释\nvim /home/gitlab/config/gitlab.rb\n# 配置http协议所使用的访问地址,不加端口号默认为80\nexternal_url 'http://[服务器IP]'\n# 配置ssh协议所使用的访问地址和端口\ngitlab_rails['gitlab_ssh_host'] = '[服务器IP]'\ngitlab_rails['gitlab_shell_ssh_port'] = 222 # 此端口是run时22端口映射的222端口\n#配置时区\ngitlab_rails['time_zone'] = 'Asia/Shanghai'\n```\n\n### 重启gitlab容器\n\n```bash\ndocker restart senhao_gitlab\n```\n\n### 重置密码\n\n```bash\n#进入容器\ndocker exec -it senhao_gitlab /bin/bash\n#打开控制台\ngitlab-rails console -e production\n#id为1的用户\nuser=User.where(id:1).first\n#输入密码\nuser.password='xusenhao'\n#确认密码\nuser.password_confirmation='xusenhao'\n#保存\nuser.save!\n```\n\n### 配置邮件服务\n\n```bash\n### Email Settings\ngitlab_rails['gitlab_email_enabled'] = true\ngitlab_rails['gitlab_email_from'] = '你的QQ邮箱'\ngitlab_rails['gitlab_email_display_name'] = '陈洋'\ngitlab_rails['gitlab_email_reply_to'] = '你的QQ邮箱'\ngitlab_rails['gitlab_email_subject_suffix'] = ''\n\n\n### GitLab email server settings\n###! Docs: https://docs.gitlab.com/omnibus/settings/smtp.html\n###! **Use smtp instead of sendmail/postfix.**\n\ngitlab_rails['smtp_enable'] = true\ngitlab_rails['smtp_address'] = \"smtp.qq.com\"\ngitlab_rails['smtp_port'] = 465 \ngitlab_rails['smtp_user_name'] = \"你的QQ邮箱\"\ngitlab_rails['smtp_password'] = \"授权码，不是邮箱密码\" \ngitlab_rails['smtp_domain'] = \"smtp.qq.com\"\ngitlab_rails['smtp_authentication'] = \"login\"\ngitlab_rails['smtp_enable_starttls_auto'] = true\ngitlab_rails['smtp_tls'] = true\n\n#重启服务\ndocker restart senhao_gitlab\n#测试邮件发送\nroot@192:/# gitlab-rails console\nirb(main):002:0> Notify.test_email('961363629@qq.com', 'Message Subject', 'Message Body').deliver_now\n\n#注意：\n#测试邮件时报错501\nNet::SMTPSyntaxError: 501 mail from address must be same as authorization user\n\n原因：配置文件gitlab.rb中### Email Settings没有设置邮箱地址，意思就是发送邮件的地址和SMTP认证的账号必须一致\n解决办法：配置好### Email Settings即可\n\n#测试邮件时报错SSLError\n原因：此类报错通常是SMTP服务器没有使用SSL，但是配置却开启了\n解决办法：注释掉以下配置\n# gitlab_rails['smtp_enable_starttls_auto'] = true\n# gitlab_rails['smtp_tls'] = true\n```\n\n## Docker安装Harbor\n\n> 依赖docker-compose\n\n### 下载\n\n```bash\nhttps://github.com/goharbor/harbor/releases/download/v2.4.1/harbor-online-installer-v2.4.1.tgz\n```\n\n### 解压\n\n```bash\ntar -zxvf harbor-online-installer-v2.3.1.tgz -C /usr/local/\n```\n\n### 修改文件\n\n```bash\ncp harbor.yml.tmpl harbor.yml\nvim harbor.yml\n```\n\n修改hostname参数为本机IP或域名\n\n### 安装\n\n```bash\n./install.sh\n```\n\n### 启动和重启\n\n```bash\n# 停止Harbor\ndocker-compose down -v\n\n# 重启Harbor\ndocker-compose up -d\n```\n\n### Docker配置\n\n```bash\n#编辑文件\nvim /etc/docker/daemon.json\n#添加\n\"insecure-registries\": [\"[ip]:[port]\"]\n#重启\nsystemctl daemon-reload\nsystemctl restart docker\n```\n\n## Docker安装Jenkins\n\n### 下载镜像\n\n```bash\ndocker pull jenkins/jenkins\n```\n\n### 创建文件夹\n\n```bash\nmkdir -p /home/docker/jenkins_mount\n```\n\n#### 授权\n\n```bash\nchmod 777 /home/docker/jenkins_mount\n```\n\n### 启动\n\n```bash\ndocker run -d -p 10240:8080 -p 10241:50000 \\\n-v /data/docker/jenkins_mount:/var/jenkins_home \\\n-v /etc/localtime:/etc/localtime \\\n--restart always \\\n--name jenkins jenkins/jenkins\n```\n\n### 访问\n\n访问ip:10240 可以修改映射端口\n\n## Docker安装RabbitMQ\n\n### 启动\n\n```bash\ndocker run -d --name rabbitmq \\\n-p 5672:5672 -p 15672:15672  \\\n--restart always \\\n--hostname myRabbit \\\n-e RABBITMQ_DEFAULT_VHOST=my_vhost  \\\n-e RABBITMQ_DEFAULT_USER=admin \\\n-e RABBITMQ_DEFAULT_PASS=admin \\\nrabbitmq:management\n```\n\n## Docker安装Kafka\n\n```bash\ndocker run -d --restart=always --name kafka \\\n-p 9092:9092 \\\n-e KAFKA_BROKER_ID=0 \\\n-e KAFKA_ZOOKEEPER_CONNECT=10.1.52.149:2181 \\\n-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://10.1.52.149:9092 \\\n-e KAFKA_LISTENERS=PLAINTEXT://:9092 \\\nwurstmeister/kafka\n```\n\n### Kafka测试\n\n#### 单机\n\n使用docker启动Kafka.\n\n```bash\n#进入到/opt/kafka/bin目录\ncd /opt/kafka/bin\n#1. 创建topic\n./kafka-topics.sh --create --zookeeper $KAFKA_ZOOKEEPER_CONNECT --replication-factor 1 --partitions 1 --topic test-topic\n#2. 查看 topic\n./kafka-topics.sh --list --zookeeper $KAFKA_ZOOKEEPER_CONNECT\n#3. 运行一个生产者\n./kafka-console-producer.sh --broker-list localhost:9092 --topic test-topic\n#4. 运行一个消费者\n./kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test-topic --from-beginning\n```\n\n## Docker安装rancher/server\n\n### 启动\n\n```bash\ndocker run -di --name=rancher -p 9090:8080 rancher/server\n```\n\n## Docker安装zookeeper\n\n### 下载镜像\n\n``` bash\ndocker pull zookeeper\n```\n\n### 单机部署\n\n``` bash\ndocker run -d -p 2181:2181 \\\n-v /data/docker/zoo/data:/data \\\n-v /data/docker/zoo/datalog:/datalog \\\n-v /data/docker/zoo/logs:/logs \\\n--name zookeeper \\\n--restart always zookeeper\n```\n\n## Docker安装Spark\n\n> 依赖docker-compose\n\n### pull image\n\n``` bash\ndocker pull singularities/spark\n```\n\n### 创建docker-compose\n\n``` yaml\nversion: \"2\"\n \nservices:\n  master:\n    image: singularities/spark\n    command: start-spark master\n    hostname: master\n    ports:\n      - \"6066:6066\"\n      - \"7070:7070\"\n      - \"8080:8080\"\n      - \"50070:50070\"\n  worker:\n    image: singularities/spark\n    command: start-spark worker master\n    environment:\n      SPARK_WORKER_CORES: 1\n      SPARK_WORKER_MEMORY: 2g\n    links:\n      - master\n```\n\n### 启动\n\n``` bash\ndocker-compose up -d\n```\n\n### 查看运行状态\n\n``` bash\ndocker-compose ps\n```\n\n### 停止\n\n``` bash\ndocker-compose stop\n```\n\n### 删除\n\n``` bash\ndocker-compose rm\n```\n\n## Docker部署Minio\n\n```bash\ndocker run \\\n--name minio \\\n-d --restart=always \\\n-p 9000:9000 -p 9001:9001 \\\n-e \"MINIO_ROOT_USER=minio\" \\\n-e \"MINIO_ROOT_PASSWORD=password\" \\\n-v /data/minio/data:/data \\\n-v /data/minio/config:/root/.minio minio/minio server /data \\\n--console-address \":9001\"\n```\n\n### Nginx反代Minio\n\nnginx反代后直接使用域名无法访问对象资源(访问资源对象端口为9000)，需要添加Buckets代理\n\n```nginx\nserver {\nlisten       443 ssl;\nserver_name  domain.com;\n\nssl_certificate /etc/nginx/ssl/nginx.crt;\nssl_certificate_key /etc/nginx/ssl/nginx.key;\nssl_session_timeout 5m;\nssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_prefer_server_ciphers on;\nclient_max_body_size 0;\n\n        location / {\n                proxy_pass http://domain.com:9001;\n                proxy_set_header Host $http_host;\n                proxy_http_version      1.1;\n                proxy_set_header Upgrade $http_upgrade;\n                proxy_set_header Connection \"upgrade\";\n\n        }\n\n}\nserver {\n    listen 80;\n    server_name domain.com;\n    rewrite ^(.*)$ https://${server_name}$1 permanent;\n}\n```\n\n## Docker 搭建一个短链服务\n\n```shell\ndocker run -itd --name shorter \\\n--restart always \\\n-e DB_DRIVE=redis \\\n-e REDIS_DRIVE=single \\\n-e REDIS_HOSTS=127.0.0.1:6379 \\\n-e REDIS_PASSWORD=123456 \\\n-e REDIS_DB=1 \\\n-e SHORT_URI=example.com \\\n-e LOG_PATH=/var/log/ \\\n-e LOG_LEVEL=debug \\\n-p 8080:8080 \\\ndudulu/shorter:latest\n```\n\n## Docker拷贝\n\n### 语法\n\n``` bash\ndocker cp 容器进程ID:文件/文件夹路径  主机目的路径\n```\n\n### 例\n\n``` bash\ndocker cp 017149848c20:/home/ /home/user/\n```\n\n## Docker打包与提交\n\n### 容器\n\n#### 语法\n\n``` bash\ndocker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]\n```\n\n#### 例\n\n``` bash\ndocker commit -a \"dark\" -m \"mysql\" a568eff33275 mysql-dark:1.0\n```\n\nOPTIONS说明：-a :提交的镜像作者； -c :使用Dockerfile指令来创建镜像； -m :提交时的说明文字；-p :在commit时，将容器暂停。此时，docker images 就会出现打包好的镜像\n\n``` bash\ndocker export 98ca36> ubuntu.tar\ncat ubuntu.tar | sudo docker import - ubuntu:import\n```\n\n### 镜像\n\n``` bash\ndocker save ubuntu:load>/root/ubuntu.tar\ndocker load<ubuntu.tar\n```\n\n### 批量处理\n\n``` bash\n#打包全部镜像\ndocker save $(docker images | grep -v REPOSITORY | awk 'BEGIN{OFS=\":\";ORS=\" \"}{print $1,$2}') -o harborAll.tar\n#加载所有镜像\ndocker load -i harborAll.tar\n```\n\n## Docker 清理\n\n### 容器清理\n\n```bash\n#删除停止运行的容器\ndocker container prune\n#删除所有容器(包括停止的、正在运行的)\ndocker rm -f $(docker ps -aq)\n```\n\n### 镜像清理\n\n ```bash\n #可以列出所有悬挂状态的镜像\n docker image ls -f dangling=true\n #删除悬挂状态的镜像\n docker image rm $(docker image ls -f dangling=true -q)\n #清除悬挂镜像\n docker image prune\n #删除所有镜像。但正在被容器使用的镜像无法删除。\n docker image rm $(docker image ls -q) \n #清除none版本镜像\n docker rmi $(docker images | grep \"none\" | awk '{print $3}')\n ```\n\n### 数据卷清理\n\n```bash\n#删除不再使用的数据卷\ndocker volume prune\n#删除不再使用的数据卷\ndocker volume rm $(docker volume ls -q) \n```\n\n### 缓存清理\n\n```bash\n#删除 build cache\ndocker builder prune\n```\n\n### 一键清理\n\n```bash\n注意，这两个命令会把你暂时关闭的容器，以及暂时没有用到的 Docker 镜像都删掉了\n#查看 Docker 的磁盘使用情况\ndocker system df\n#清理磁盘，删除关闭的容器、无用的数据卷和网络，以及 none 镜像\ndocker system prune\n#清理得更加彻底，可以将没有容器使用 Docker镜像都删掉\ndocker system prune -a\n```\n\n## Docker迁移\n\n```bash\n#查看默认存储路径\ndocker info |grep  \"Docker Root Dir\"\n#停止docker服务\nsystemctl stop docker\n#新建文件夹\nmkdir /home/docker\n#迁移文件\nrsync -r -avz /var/lib/docker  /home/docker/\n#配置docker服务\nvi /usr/lib/systemd/system/docker.service\n\n[Service]\nExecStart=/usr/bin/dockerd  --graph=/home1/docker/lib/docker\n#重启服务\nsystemctl daemon-reload && systemctl restart docker\n```\n\n## Docker Proxy\n\n参考地址：[Docker Proxy](https://blog.csdn.net/qq_39698985/article/details/123748820)\n\n在执行`docker pull`时，是由守护进程`dockerd`来执行。因此，代理需要配在dockerd的环境中。而这个环境，则是受systemd所管控，因此实际是systemd的配置。\n\n### Image\n\n```bash\n#创建文件\nmkdir -p /etc/systemd/system/docker.service.d\ntouch /etc/systemd/system/docker.service.d/proxy.conf\n#配置proxy.conf\n[Service]\nEnvironment=\"HTTP_PROXY=http://proxy.example.com:8080/\"\nEnvironment=\"HTTPS_PROXY=http://proxy.example.com:8080/\"\nEnvironment=\"NO_PROXY=localhost,127.0.0.1,.example.com\"\n#重启\nsystemctl daemon-reload && systemctl restart docker\n```\n\n### Container\n\n在容器运行阶段，如果需要代理上网，则需要配置 `~/.docker/config.json`。以下配置，只在Docker 17.07及以上版本生效。\n\n```bash\n{\n \"proxies\":\n {\n   \"default\":\n   {\n     \"httpProxy\": \"http://proxy.example.com:8080\",\n     \"httpsProxy\": \"http://proxy.example.com:8080\",\n     \"noProxy\": \"localhost,127.0.0.1,.example.com\"\n   }\n }\n}\n```\n\n这个是用户级的配置，除了 proxies，docker login 等相关信息也会在其中。而且还可以配置信息展示的格式、插件参数等。\n\n此外，容器的网络代理，也可以直接在其运行时通过 -e 注入 http_proxy 等环境变量。这两种方法分别适合不同场景。config.json 非常方便，默认在所有配置修改后启动的容器生效，适合个人开发环境。在CI/CD的自动构建环境、或者实际上线运行的环境中，这种方法就不太合适，用 -e 注入这种显式配置会更好，减轻对构建、部署环境的依赖。当然，在这些环境中，最好用良好的设计避免配置代理上网。\n\n### Docker Build\n\n虽然 `docker build` 的本质，也是启动一个容器，但是环境会略有不同，用户级配置无效。在构建时，需要注入 http_proxy 等参数。\n\n```bash\ndocker build . \\\n    --build-arg \"HTTP_PROXY=http://proxy.example.com:8080/\" \\\n    --build-arg \"HTTPS_PROXY=http://proxy.example.com:8080/\" \\\n    --build-arg \"NO_PROXY=localhost,127.0.0.1,.example.com\" \\\n    -t your/image:tag\n```\n\n注意：无论是 docker run 还是 docker build，默认是网络隔绝的。如果代理使用的是 localhost:3128 这类，则会无效。这类仅限本地的代理，必须加上 --network host 才能正常使用。而一般则需要配置代理的外部IP，而且代理本身要开启 Gateway 模式。\n重启生效\n\n代理配置完成后，reboot 重启当然可以生效，但不重启也行。\n\ndocker build 代理是在执行前设置的，所以修改后，下次执行立即生效。Container 代理的修改也是立即生效的，但是只针对以后启动的 Container，对已经启动的 Container 无效。\n\ndockerd 代理的修改比较特殊，它实际上是改 systemd 的配置，因此需要重载 systemd 并重启 dockerd 才能生效。","source":"_posts/docker安装笔记.md","raw":"---\ntitle: Docker安装笔记\ndate: 2022-09-03 12:58:05\ntags: docker\ncategories: docker\ndescription: docker安装笔记.\n---\n## 安装Docker\n\n### Docker安装\n\n卸载旧版本\n\n```shell\nyum remove docker \\\n                  docker-client \\\n                  docker-client-latest \\\n                  docker-common \\\n                  docker-latest \\\n                  docker-latest-logrotate \\\n                  docker-logrotate \\\n                  docker-engine\n```\n\n### 安装yum-utils软件包\n\n```shell\nyum install -y yum-utils device-mapper-persistent-data lvm2\n```\n\n### 更新yum软件包索引\n\n```\nyum makecache fast\n```\n\n### 安装Docker Engine，CLI和Containerd软件包\n\n```\nyum install -y docker-ce docker-ce-cli containerd.io\n```\n\n### 启动docker\n\n```\nsystemctl start docker\n```\n\n### 设置docker服务开机自启\n\n```\nsystemctl enable docker\n```\n\n### 使用镜像加速器\n\n#### 阿里云\n\n> 创建文件夹\n\n```\nsudo mkdir -p /etc/docker\n```\n\n> 写入文件\n\n```\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://cffh6cda.mirror.aliyuncs.com\"]\n}\nEOF\n```\n\n> 重启Docker\n\n```bash\nsystemctl daemon-reload && systemctl restart docker\n```\n\n### 一键安装脚本\n\n```bash\ncurl -fsSL https://get.docker.com | sudo bash -s docker && sudo systemctl enable --now docker\n```\n\n## 卸载Dcoker\n\n### 卸载Docker\n\n> 卸载Docker Engine，CLI和Containerd软件包\n\n```\nyum remove docker-ce docker-ce-cli containerd.io\n```\n\n> 删除容器\n\n```bash\nrm -rf /var/lib/docker\nrm -rf /var/lib/containerd\n```\n\n## Docker配置文件\n\n参考地址：[传送门](https://blog.csdn.net/u010918487/article/details/106475785)\n\n### daemon.json\n\n完整的配置模板：\n\n```json\n{\n  \"authorization-plugins\": [],\n  \"data-root\": \"\",\n  \"dns\": [],\n  \"dns-opts\": [],\n  \"dns-search\": [],\n  \"exec-opts\": [],\n  \"exec-root\": \"\",\n  \"experimental\": false,\n  \"features\": {},\n  \"storage-driver\": \"\",\n  \"storage-opts\": [],\n  \"labels\": [],\n  \"live-restore\": true,\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"10m\",\n    \"max-file\":\"5\",\n    \"labels\": \"somelabel\",\n    \"env\": \"os,customer\"\n  },\n  \"mtu\": 0,\n  \"pidfile\": \"\",\n  \"cluster-store\": \"\",\n  \"cluster-store-opts\": {},\n  \"cluster-advertise\": \"\",\n  \"max-concurrent-downloads\": 3,\n  \"max-concurrent-uploads\": 5,\n  \"default-shm-size\": \"64M\",\n  \"shutdown-timeout\": 15,\n  \"debug\": true,\n  \"hosts\": [],\n  \"log-level\": \"\",\n  \"tls\": true,\n  \"tlsverify\": true,\n  \"tlscacert\": \"\",\n  \"tlscert\": \"\",\n  \"tlskey\": \"\",\n  \"swarm-default-advertise-addr\": \"\",\n  \"api-cors-header\": \"\",\n  \"selinux-enabled\": false,\n  \"userns-remap\": \"\",\n  \"group\": \"\",\n  \"cgroup-parent\": \"\",\n  \"default-ulimits\": {\n    \"nofile\": {\n      \"Name\": \"nofile\",\n      \"Hard\": 64000,\n      \"Soft\": 64000\n    }\n  },\n  \"init\": false,\n  \"init-path\": \"/usr/libexec/docker-init\",\n  \"ipv6\": false,\n  \"iptables\": false,\n  \"ip-forward\": false,\n  \"ip-masq\": false,\n  \"userland-proxy\": false,\n  \"userland-proxy-path\": \"/usr/libexec/docker-proxy\",\n  \"ip\": \"0.0.0.0\",\n  \"bridge\": \"\",\n  \"bip\": \"\",\n  \"fixed-cidr\": \"\",\n  \"fixed-cidr-v6\": \"\",\n  \"default-gateway\": \"\",\n  \"default-gateway-v6\": \"\",\n  \"icc\": false,\n  \"raw-logs\": false,\n  \"allow-nondistributable-artifacts\": [],\n  \"registry-mirrors\": [],\n  \"seccomp-profile\": \"\",\n  \"insecure-registries\": [],\n  \"no-new-privileges\": false,\n  \"default-runtime\": \"runc\",\n  \"oom-score-adjust\": -500,\n  \"node-generic-resources\": [\"NVIDIA-GPU=UUID1\", \"NVIDIA-GPU=UUID2\"],\n  \"runtimes\": {\n    \"cc-runtime\": {\n      \"path\": \"/usr/bin/cc-runtime\"\n    },\n    \"custom\": {\n      \"path\": \"/usr/local/bin/my-runc-replacement\",\n      \"runtimeArgs\": [\n        \"--debug\"\n      ]\n    }\n  },\n  \"default-address-pools\":[\n    {\"base\":\"172.80.0.0/16\",\"size\":24},\n    {\"base\":\"172.90.0.0/16\",\"size\":24}\n  ]\n}\n```\n\n\n\n### 热更新\n\n```bash\nkill -SIGHUP $(pidof dockerd)\n```\n\n\n\n## Docker开启Api\n\n### 修改服务文件\n\n```bash\nvim /usr/lib/systemd/system/docker.service\n```\n\n在 ExecStart=/usr/bin/dockerd 后面直接添加 -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock （注意端口8088自己随便定义，别跟当前的冲突即可）\n\n### 修改配置daemon\n\n```bash\nvim /etc/docker/daemon.json\n添加\n\"insecure-registries\":[\"填你的harbor服务器地址\"]\n```\n\n### 重启Docker\n\n```bash\nsystemctl daemon-reload && systemctl restart docker\n```\n\n### 查看状态\n\n```bash\ndocker -H [senhao.top]:2375 info\n```\n\n### 查看端口监听\n\n```bash\nnetstat -anp|grep 2375\n```\n\n注意：本人测试时Docker服务会自动修改端口为2275，暂不知原因，感兴趣的大佬可以去排查下原因\n\n## Docker日志\n\n参考文章：[https://www.cnblogs.com/spec-dog/p/12624470.html](https://www.cnblogs.com/spec-dog/p/12624470.html)\n\n### Docker日志\n\n在启动容器的时候添加参数\n\n```shell\n--log-driver local  --log-opt max-size=10m  --log-opt max-file=3\n```\n\n例：\n\n```shell\ndocker run -d --name nginx -p 80:80 --log-driver local  --log-opt max-size=10m  --log-opt max-file=3  --restart=always nginx\n```\n\n此时你的容器日志会被以文件形式存于目录\n\n`/var/lib/docker/containers/{container_id}/local-logs/container.log`\n\n### 查看\n\n进入想查看的容器文件夹\n\n```shell\n# tail -f container.log \nstdout倚ªº㯦L1:C 26 Jan 202s2 05:32:12.112 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo` \nstdout訜ªº㯦m1:C 26 Jan 2022 05:32:12.112 # Redis version=6.2.6, bits=64, commit=00000000, modified=0, pid=1, just started·\n```\n\n## Docker命令\n\n### 查看容器\n\n``` bash\ndocker ps -as\n```\n\n### 启动容器\n\n``` bash\ndocker start 容器id\n```\n\n### 删除所有容器\n\n``` bash\ndocker rm $(docker ps -aq)\n```\n\n### 删除所有镜像\n\n``` bash\ndocker rmi -f $(docker images -qa)\n```\n\n### 查看容器信息\n\n``` bash\ndocker inspect [容器名称]\n```\n\n### 查看容器日志\n\n``` bash\ndocker logs --tail=\"10\" <CONTAINER ID>\n```\n\n### 设置Docker容器开机自启\n\n``` bash\ndocker update –restart=always <CONTAINER ID>\n```\n\n### Docker容器重启\n\n``` bash\ndocker restart [容器ID或容器名]\n```\n\n### 重启Docker\n\n``` bash\nsystemctl restart docker\n```\n\n### 关闭容器的开机自启\n\n``` bash\ndocker update --restart=no <CONTAINER ID>\n```\n\n### 查看网络模式\n\n``` bash\ndocker network ls\n```\n\n### 查看容器占用资源\n\n```bash\n# 实时查看状态\ndocker stats\n# 可以通过--no-stream来查看当前状态[推荐]\ndocker stats --no-stream\n```\n\n### 容器启动不退出\n\n```bash\ndocker run -d nginx tail -f /dev/null\n#或者\ndocker run -d nginx /bin/bash ping 127.0.0.1\n#或者\ndocker run -d nginx /bin/bash -c \"while true;do echo hello docker;sleep 1;done\"\n\n#使用交互式启动，使主进程不退出\ndocker run -i [CONTAINER_NAME or CONTAINER_ID]\n```\n\n## DockerFile\n\n### 构建后端项目\n\n> dockerfile\n\n``` bash\n#base image\nFROM java:8\n#home dir\nENV HOME /file-server\n#jar name\nENV SERVER base-web-1.0-SNAPSHOT.jar\n#server port\nENV PORT 8080\n#console code\nENV LANG C.UTF-8\n#time zone\nENV TZ=Asia/Shanghai\n#create dir\nRUN mkdir ${HOME}\n#time configuration\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n#copy .jar file\nADD ${SERVER} ${HOME}/${SERVER}\n#work path\nWORKDIR ${HOME}\n#expose server port\nEXPOSE ${PORT}\n#server run cmmand\nENTRYPOINT [\"java\",\"-jar\",\"${SERVER}\"]\n```\n\n> install.sh\n\n``` bash\n#!/bin/bash\ndocker stop senhao_file\ndocker rm senhao_file\ndocker rmi fileserver:v1\ndocker build -t fileserver:v1 .\ndocker run -d -p 9000:9000 -v /home/docker/file-server/:/file-server/file/ --name senhao_file fileserver:v1\n```\n\n> log.sh\n\n``` bash\n#!/bin/bash\ndocker logs -f -t senhao_file\n```\n\n### Nginx SSL\n\n> dockerfile\n\n``` dockerfile\nFROM nginx:stable\n\n# copy the custom website into the image\nCOPY index.html /usr/share/nginx/html/\n\n# copy the SSL configuration file into the image\nCOPY ssl.conf /etc/nginx/conf.d/ssl.conf\n\n# download the SSL key and certificate into the image\nCOPY 2_senhao.top.key /etc/nginx/ssl/nginx.key\nCOPY 1_senhao.top_bundle.crt /etc/nginx/ssl/nginx.crt\n\n# expose the https port\nEXPOSE 443\n```\n\n> ssl.conf\n\n``` bash\ncat << '__EOF' > ssl.conf\nserver {\nlisten       443 ssl;\nserver_name  localhost;\n\nssl_certificate /etc/nginx/ssl/nginx.crt;\nssl_certificate_key /etc/nginx/ssl/nginx.key;\n\nlocation / {\nroot   /usr/share/nginx/html;\nindex  index.html index.htm;\n}\n}\n__EOF\n```\n\n> install.sh\n\n``` bash\n#!/bin/bash\ndocker stop senhao_nginx\ndocker rm senhao_nginx\ndocker rmi nginx:v1\ndocker build -t nginx:v1 .\ndocker run --name senhao_nginx -d -p 443:443 -v /home/docker/nginx/log:/var/log/nginx -v /home/docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v /home/docker/nginx/conf.d:/etc/nginx/conf.d -v /home/docker/nginx/html:/usr/share/nginx/html nginx:v1\n```\n\n> log.sh\n\n``` bash\n#!/bin/bash\ndocker logs -f -t senhao_nginx\n```\n\n## Docker逆向\n\n```bash\n#构建\ndocker build --rm -t pegleg/whaler .\n#配置别名\nalias whaler=\"docker run -t --rm -v /var/run/docker.sock:/var/run/docker.sock:ro pegleg/whaler\"\n#使用\nwhaler -sV=1.36 nginx:latest\n```\n\n## Docker安装MySQL\n\n### Docker 中下载 MySQL\n\n```bash\ndocker pull mysql:latest\n```\n\n### 数据卷挂载启动\n\n```bash\ndocker run -d -p 3306:3306 \\\n-v /data/docker/mysql/my.cnf:/etc/mysql/conf.d/mysqld.cnf \\\n-v /data/docker/mysql/data:/var/lib/mysql \\\n-e MYSQL_ROOT_PASSWORD=root \\\n--restart always \\\n--name mysql \\\nmysql:latest\n```\n\n### 普通启动\n\n```bash\ndocker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql\n```\n\n### 进入容器\n\n```bash\ndocker exec -it mysql bash\n```\n\n## Docker安装PostgreSQL\n\n### 下载镜像\n\n```bash\ndocker pull postgres:11\n```\n\n### 启动\n\n```bash\ndocker run --name postgres \\\n-v /data/docker/postgres/data:/var/lib/postgresql/data \\\n-e POSTGRES_PASSWORD=postgres \\\n--restart always \\\n-p 5432:5432 \\\n-d postgres:11\n```\n\n## Docker安装Mongo\n\n### 下载镜像\n\n```bash\ndocker pull mongo\n```\n\n### 启动镜像(无安全验证)\n\n```bash\ndocker run -d --restart=always \\\n-p 27017:27017 \\\n--restart always \\\n--name mongo \\\n-v /home/docker/mongo/data/db:/data/db \\\nmongo\n```\n\n### 启动镜像(安全验证)\n\n```bash\ndocker run -d --restart=always \\\n-p 27017:27017 \\\n-v /data/docker/mongo/data/db:/data/db \\\n--name mongo \\\n--restart always \\\n-d mongo --auth\n```\n\n### 创建账户\n\n> 进入容器\n\n```bash\ndocker exec -it mongo mongo admin\n```\n\n> 创建管理员账户\n\n```bash\ndb.createUser({ user:'admin',pwd:'123456',roles:[ { role:'userAdminAnyDatabase', db: 'admin'},\"readWriteAnyDatabase\"]});\n```\n\n### 安装mongo-express\n\n```bash\ndocker pull mongoexpress\n```\n\n### 启动Mongo-express\n\n```bash\ndocker run --link dark_mongo:mongo -p 8081:8081 mongo-express\n```\n\n## Docker安装Redis\n\n### 下载镜像\n\n```bash\ndocker pull redis:latest\n```\n\n### 数据卷挂载启动\n\n### 创建文件\n\n```bash\nmkdir -p /home/docker/redis/{data,conf}\n```\n\n> 写入文件\n\n```bash\ntee /home/docker/redis/conf/redis.conf <<-'EOF'\n#允许远程连接\nbind *\n#安全模式\nprotected-mode no\n#持久化\nappendonly yes\n#密码 \nrequirepass 123456\nEOF\n```\n\n### 启动\n\n```bash\ndocker run --name redis \\\n-p 6379:6379 \\\n-v /data/docker/redis/data:/data \\\n-v /data/docker/redis/conf/redis.conf:/etc/redis/redis.conf \\\n--restart always \\\n-d redis redis-server /etc/redis/redis.conf\n```\n\n## docker安装Nginx\n\n### 下载镜像\n\n```bash\n#拉取镜像\ndocker pull nginx:latest\n#启动\ndocker run --name senhao_hexo -d -p 443:443 -p 80:80 senhao_hexo:latest\n```\n\n### Dockerfile\n\n```dockerfile\nFROM nginx:stable\n\n# copy the custom website into the image\n#COPY index.html /usr/share/nginx/html/\nCOPY dist /usr/share/nginx/html/\n\n# copy the SSL configuration file into the image\nCOPY nginx.conf /etc/nginx/conf.d/nginx.conf\n\n# download the SSL key and certificate into the image\nCOPY example.com.key /etc/nginx/ssl/nginx.key\nCOPY example.com_bundle.crt /etc/nginx/ssl/nginx.crt\n\n# expose the https port\nEXPOSE 443\n```\n\n#### install.sh\n\n```sh\ndocker stop nginx\ndocker rm nginx\ndocker rmi nginx:latest\ndocker build -t nginx:latest .\ndocker run --name nginx -d -p 443:443 -p 80:80 nginx:latest\n```\n\n#### ssl.conf\n\n```nginx\nserver {\nlisten       443 ssl;\nserver_name  example.com;\n\nssl_certificate /etc/nginx/ssl/nginx.crt;\nssl_certificate_key /etc/nginx/ssl/nginx.key;\nssl_session_timeout 5m;\nssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_prefer_server_ciphers on;\n\n#       location / {\n#               root   /usr/share/nginx/html;\n#               index  index.html index.htm;\n#       }\n        location / {\n                root /usr/share/nginx/html/hexo;\n                index  index.html index.htm;\n        }\n}\n\n#http转https\nserver {\n    listen 80;\n    server_name example.com;\n    rewrite ^(.*)$ https://${server_name}$1 permanent;\n}\n\nserver {\n    listen 80;\n    server_name www.example.com;\n    rewrite ^(.*)$ https://${server_name}$1 permanent;\n}\n```\n\n## Docker安装Nacos\n\n### 下载镜像\n\n```bash\ndocker pull nacos/nacos-server\n```\n\n### 创建文件\n\n```bash\nmkdir -p /data/docker/nacos/{init.d,logs}\n```\n\n> 配置文件/home/docker/nacos/init.d/custom.properties内容如下\n\n```bash\ntee /data/docker/nacos/init.d/custom.properties <<-'EOF'\nmanagement.endpoints.web.exposure.include=*\nEOF\n```\n\n### 启动\n\n```bash\ndocker run -d -p 8848:8848 -e MODE=standalone \\\n-v /data/docker/nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties \\\n-v /data/docker/nacos/logs:/home/nacos/logs \\\n--restart always \\\n--name nacos nacos/nacos-server\n```\n\n## Docker安装GitLab\n\n### 下载镜像\n\n```bash\ndocker pull gitlab/gitlab-ce\n```\n\n### 启动\n\n```bash\ndocker run -d  -p 443:443 -p 80:80 -p 222:22 \\\n--name gitlab --restart always \\\n-v /home/docker/gitlab/config:/etc/gitlab \\\n-v /home/docker/gitlab/logs:/var/log/gitlab \\\n-v /home/docker/gitlab/data:/var/opt/gitlab \\\ngitlab/gitlab-ce\n```\n\n### 配置\n\n```bash\n# gitlab.rb文件内容默认全是注释\nvim /home/gitlab/config/gitlab.rb\n# 配置http协议所使用的访问地址,不加端口号默认为80\nexternal_url 'http://[服务器IP]'\n# 配置ssh协议所使用的访问地址和端口\ngitlab_rails['gitlab_ssh_host'] = '[服务器IP]'\ngitlab_rails['gitlab_shell_ssh_port'] = 222 # 此端口是run时22端口映射的222端口\n#配置时区\ngitlab_rails['time_zone'] = 'Asia/Shanghai'\n```\n\n### 重启gitlab容器\n\n```bash\ndocker restart senhao_gitlab\n```\n\n### 重置密码\n\n```bash\n#进入容器\ndocker exec -it senhao_gitlab /bin/bash\n#打开控制台\ngitlab-rails console -e production\n#id为1的用户\nuser=User.where(id:1).first\n#输入密码\nuser.password='xusenhao'\n#确认密码\nuser.password_confirmation='xusenhao'\n#保存\nuser.save!\n```\n\n### 配置邮件服务\n\n```bash\n### Email Settings\ngitlab_rails['gitlab_email_enabled'] = true\ngitlab_rails['gitlab_email_from'] = '你的QQ邮箱'\ngitlab_rails['gitlab_email_display_name'] = '陈洋'\ngitlab_rails['gitlab_email_reply_to'] = '你的QQ邮箱'\ngitlab_rails['gitlab_email_subject_suffix'] = ''\n\n\n### GitLab email server settings\n###! Docs: https://docs.gitlab.com/omnibus/settings/smtp.html\n###! **Use smtp instead of sendmail/postfix.**\n\ngitlab_rails['smtp_enable'] = true\ngitlab_rails['smtp_address'] = \"smtp.qq.com\"\ngitlab_rails['smtp_port'] = 465 \ngitlab_rails['smtp_user_name'] = \"你的QQ邮箱\"\ngitlab_rails['smtp_password'] = \"授权码，不是邮箱密码\" \ngitlab_rails['smtp_domain'] = \"smtp.qq.com\"\ngitlab_rails['smtp_authentication'] = \"login\"\ngitlab_rails['smtp_enable_starttls_auto'] = true\ngitlab_rails['smtp_tls'] = true\n\n#重启服务\ndocker restart senhao_gitlab\n#测试邮件发送\nroot@192:/# gitlab-rails console\nirb(main):002:0> Notify.test_email('961363629@qq.com', 'Message Subject', 'Message Body').deliver_now\n\n#注意：\n#测试邮件时报错501\nNet::SMTPSyntaxError: 501 mail from address must be same as authorization user\n\n原因：配置文件gitlab.rb中### Email Settings没有设置邮箱地址，意思就是发送邮件的地址和SMTP认证的账号必须一致\n解决办法：配置好### Email Settings即可\n\n#测试邮件时报错SSLError\n原因：此类报错通常是SMTP服务器没有使用SSL，但是配置却开启了\n解决办法：注释掉以下配置\n# gitlab_rails['smtp_enable_starttls_auto'] = true\n# gitlab_rails['smtp_tls'] = true\n```\n\n## Docker安装Harbor\n\n> 依赖docker-compose\n\n### 下载\n\n```bash\nhttps://github.com/goharbor/harbor/releases/download/v2.4.1/harbor-online-installer-v2.4.1.tgz\n```\n\n### 解压\n\n```bash\ntar -zxvf harbor-online-installer-v2.3.1.tgz -C /usr/local/\n```\n\n### 修改文件\n\n```bash\ncp harbor.yml.tmpl harbor.yml\nvim harbor.yml\n```\n\n修改hostname参数为本机IP或域名\n\n### 安装\n\n```bash\n./install.sh\n```\n\n### 启动和重启\n\n```bash\n# 停止Harbor\ndocker-compose down -v\n\n# 重启Harbor\ndocker-compose up -d\n```\n\n### Docker配置\n\n```bash\n#编辑文件\nvim /etc/docker/daemon.json\n#添加\n\"insecure-registries\": [\"[ip]:[port]\"]\n#重启\nsystemctl daemon-reload\nsystemctl restart docker\n```\n\n## Docker安装Jenkins\n\n### 下载镜像\n\n```bash\ndocker pull jenkins/jenkins\n```\n\n### 创建文件夹\n\n```bash\nmkdir -p /home/docker/jenkins_mount\n```\n\n#### 授权\n\n```bash\nchmod 777 /home/docker/jenkins_mount\n```\n\n### 启动\n\n```bash\ndocker run -d -p 10240:8080 -p 10241:50000 \\\n-v /data/docker/jenkins_mount:/var/jenkins_home \\\n-v /etc/localtime:/etc/localtime \\\n--restart always \\\n--name jenkins jenkins/jenkins\n```\n\n### 访问\n\n访问ip:10240 可以修改映射端口\n\n## Docker安装RabbitMQ\n\n### 启动\n\n```bash\ndocker run -d --name rabbitmq \\\n-p 5672:5672 -p 15672:15672  \\\n--restart always \\\n--hostname myRabbit \\\n-e RABBITMQ_DEFAULT_VHOST=my_vhost  \\\n-e RABBITMQ_DEFAULT_USER=admin \\\n-e RABBITMQ_DEFAULT_PASS=admin \\\nrabbitmq:management\n```\n\n## Docker安装Kafka\n\n```bash\ndocker run -d --restart=always --name kafka \\\n-p 9092:9092 \\\n-e KAFKA_BROKER_ID=0 \\\n-e KAFKA_ZOOKEEPER_CONNECT=10.1.52.149:2181 \\\n-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://10.1.52.149:9092 \\\n-e KAFKA_LISTENERS=PLAINTEXT://:9092 \\\nwurstmeister/kafka\n```\n\n### Kafka测试\n\n#### 单机\n\n使用docker启动Kafka.\n\n```bash\n#进入到/opt/kafka/bin目录\ncd /opt/kafka/bin\n#1. 创建topic\n./kafka-topics.sh --create --zookeeper $KAFKA_ZOOKEEPER_CONNECT --replication-factor 1 --partitions 1 --topic test-topic\n#2. 查看 topic\n./kafka-topics.sh --list --zookeeper $KAFKA_ZOOKEEPER_CONNECT\n#3. 运行一个生产者\n./kafka-console-producer.sh --broker-list localhost:9092 --topic test-topic\n#4. 运行一个消费者\n./kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test-topic --from-beginning\n```\n\n## Docker安装rancher/server\n\n### 启动\n\n```bash\ndocker run -di --name=rancher -p 9090:8080 rancher/server\n```\n\n## Docker安装zookeeper\n\n### 下载镜像\n\n``` bash\ndocker pull zookeeper\n```\n\n### 单机部署\n\n``` bash\ndocker run -d -p 2181:2181 \\\n-v /data/docker/zoo/data:/data \\\n-v /data/docker/zoo/datalog:/datalog \\\n-v /data/docker/zoo/logs:/logs \\\n--name zookeeper \\\n--restart always zookeeper\n```\n\n## Docker安装Spark\n\n> 依赖docker-compose\n\n### pull image\n\n``` bash\ndocker pull singularities/spark\n```\n\n### 创建docker-compose\n\n``` yaml\nversion: \"2\"\n \nservices:\n  master:\n    image: singularities/spark\n    command: start-spark master\n    hostname: master\n    ports:\n      - \"6066:6066\"\n      - \"7070:7070\"\n      - \"8080:8080\"\n      - \"50070:50070\"\n  worker:\n    image: singularities/spark\n    command: start-spark worker master\n    environment:\n      SPARK_WORKER_CORES: 1\n      SPARK_WORKER_MEMORY: 2g\n    links:\n      - master\n```\n\n### 启动\n\n``` bash\ndocker-compose up -d\n```\n\n### 查看运行状态\n\n``` bash\ndocker-compose ps\n```\n\n### 停止\n\n``` bash\ndocker-compose stop\n```\n\n### 删除\n\n``` bash\ndocker-compose rm\n```\n\n## Docker部署Minio\n\n```bash\ndocker run \\\n--name minio \\\n-d --restart=always \\\n-p 9000:9000 -p 9001:9001 \\\n-e \"MINIO_ROOT_USER=minio\" \\\n-e \"MINIO_ROOT_PASSWORD=password\" \\\n-v /data/minio/data:/data \\\n-v /data/minio/config:/root/.minio minio/minio server /data \\\n--console-address \":9001\"\n```\n\n### Nginx反代Minio\n\nnginx反代后直接使用域名无法访问对象资源(访问资源对象端口为9000)，需要添加Buckets代理\n\n```nginx\nserver {\nlisten       443 ssl;\nserver_name  domain.com;\n\nssl_certificate /etc/nginx/ssl/nginx.crt;\nssl_certificate_key /etc/nginx/ssl/nginx.key;\nssl_session_timeout 5m;\nssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_prefer_server_ciphers on;\nclient_max_body_size 0;\n\n        location / {\n                proxy_pass http://domain.com:9001;\n                proxy_set_header Host $http_host;\n                proxy_http_version      1.1;\n                proxy_set_header Upgrade $http_upgrade;\n                proxy_set_header Connection \"upgrade\";\n\n        }\n\n}\nserver {\n    listen 80;\n    server_name domain.com;\n    rewrite ^(.*)$ https://${server_name}$1 permanent;\n}\n```\n\n## Docker 搭建一个短链服务\n\n```shell\ndocker run -itd --name shorter \\\n--restart always \\\n-e DB_DRIVE=redis \\\n-e REDIS_DRIVE=single \\\n-e REDIS_HOSTS=127.0.0.1:6379 \\\n-e REDIS_PASSWORD=123456 \\\n-e REDIS_DB=1 \\\n-e SHORT_URI=example.com \\\n-e LOG_PATH=/var/log/ \\\n-e LOG_LEVEL=debug \\\n-p 8080:8080 \\\ndudulu/shorter:latest\n```\n\n## Docker拷贝\n\n### 语法\n\n``` bash\ndocker cp 容器进程ID:文件/文件夹路径  主机目的路径\n```\n\n### 例\n\n``` bash\ndocker cp 017149848c20:/home/ /home/user/\n```\n\n## Docker打包与提交\n\n### 容器\n\n#### 语法\n\n``` bash\ndocker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]\n```\n\n#### 例\n\n``` bash\ndocker commit -a \"dark\" -m \"mysql\" a568eff33275 mysql-dark:1.0\n```\n\nOPTIONS说明：-a :提交的镜像作者； -c :使用Dockerfile指令来创建镜像； -m :提交时的说明文字；-p :在commit时，将容器暂停。此时，docker images 就会出现打包好的镜像\n\n``` bash\ndocker export 98ca36> ubuntu.tar\ncat ubuntu.tar | sudo docker import - ubuntu:import\n```\n\n### 镜像\n\n``` bash\ndocker save ubuntu:load>/root/ubuntu.tar\ndocker load<ubuntu.tar\n```\n\n### 批量处理\n\n``` bash\n#打包全部镜像\ndocker save $(docker images | grep -v REPOSITORY | awk 'BEGIN{OFS=\":\";ORS=\" \"}{print $1,$2}') -o harborAll.tar\n#加载所有镜像\ndocker load -i harborAll.tar\n```\n\n## Docker 清理\n\n### 容器清理\n\n```bash\n#删除停止运行的容器\ndocker container prune\n#删除所有容器(包括停止的、正在运行的)\ndocker rm -f $(docker ps -aq)\n```\n\n### 镜像清理\n\n ```bash\n #可以列出所有悬挂状态的镜像\n docker image ls -f dangling=true\n #删除悬挂状态的镜像\n docker image rm $(docker image ls -f dangling=true -q)\n #清除悬挂镜像\n docker image prune\n #删除所有镜像。但正在被容器使用的镜像无法删除。\n docker image rm $(docker image ls -q) \n #清除none版本镜像\n docker rmi $(docker images | grep \"none\" | awk '{print $3}')\n ```\n\n### 数据卷清理\n\n```bash\n#删除不再使用的数据卷\ndocker volume prune\n#删除不再使用的数据卷\ndocker volume rm $(docker volume ls -q) \n```\n\n### 缓存清理\n\n```bash\n#删除 build cache\ndocker builder prune\n```\n\n### 一键清理\n\n```bash\n注意，这两个命令会把你暂时关闭的容器，以及暂时没有用到的 Docker 镜像都删掉了\n#查看 Docker 的磁盘使用情况\ndocker system df\n#清理磁盘，删除关闭的容器、无用的数据卷和网络，以及 none 镜像\ndocker system prune\n#清理得更加彻底，可以将没有容器使用 Docker镜像都删掉\ndocker system prune -a\n```\n\n## Docker迁移\n\n```bash\n#查看默认存储路径\ndocker info |grep  \"Docker Root Dir\"\n#停止docker服务\nsystemctl stop docker\n#新建文件夹\nmkdir /home/docker\n#迁移文件\nrsync -r -avz /var/lib/docker  /home/docker/\n#配置docker服务\nvi /usr/lib/systemd/system/docker.service\n\n[Service]\nExecStart=/usr/bin/dockerd  --graph=/home1/docker/lib/docker\n#重启服务\nsystemctl daemon-reload && systemctl restart docker\n```\n\n## Docker Proxy\n\n参考地址：[Docker Proxy](https://blog.csdn.net/qq_39698985/article/details/123748820)\n\n在执行`docker pull`时，是由守护进程`dockerd`来执行。因此，代理需要配在dockerd的环境中。而这个环境，则是受systemd所管控，因此实际是systemd的配置。\n\n### Image\n\n```bash\n#创建文件\nmkdir -p /etc/systemd/system/docker.service.d\ntouch /etc/systemd/system/docker.service.d/proxy.conf\n#配置proxy.conf\n[Service]\nEnvironment=\"HTTP_PROXY=http://proxy.example.com:8080/\"\nEnvironment=\"HTTPS_PROXY=http://proxy.example.com:8080/\"\nEnvironment=\"NO_PROXY=localhost,127.0.0.1,.example.com\"\n#重启\nsystemctl daemon-reload && systemctl restart docker\n```\n\n### Container\n\n在容器运行阶段，如果需要代理上网，则需要配置 `~/.docker/config.json`。以下配置，只在Docker 17.07及以上版本生效。\n\n```bash\n{\n \"proxies\":\n {\n   \"default\":\n   {\n     \"httpProxy\": \"http://proxy.example.com:8080\",\n     \"httpsProxy\": \"http://proxy.example.com:8080\",\n     \"noProxy\": \"localhost,127.0.0.1,.example.com\"\n   }\n }\n}\n```\n\n这个是用户级的配置，除了 proxies，docker login 等相关信息也会在其中。而且还可以配置信息展示的格式、插件参数等。\n\n此外，容器的网络代理，也可以直接在其运行时通过 -e 注入 http_proxy 等环境变量。这两种方法分别适合不同场景。config.json 非常方便，默认在所有配置修改后启动的容器生效，适合个人开发环境。在CI/CD的自动构建环境、或者实际上线运行的环境中，这种方法就不太合适，用 -e 注入这种显式配置会更好，减轻对构建、部署环境的依赖。当然，在这些环境中，最好用良好的设计避免配置代理上网。\n\n### Docker Build\n\n虽然 `docker build` 的本质，也是启动一个容器，但是环境会略有不同，用户级配置无效。在构建时，需要注入 http_proxy 等参数。\n\n```bash\ndocker build . \\\n    --build-arg \"HTTP_PROXY=http://proxy.example.com:8080/\" \\\n    --build-arg \"HTTPS_PROXY=http://proxy.example.com:8080/\" \\\n    --build-arg \"NO_PROXY=localhost,127.0.0.1,.example.com\" \\\n    -t your/image:tag\n```\n\n注意：无论是 docker run 还是 docker build，默认是网络隔绝的。如果代理使用的是 localhost:3128 这类，则会无效。这类仅限本地的代理，必须加上 --network host 才能正常使用。而一般则需要配置代理的外部IP，而且代理本身要开启 Gateway 模式。\n重启生效\n\n代理配置完成后，reboot 重启当然可以生效，但不重启也行。\n\ndocker build 代理是在执行前设置的，所以修改后，下次执行立即生效。Container 代理的修改也是立即生效的，但是只针对以后启动的 Container，对已经启动的 Container 无效。\n\ndockerd 代理的修改比较特殊，它实际上是改 systemd 的配置，因此需要重载 systemd 并重启 dockerd 才能生效。","slug":"docker安装笔记","published":1,"updated":"2023-01-15T05:59:24.778Z","_id":"clcwycosi000eh0u22xi9abtt","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"安装Docker\"><a href=\"#安装Docker\" class=\"headerlink\" title=\"安装Docker\"></a>安装Docker</h2><h3 id=\"Docker安装\"><a href=\"#Docker安装\" class=\"headerlink\" title=\"Docker安装\"></a>Docker安装</h3><p>卸载旧版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs shell\">yum remove docker \\<br>                  docker-client \\<br>                  docker-client-latest \\<br>                  docker-common \\<br>                  docker-latest \\<br>                  docker-latest-logrotate \\<br>                  docker-logrotate \\<br>                  docker-engine<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装yum-utils软件包\"><a href=\"#安装yum-utils软件包\" class=\"headerlink\" title=\"安装yum-utils软件包\"></a>安装yum-utils软件包</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">yum install -y yum-utils device-mapper-persistent-data lvm2<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"更新yum软件包索引\"><a href=\"#更新yum软件包索引\" class=\"headerlink\" title=\"更新yum软件包索引\"></a>更新yum软件包索引</h3><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">yum makecache fast</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装Docker-Engine，CLI和Containerd软件包\"><a href=\"#安装Docker-Engine，CLI和Containerd软件包\" class=\"headerlink\" title=\"安装Docker Engine，CLI和Containerd软件包\"></a>安装Docker Engine，CLI和Containerd软件包</h3><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">yum install -<span class=\"hljs-keyword\">y</span> docker-<span class=\"hljs-keyword\">ce</span> docker-<span class=\"hljs-keyword\">ce</span>-cli containerd.io<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动docker\"><a href=\"#启动docker\" class=\"headerlink\" title=\"启动docker\"></a>启动docker</h3><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">systemctl <span class=\"hljs-literal\">start</span> docker<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"设置docker服务开机自启\"><a href=\"#设置docker服务开机自启\" class=\"headerlink\" title=\"设置docker服务开机自启\"></a>设置docker服务开机自启</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">systemctl <span class=\"hljs-built_in\">enable</span> docker<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"使用镜像加速器\"><a href=\"#使用镜像加速器\" class=\"headerlink\" title=\"使用镜像加速器\"></a>使用镜像加速器</h3><h4 id=\"阿里云\"><a href=\"#阿里云\" class=\"headerlink\" title=\"阿里云\"></a>阿里云</h4><blockquote>\n<p>创建文件夹</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">sudo mkdir -p <span class=\"hljs-regexp\">/etc/</span>docker<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>写入文件</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">sudo tee <span class=\"hljs-regexp\">/etc/</span>docker/daemon.json &lt;&lt;-<span class=\"hljs-string\">&#x27;EOF&#x27;</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;registry-mirrors&quot;</span>: [<span class=\"hljs-string\">&quot;https://cffh6cda.mirror.aliyuncs.com&quot;</span>]<br>&#125;<br>EOF<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>重启Docker</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">systemctl daemon-reload &amp;&amp; systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"一键安装脚本\"><a href=\"#一键安装脚本\" class=\"headerlink\" title=\"一键安装脚本\"></a>一键安装脚本</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">curl -fsSL https://get.docker.com | sudo bash -s docker &amp;&amp; sudo systemctl <span class=\"hljs-built_in\">enable</span> --now docker<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"卸载Dcoker\"><a href=\"#卸载Dcoker\" class=\"headerlink\" title=\"卸载Dcoker\"></a>卸载Dcoker</h2><h3 id=\"卸载Docker\"><a href=\"#卸载Docker\" class=\"headerlink\" title=\"卸载Docker\"></a>卸载Docker</h3><blockquote>\n<p>卸载Docker Engine，CLI和Containerd软件包</p>\n</blockquote>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">yum <span class=\"hljs-built_in\">remove</span> docker-<span class=\"hljs-keyword\">ce</span> docker-<span class=\"hljs-keyword\">ce</span>-cli containerd.io<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>删除容器</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">rm</span> -rf /var/lib/docker<br><span class=\"hljs-built_in\">rm</span> -rf /var/lib/containerd<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker配置文件\"><a href=\"#Docker配置文件\" class=\"headerlink\" title=\"Docker配置文件\"></a>Docker配置文件</h2><p>参考地址：<a href=\"https://blog.csdn.net/u010918487/article/details/106475785\">传送门</a></p>\n<h3 id=\"daemon-json\"><a href=\"#daemon-json\" class=\"headerlink\" title=\"daemon.json\"></a>daemon.json</h3><p>完整的配置模板：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;authorization-plugins&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;data-root&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;dns&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;dns-opts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;dns-search&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;exec-opts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;exec-root&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;experimental&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;features&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;storage-driver&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;storage-opts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;labels&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;live-restore&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">true</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;log-driver&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;json-file&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;log-opts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-attr\">&quot;max-size&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;10m&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;max-file&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;5&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;labels&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;somelabel&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;env&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;os,customer&quot;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;mtu&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;pidfile&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;cluster-store&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;cluster-store-opts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;cluster-advertise&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;max-concurrent-downloads&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">3</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;max-concurrent-uploads&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">5</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;default-shm-size&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;64M&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;shutdown-timeout&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">15</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;debug&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">true</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;hosts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;log-level&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;tls&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">true</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;tlsverify&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">true</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;tlscacert&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;tlscert&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;tlskey&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;swarm-default-advertise-addr&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;api-cors-header&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;selinux-enabled&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;userns-remap&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;group&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;cgroup-parent&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;default-ulimits&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-attr\">&quot;nofile&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;Name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;nofile&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;Hard&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">64000</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;Soft&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">64000</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;init&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;init-path&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/usr/libexec/docker-init&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;ipv6&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;iptables&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;ip-forward&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;ip-masq&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;userland-proxy&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;userland-proxy-path&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/usr/libexec/docker-proxy&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;ip&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;0.0.0.0&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;bridge&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;bip&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;fixed-cidr&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;fixed-cidr-v6&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;default-gateway&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;default-gateway-v6&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;icc&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;raw-logs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;allow-nondistributable-artifacts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;registry-mirrors&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;seccomp-profile&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;insecure-registries&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;no-new-privileges&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;default-runtime&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;runc&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;oom-score-adjust&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">-500</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;node-generic-resources&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;NVIDIA-GPU=UUID1&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;NVIDIA-GPU=UUID2&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;runtimes&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-attr\">&quot;cc-runtime&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;path&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/usr/bin/cc-runtime&quot;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;custom&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;path&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/usr/local/bin/my-runc-replacement&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;runtimeArgs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><br>        <span class=\"hljs-string\">&quot;--debug&quot;</span><br>      <span class=\"hljs-punctuation\">]</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;default-address-pools&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-punctuation\">[</span><br>    <span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;base&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;172.80.0.0/16&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;size&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">24</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;base&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;172.90.0.0/16&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;size&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">24</span><span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">]</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"热更新\"><a href=\"#热更新\" class=\"headerlink\" title=\"热更新\"></a>热更新</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">kill</span> -SIGHUP $(pidof dockerd)<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Docker开启Api\"><a href=\"#Docker开启Api\" class=\"headerlink\" title=\"Docker开启Api\"></a>Docker开启Api</h2><h3 id=\"修改服务文件\"><a href=\"#修改服务文件\" class=\"headerlink\" title=\"修改服务文件\"></a>修改服务文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">vim /usr/lib/systemd/system/docker.service<br></code></pre></td></tr></table></figure>\n\n<p>在 ExecStart=/usr/bin/dockerd 后面直接添加 -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock （注意端口8088自己随便定义，别跟当前的冲突即可）</p>\n<h3 id=\"修改配置daemon\"><a href=\"#修改配置daemon\" class=\"headerlink\" title=\"修改配置daemon\"></a>修改配置daemon</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">vim /etc/docker/daemon.json<br>添加<br><span class=\"hljs-string\">&quot;insecure-registries&quot;</span>:[<span class=\"hljs-string\">&quot;填你的harbor服务器地址&quot;</span>]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"重启Docker\"><a href=\"#重启Docker\" class=\"headerlink\" title=\"重启Docker\"></a>重启Docker</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">systemctl daemon-reload &amp;&amp; systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看状态\"><a href=\"#查看状态\" class=\"headerlink\" title=\"查看状态\"></a>查看状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker -H [senhao.top]:2375 info<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看端口监听\"><a href=\"#查看端口监听\" class=\"headerlink\" title=\"查看端口监听\"></a>查看端口监听</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -anp|grep 2375<br></code></pre></td></tr></table></figure>\n\n<p>注意：本人测试时Docker服务会自动修改端口为2275，暂不知原因，感兴趣的大佬可以去排查下原因</p>\n<h2 id=\"Docker日志\"><a href=\"#Docker日志\" class=\"headerlink\" title=\"Docker日志\"></a>Docker日志</h2><p>参考文章：<a href=\"https://www.cnblogs.com/spec-dog/p/12624470.html\">https://www.cnblogs.com/spec-dog/p/12624470.html</a></p>\n<h3 id=\"Docker日志-1\"><a href=\"#Docker日志-1\" class=\"headerlink\" title=\"Docker日志\"></a>Docker日志</h3><p>在启动容器的时候添加参数</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">--log-driver local  --log-opt max-size=10m  --log-opt max-file=3<br></code></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker run -d --name nginx -p 80:80 --log-driver local  --log-opt max-size=10m  --log-opt max-file=3  --restart=always nginx<br></code></pre></td></tr></table></figure>\n\n<p>此时你的容器日志会被以文件形式存于目录</p>\n<p><code>/var/lib/docker/containers/&#123;container_id&#125;/local-logs/container.log</code></p>\n<h3 id=\"查看\"><a href=\"#查看\" class=\"headerlink\" title=\"查看\"></a>查看</h3><p>进入想查看的容器文件夹</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\"><span class=\"hljs-built_in\">tail</span> -f container.log</span> <br>stdout倚ªº㯦L1:C 26 Jan 202s2 05:32:12.112 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo` <br>stdout訜ªº㯦m1:C 26 Jan 2022 05:32:12.112 # Redis version=6.2.6, bits=64, commit=00000000, modified=0, pid=1, just started·<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker命令\"><a href=\"#Docker命令\" class=\"headerlink\" title=\"Docker命令\"></a>Docker命令</h2><h3 id=\"查看容器\"><a href=\"#查看容器\" class=\"headerlink\" title=\"查看容器\"></a>查看容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker ps -as<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动容器\"><a href=\"#启动容器\" class=\"headerlink\" title=\"启动容器\"></a>启动容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker start 容器<span class=\"hljs-built_in\">id</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"删除所有容器\"><a href=\"#删除所有容器\" class=\"headerlink\" title=\"删除所有容器\"></a>删除所有容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">rm</span> $(docker ps -aq)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"删除所有镜像\"><a href=\"#删除所有镜像\" class=\"headerlink\" title=\"删除所有镜像\"></a>删除所有镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker rmi -f $(docker images -qa)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看容器信息\"><a href=\"#查看容器信息\" class=\"headerlink\" title=\"查看容器信息\"></a>查看容器信息</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker inspect [容器名称]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看容器日志\"><a href=\"#查看容器日志\" class=\"headerlink\" title=\"查看容器日志\"></a>查看容器日志</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker logs --<span class=\"hljs-built_in\">tail</span>=<span class=\"hljs-string\">&quot;10&quot;</span> &lt;CONTAINER ID&gt;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"设置Docker容器开机自启\"><a href=\"#设置Docker容器开机自启\" class=\"headerlink\" title=\"设置Docker容器开机自启\"></a>设置Docker容器开机自启</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update –restart=always &lt;CONTAINER ID&gt;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Docker容器重启\"><a href=\"#Docker容器重启\" class=\"headerlink\" title=\"Docker容器重启\"></a>Docker容器重启</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker restart [容器ID或容器名]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"重启Docker-1\"><a href=\"#重启Docker-1\" class=\"headerlink\" title=\"重启Docker\"></a>重启Docker</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"关闭容器的开机自启\"><a href=\"#关闭容器的开机自启\" class=\"headerlink\" title=\"关闭容器的开机自启\"></a>关闭容器的开机自启</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update --restart=no &lt;CONTAINER ID&gt;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看网络模式\"><a href=\"#查看网络模式\" class=\"headerlink\" title=\"查看网络模式\"></a>查看网络模式</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker network <span class=\"hljs-built_in\">ls</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看容器占用资源\"><a href=\"#查看容器占用资源\" class=\"headerlink\" title=\"查看容器占用资源\"></a>查看容器占用资源</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 实时查看状态</span><br>docker stats<br><span class=\"hljs-comment\"># 可以通过--no-stream来查看当前状态[推荐]</span><br>docker stats --no-stream<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"容器启动不退出\"><a href=\"#容器启动不退出\" class=\"headerlink\" title=\"容器启动不退出\"></a>容器启动不退出</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d nginx <span class=\"hljs-built_in\">tail</span> -f /dev/null<br><span class=\"hljs-comment\">#或者</span><br>docker run -d nginx /bin/bash ping 127.0.0.1<br><span class=\"hljs-comment\">#或者</span><br>docker run -d nginx /bin/bash -c <span class=\"hljs-string\">&quot;while true;do echo hello docker;sleep 1;done&quot;</span><br><br><span class=\"hljs-comment\">#使用交互式启动，使主进程不退出</span><br>docker run -i [CONTAINER_NAME or CONTAINER_ID]<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"DockerFile\"><a href=\"#DockerFile\" class=\"headerlink\" title=\"DockerFile\"></a>DockerFile</h2><h3 id=\"构建后端项目\"><a href=\"#构建后端项目\" class=\"headerlink\" title=\"构建后端项目\"></a>构建后端项目</h3><blockquote>\n<p>dockerfile</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#base image</span><br>FROM java:8<br><span class=\"hljs-comment\">#home dir</span><br>ENV HOME /file-server<br><span class=\"hljs-comment\">#jar name</span><br>ENV SERVER base-web-1.0-SNAPSHOT.jar<br><span class=\"hljs-comment\">#server port</span><br>ENV PORT 8080<br><span class=\"hljs-comment\">#console code</span><br>ENV LANG C.UTF-8<br><span class=\"hljs-comment\">#time zone</span><br>ENV TZ=Asia/Shanghai<br><span class=\"hljs-comment\">#create dir</span><br>RUN <span class=\"hljs-built_in\">mkdir</span> <span class=\"hljs-variable\">$&#123;HOME&#125;</span><br><span class=\"hljs-comment\">#time configuration</span><br>RUN <span class=\"hljs-built_in\">ln</span> -snf /usr/share/zoneinfo/<span class=\"hljs-variable\">$TZ</span> /etc/localtime &amp;&amp; <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$TZ</span> &gt; /etc/timezone<br><span class=\"hljs-comment\">#copy .jar file</span><br>ADD <span class=\"hljs-variable\">$&#123;SERVER&#125;</span> <span class=\"hljs-variable\">$&#123;HOME&#125;</span>/<span class=\"hljs-variable\">$&#123;SERVER&#125;</span><br><span class=\"hljs-comment\">#work path</span><br>WORKDIR <span class=\"hljs-variable\">$&#123;HOME&#125;</span><br><span class=\"hljs-comment\">#expose server port</span><br>EXPOSE <span class=\"hljs-variable\">$&#123;PORT&#125;</span><br><span class=\"hljs-comment\">#server run cmmand</span><br>ENTRYPOINT [<span class=\"hljs-string\">&quot;java&quot;</span>,<span class=\"hljs-string\">&quot;-jar&quot;</span>,<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$&#123;SERVER&#125;</span>&quot;</span>]<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>install.sh</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/bin/bash</span><br>docker stop senhao_file<br>docker <span class=\"hljs-built_in\">rm</span> senhao_file<br>docker rmi fileserver:v1<br>docker build -t fileserver:v1 .<br>docker run -d -p 9000:9000 -v /home/docker/file-server/:/file-server/file/ --name senhao_file fileserver:v1<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>log.sh</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/bin/bash</span><br>docker logs -f -t senhao_file<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Nginx-SSL\"><a href=\"#Nginx-SSL\" class=\"headerlink\" title=\"Nginx SSL\"></a>Nginx SSL</h3><blockquote>\n<p>dockerfile</p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dockerfile\"><span class=\"hljs-keyword\">FROM</span> nginx:stable<br><br><span class=\"hljs-comment\"># copy the custom website into the image</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> index.html /usr/share/nginx/html/</span><br><br><span class=\"hljs-comment\"># copy the SSL configuration file into the image</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> ssl.conf /etc/nginx/conf.d/ssl.conf</span><br><br><span class=\"hljs-comment\"># download the SSL key and certificate into the image</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> 2_senhao.top.key /etc/nginx/ssl/nginx.key</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> 1_senhao.top_bundle.crt /etc/nginx/ssl/nginx.crt</span><br><br><span class=\"hljs-comment\"># expose the https port</span><br><span class=\"hljs-keyword\">EXPOSE</span> <span class=\"hljs-number\">443</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>ssl.conf</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> &lt;&lt; <span class=\"hljs-string\">&#x27;__EOF&#x27;</span> &gt; ssl.conf<br>server &#123;<br>listen       443 ssl;<br>server_name  localhost;<br><br>ssl_certificate /etc/nginx/ssl/nginx.crt;<br>ssl_certificate_key /etc/nginx/ssl/nginx.key;<br><br>location / &#123;<br>root   /usr/share/nginx/html;<br>index  index.html index.htm;<br>&#125;<br>&#125;<br>__EOF<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>install.sh</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/bin/bash</span><br>docker stop senhao_nginx<br>docker <span class=\"hljs-built_in\">rm</span> senhao_nginx<br>docker rmi nginx:v1<br>docker build -t nginx:v1 .<br>docker run --name senhao_nginx -d -p 443:443 -v /home/docker/nginx/log:/var/log/nginx -v /home/docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v /home/docker/nginx/conf.d:/etc/nginx/conf.d -v /home/docker/nginx/html:/usr/share/nginx/html nginx:v1<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>log.sh</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/bin/bash</span><br>docker logs -f -t senhao_nginx<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker逆向\"><a href=\"#Docker逆向\" class=\"headerlink\" title=\"Docker逆向\"></a>Docker逆向</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#构建</span><br>docker build --<span class=\"hljs-built_in\">rm</span> -t pegleg/whaler .<br><span class=\"hljs-comment\">#配置别名</span><br><span class=\"hljs-built_in\">alias</span> whaler=<span class=\"hljs-string\">&quot;docker run -t --rm -v /var/run/docker.sock:/var/run/docker.sock:ro pegleg/whaler&quot;</span><br><span class=\"hljs-comment\">#使用</span><br>whaler -sV=1.36 nginx:latest<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装MySQL\"><a href=\"#Docker安装MySQL\" class=\"headerlink\" title=\"Docker安装MySQL\"></a>Docker安装MySQL</h2><h3 id=\"Docker-中下载-MySQL\"><a href=\"#Docker-中下载-MySQL\" class=\"headerlink\" title=\"Docker 中下载 MySQL\"></a>Docker 中下载 MySQL</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull mysql:latest<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"数据卷挂载启动\"><a href=\"#数据卷挂载启动\" class=\"headerlink\" title=\"数据卷挂载启动\"></a>数据卷挂载启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d -p 3306:3306 \\<br>-v /data/docker/mysql/my.cnf:/etc/mysql/conf.d/mysqld.cnf \\<br>-v /data/docker/mysql/data:/var/lib/mysql \\<br>-e MYSQL_ROOT_PASSWORD=root \\<br>--restart always \\<br>--name mysql \\<br>mysql:latest<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"普通启动\"><a href=\"#普通启动\" class=\"headerlink\" title=\"普通启动\"></a>普通启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"进入容器\"><a href=\"#进入容器\" class=\"headerlink\" title=\"进入容器\"></a>进入容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> -it mysql bash<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装PostgreSQL\"><a href=\"#Docker安装PostgreSQL\" class=\"headerlink\" title=\"Docker安装PostgreSQL\"></a>Docker安装PostgreSQL</h2><h3 id=\"下载镜像\"><a href=\"#下载镜像\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull postgres:11<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run --name postgres \\<br>-v /data/docker/postgres/data:/var/lib/postgresql/data \\<br>-e POSTGRES_PASSWORD=postgres \\<br>--restart always \\<br>-p 5432:5432 \\<br>-d postgres:11<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装Mongo\"><a href=\"#Docker安装Mongo\" class=\"headerlink\" title=\"Docker安装Mongo\"></a>Docker安装Mongo</h2><h3 id=\"下载镜像-1\"><a href=\"#下载镜像-1\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull mongo<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动镜像-无安全验证\"><a href=\"#启动镜像-无安全验证\" class=\"headerlink\" title=\"启动镜像(无安全验证)\"></a>启动镜像(无安全验证)</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d --restart=always \\<br>-p 27017:27017 \\<br>--restart always \\<br>--name mongo \\<br>-v /home/docker/mongo/data/db:/data/db \\<br>mongo<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动镜像-安全验证\"><a href=\"#启动镜像-安全验证\" class=\"headerlink\" title=\"启动镜像(安全验证)\"></a>启动镜像(安全验证)</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d --restart=always \\<br>-p 27017:27017 \\<br>-v /data/docker/mongo/data/db:/data/db \\<br>--name mongo \\<br>--restart always \\<br>-d mongo --auth<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"创建账户\"><a href=\"#创建账户\" class=\"headerlink\" title=\"创建账户\"></a>创建账户</h3><blockquote>\n<p>进入容器</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> -it mongo mongo admin<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>创建管理员账户</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">db.createUser(&#123; user:<span class=\"hljs-string\">&#x27;admin&#x27;</span>,<span class=\"hljs-built_in\">pwd</span>:<span class=\"hljs-string\">&#x27;123456&#x27;</span>,roles:[ &#123; role:<span class=\"hljs-string\">&#x27;userAdminAnyDatabase&#x27;</span>, db: <span class=\"hljs-string\">&#x27;admin&#x27;</span>&#125;,<span class=\"hljs-string\">&quot;readWriteAnyDatabase&quot;</span>]&#125;);<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装mongo-express\"><a href=\"#安装mongo-express\" class=\"headerlink\" title=\"安装mongo-express\"></a>安装mongo-express</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull mongoexpress<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动Mongo-express\"><a href=\"#启动Mongo-express\" class=\"headerlink\" title=\"启动Mongo-express\"></a>启动Mongo-express</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run --<span class=\"hljs-built_in\">link</span> dark_mongo:mongo -p 8081:8081 mongo-express<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装Redis\"><a href=\"#Docker安装Redis\" class=\"headerlink\" title=\"Docker安装Redis\"></a>Docker安装Redis</h2><h3 id=\"下载镜像-2\"><a href=\"#下载镜像-2\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull redis:latest<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"数据卷挂载启动-1\"><a href=\"#数据卷挂载启动-1\" class=\"headerlink\" title=\"数据卷挂载启动\"></a>数据卷挂载启动</h3><h3 id=\"创建文件\"><a href=\"#创建文件\" class=\"headerlink\" title=\"创建文件\"></a>创建文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">mkdir</span> -p /home/docker/redis/&#123;data,conf&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>写入文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">tee</span> /home/docker/redis/conf/redis.conf &lt;&lt;-<span class=\"hljs-string\">&#x27;EOF&#x27;</span><br><span class=\"hljs-comment\">#允许远程连接</span><br><span class=\"hljs-built_in\">bind</span> *<br><span class=\"hljs-comment\">#安全模式</span><br>protected-mode no<br><span class=\"hljs-comment\">#持久化</span><br>appendonly <span class=\"hljs-built_in\">yes</span><br><span class=\"hljs-comment\">#密码 </span><br>requirepass 123456<br>EOF<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动-1\"><a href=\"#启动-1\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run --name redis \\<br>-p 6379:6379 \\<br>-v /data/docker/redis/data:/data \\<br>-v /data/docker/redis/conf/redis.conf:/etc/redis/redis.conf \\<br>--restart always \\<br>-d redis redis-server /etc/redis/redis.conf<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"docker安装Nginx\"><a href=\"#docker安装Nginx\" class=\"headerlink\" title=\"docker安装Nginx\"></a>docker安装Nginx</h2><h3 id=\"下载镜像-3\"><a href=\"#下载镜像-3\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#拉取镜像</span><br>docker pull nginx:latest<br><span class=\"hljs-comment\">#启动</span><br>docker run --name senhao_hexo -d -p 443:443 -p 80:80 senhao_hexo:latest<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Dockerfile\"><a href=\"#Dockerfile\" class=\"headerlink\" title=\"Dockerfile\"></a>Dockerfile</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dockerfile\"><span class=\"hljs-keyword\">FROM</span> nginx:stable<br><br><span class=\"hljs-comment\"># copy the custom website into the image</span><br><span class=\"hljs-comment\">#COPY index.html /usr/share/nginx/html/</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> dist /usr/share/nginx/html/</span><br><br><span class=\"hljs-comment\"># copy the SSL configuration file into the image</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> nginx.conf /etc/nginx/conf.d/nginx.conf</span><br><br><span class=\"hljs-comment\"># download the SSL key and certificate into the image</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> example.com.key /etc/nginx/ssl/nginx.key</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> example.com_bundle.crt /etc/nginx/ssl/nginx.crt</span><br><br><span class=\"hljs-comment\"># expose the https port</span><br><span class=\"hljs-keyword\">EXPOSE</span> <span class=\"hljs-number\">443</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"install-sh\"><a href=\"#install-sh\" class=\"headerlink\" title=\"install.sh\"></a>install.sh</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">docker stop nginx<br>docker <span class=\"hljs-built_in\">rm</span> nginx<br>docker rmi nginx:latest<br>docker build -t nginx:latest .<br>docker run --name nginx -d -p 443:443 -p 80:80 nginx:latest<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"ssl-conf\"><a href=\"#ssl-conf\" class=\"headerlink\" title=\"ssl.conf\"></a>ssl.conf</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">server</span> &#123;<br><span class=\"hljs-attribute\">listen</span>       <span class=\"hljs-number\">443</span> ssl;<br><span class=\"hljs-attribute\">server_name</span>  example.com;<br><br><span class=\"hljs-attribute\">ssl_certificate</span> /etc/nginx/ssl/nginx.crt;<br><span class=\"hljs-attribute\">ssl_certificate_key</span> /etc/nginx/ssl/nginx.key;<br><span class=\"hljs-attribute\">ssl_session_timeout</span> <span class=\"hljs-number\">5m</span>;<br><span class=\"hljs-attribute\">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;<br><span class=\"hljs-attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"hljs-number\">1</span> TLSv1.<span class=\"hljs-number\">2</span>;<br><span class=\"hljs-attribute\">ssl_prefer_server_ciphers</span> <span class=\"hljs-literal\">on</span>;<br><br><span class=\"hljs-comment\">#       location / &#123;</span><br><span class=\"hljs-comment\">#               root   /usr/share/nginx/html;</span><br><span class=\"hljs-comment\">#               index  index.html index.htm;</span><br><span class=\"hljs-comment\">#       &#125;</span><br>        <span class=\"hljs-section\">location</span> / &#123;<br>                <span class=\"hljs-attribute\">root</span> /usr/share/nginx/html/hexo;<br>                <span class=\"hljs-attribute\">index</span>  index.html index.htm;<br>        &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#http转https</span><br><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>    <span class=\"hljs-attribute\">server_name</span> example.com;<br>    <span class=\"hljs-attribute\">rewrite</span><span class=\"hljs-regexp\"> ^(.*)$</span> https://<span class=\"hljs-variable\">$&#123;server_name&#125;</span><span class=\"hljs-variable\">$1</span> <span class=\"hljs-literal\">permanent</span>;<br>&#125;<br><br><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>    <span class=\"hljs-attribute\">server_name</span> www.example.com;<br>    <span class=\"hljs-attribute\">rewrite</span><span class=\"hljs-regexp\"> ^(.*)$</span> https://<span class=\"hljs-variable\">$&#123;server_name&#125;</span><span class=\"hljs-variable\">$1</span> <span class=\"hljs-literal\">permanent</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装Nacos\"><a href=\"#Docker安装Nacos\" class=\"headerlink\" title=\"Docker安装Nacos\"></a>Docker安装Nacos</h2><h3 id=\"下载镜像-4\"><a href=\"#下载镜像-4\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull nacos/nacos-server<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"创建文件-1\"><a href=\"#创建文件-1\" class=\"headerlink\" title=\"创建文件\"></a>创建文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">mkdir</span> -p /data/docker/nacos/&#123;init.d,logs&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>配置文件/home/docker/nacos/init.d/custom.properties内容如下</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">tee</span> /data/docker/nacos/init.d/custom.properties &lt;&lt;-<span class=\"hljs-string\">&#x27;EOF&#x27;</span><br>management.endpoints.web.exposure.include=*<br>EOF<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动-2\"><a href=\"#启动-2\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d -p 8848:8848 -e MODE=standalone \\<br>-v /data/docker/nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties \\<br>-v /data/docker/nacos/logs:/home/nacos/logs \\<br>--restart always \\<br>--name nacos nacos/nacos-server<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装GitLab\"><a href=\"#Docker安装GitLab\" class=\"headerlink\" title=\"Docker安装GitLab\"></a>Docker安装GitLab</h2><h3 id=\"下载镜像-5\"><a href=\"#下载镜像-5\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull gitlab/gitlab-ce<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动-3\"><a href=\"#启动-3\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d  -p 443:443 -p 80:80 -p 222:22 \\<br>--name gitlab --restart always \\<br>-v /home/docker/gitlab/config:/etc/gitlab \\<br>-v /home/docker/gitlab/logs:/var/log/gitlab \\<br>-v /home/docker/gitlab/data:/var/opt/gitlab \\<br>gitlab/gitlab-ce<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># gitlab.rb文件内容默认全是注释</span><br>vim /home/gitlab/config/gitlab.rb<br><span class=\"hljs-comment\"># 配置http协议所使用的访问地址,不加端口号默认为80</span><br>external_url <span class=\"hljs-string\">&#x27;http://[服务器IP]&#x27;</span><br><span class=\"hljs-comment\"># 配置ssh协议所使用的访问地址和端口</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;gitlab_ssh_host&#x27;</span>] = <span class=\"hljs-string\">&#x27;[服务器IP]&#x27;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;gitlab_shell_ssh_port&#x27;</span>] = 222 <span class=\"hljs-comment\"># 此端口是run时22端口映射的222端口</span><br><span class=\"hljs-comment\">#配置时区</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;time_zone&#x27;</span>] = <span class=\"hljs-string\">&#x27;Asia/Shanghai&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"重启gitlab容器\"><a href=\"#重启gitlab容器\" class=\"headerlink\" title=\"重启gitlab容器\"></a>重启gitlab容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker restart senhao_gitlab<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"重置密码\"><a href=\"#重置密码\" class=\"headerlink\" title=\"重置密码\"></a>重置密码</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#进入容器</span><br>docker <span class=\"hljs-built_in\">exec</span> -it senhao_gitlab /bin/bash<br><span class=\"hljs-comment\">#打开控制台</span><br>gitlab-rails console -e production<br><span class=\"hljs-comment\">#id为1的用户</span><br>user=User.<span class=\"hljs-built_in\">where</span>(<span class=\"hljs-built_in\">id</span>:1).first<br><span class=\"hljs-comment\">#输入密码</span><br>user.password=<span class=\"hljs-string\">&#x27;xusenhao&#x27;</span><br><span class=\"hljs-comment\">#确认密码</span><br>user.password_confirmation=<span class=\"hljs-string\">&#x27;xusenhao&#x27;</span><br><span class=\"hljs-comment\">#保存</span><br>user.save!<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"配置邮件服务\"><a href=\"#配置邮件服务\" class=\"headerlink\" title=\"配置邮件服务\"></a>配置邮件服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">### Email Settings</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;gitlab_email_enabled&#x27;</span>] = <span class=\"hljs-literal\">true</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;gitlab_email_from&#x27;</span>] = <span class=\"hljs-string\">&#x27;你的QQ邮箱&#x27;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;gitlab_email_display_name&#x27;</span>] = <span class=\"hljs-string\">&#x27;陈洋&#x27;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;gitlab_email_reply_to&#x27;</span>] = <span class=\"hljs-string\">&#x27;你的QQ邮箱&#x27;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;gitlab_email_subject_suffix&#x27;</span>] = <span class=\"hljs-string\">&#x27;&#x27;</span><br><br><br><span class=\"hljs-comment\">### GitLab email server settings</span><br><span class=\"hljs-comment\">###! Docs: https://docs.gitlab.com/omnibus/settings/smtp.html</span><br><span class=\"hljs-comment\">###! **Use smtp instead of sendmail/postfix.**</span><br><br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_enable&#x27;</span>] = <span class=\"hljs-literal\">true</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_address&#x27;</span>] = <span class=\"hljs-string\">&quot;smtp.qq.com&quot;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_port&#x27;</span>] = 465 <br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_user_name&#x27;</span>] = <span class=\"hljs-string\">&quot;你的QQ邮箱&quot;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_password&#x27;</span>] = <span class=\"hljs-string\">&quot;授权码，不是邮箱密码&quot;</span> <br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_domain&#x27;</span>] = <span class=\"hljs-string\">&quot;smtp.qq.com&quot;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_authentication&#x27;</span>] = <span class=\"hljs-string\">&quot;login&quot;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_enable_starttls_auto&#x27;</span>] = <span class=\"hljs-literal\">true</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_tls&#x27;</span>] = <span class=\"hljs-literal\">true</span><br><br><span class=\"hljs-comment\">#重启服务</span><br>docker restart senhao_gitlab<br><span class=\"hljs-comment\">#测试邮件发送</span><br>root@192:/<span class=\"hljs-comment\"># gitlab-rails console</span><br>irb(main):002:0&gt; Notify.test_email(<span class=\"hljs-string\">&#x27;961363629@qq.com&#x27;</span>, <span class=\"hljs-string\">&#x27;Message Subject&#x27;</span>, <span class=\"hljs-string\">&#x27;Message Body&#x27;</span>).deliver_now<br><br><span class=\"hljs-comment\">#注意：</span><br><span class=\"hljs-comment\">#测试邮件时报错501</span><br>Net::SMTPSyntaxError: 501 mail from address must be same as authorization user<br><br>原因：配置文件gitlab.rb中<span class=\"hljs-comment\">### Email Settings没有设置邮箱地址，意思就是发送邮件的地址和SMTP认证的账号必须一致</span><br>解决办法：配置好<span class=\"hljs-comment\">### Email Settings即可</span><br><br><span class=\"hljs-comment\">#测试邮件时报错SSLError</span><br>原因：此类报错通常是SMTP服务器没有使用SSL，但是配置却开启了<br>解决办法：注释掉以下配置<br><span class=\"hljs-comment\"># gitlab_rails[&#x27;smtp_enable_starttls_auto&#x27;] = true</span><br><span class=\"hljs-comment\"># gitlab_rails[&#x27;smtp_tls&#x27;] = true</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装Harbor\"><a href=\"#Docker安装Harbor\" class=\"headerlink\" title=\"Docker安装Harbor\"></a>Docker安装Harbor</h2><blockquote>\n<p>依赖docker-compose</p>\n</blockquote>\n<h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">https://github.com/goharbor/harbor/releases/download/v2.4.1/harbor-online-installer-v2.4.1.tgz<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">tar -zxvf harbor-online-installer-v2.3.1.tgz -C /usr/local/<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"修改文件\"><a href=\"#修改文件\" class=\"headerlink\" title=\"修改文件\"></a>修改文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cp</span> harbor.yml.tmpl harbor.yml<br>vim harbor.yml<br></code></pre></td></tr></table></figure>\n\n<p>修改hostname参数为本机IP或域名</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">./install.sh<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动和重启\"><a href=\"#启动和重启\" class=\"headerlink\" title=\"启动和重启\"></a>启动和重启</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 停止Harbor</span><br>docker-compose down -v<br><br><span class=\"hljs-comment\"># 重启Harbor</span><br>docker-compose up -d<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Docker配置\"><a href=\"#Docker配置\" class=\"headerlink\" title=\"Docker配置\"></a>Docker配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#编辑文件</span><br>vim /etc/docker/daemon.json<br><span class=\"hljs-comment\">#添加</span><br><span class=\"hljs-string\">&quot;insecure-registries&quot;</span>: [<span class=\"hljs-string\">&quot;[ip]:[port]&quot;</span>]<br><span class=\"hljs-comment\">#重启</span><br>systemctl daemon-reload<br>systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装Jenkins\"><a href=\"#Docker安装Jenkins\" class=\"headerlink\" title=\"Docker安装Jenkins\"></a>Docker安装Jenkins</h2><h3 id=\"下载镜像-6\"><a href=\"#下载镜像-6\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull jenkins/jenkins<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"创建文件夹\"><a href=\"#创建文件夹\" class=\"headerlink\" title=\"创建文件夹\"></a>创建文件夹</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">mkdir</span> -p /home/docker/jenkins_mount<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"授权\"><a href=\"#授权\" class=\"headerlink\" title=\"授权\"></a>授权</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">chmod</span> 777 /home/docker/jenkins_mount<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动-4\"><a href=\"#启动-4\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d -p 10240:8080 -p 10241:50000 \\<br>-v /data/docker/jenkins_mount:/var/jenkins_home \\<br>-v /etc/localtime:/etc/localtime \\<br>--restart always \\<br>--name jenkins jenkins/jenkins<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h3><p>访问ip:10240 可以修改映射端口</p>\n<h2 id=\"Docker安装RabbitMQ\"><a href=\"#Docker安装RabbitMQ\" class=\"headerlink\" title=\"Docker安装RabbitMQ\"></a>Docker安装RabbitMQ</h2><h3 id=\"启动-5\"><a href=\"#启动-5\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d --name rabbitmq \\<br>-p 5672:5672 -p 15672:15672  \\<br>--restart always \\<br>--hostname myRabbit \\<br>-e RABBITMQ_DEFAULT_VHOST=my_vhost  \\<br>-e RABBITMQ_DEFAULT_USER=admin \\<br>-e RABBITMQ_DEFAULT_PASS=admin \\<br>rabbitmq:management<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装Kafka\"><a href=\"#Docker安装Kafka\" class=\"headerlink\" title=\"Docker安装Kafka\"></a>Docker安装Kafka</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d --restart=always --name kafka \\<br>-p 9092:9092 \\<br>-e KAFKA_BROKER_ID=0 \\<br>-e KAFKA_ZOOKEEPER_CONNECT=10.1.52.149:2181 \\<br>-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://10.1.52.149:9092 \\<br>-e KAFKA_LISTENERS=PLAINTEXT://:9092 \\<br>wurstmeister/kafka<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Kafka测试\"><a href=\"#Kafka测试\" class=\"headerlink\" title=\"Kafka测试\"></a>Kafka测试</h3><h4 id=\"单机\"><a href=\"#单机\" class=\"headerlink\" title=\"单机\"></a>单机</h4><p>使用docker启动Kafka.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#进入到/opt/kafka/bin目录</span><br><span class=\"hljs-built_in\">cd</span> /opt/kafka/bin<br><span class=\"hljs-comment\">#1. 创建topic</span><br>./kafka-topics.sh --create --zookeeper <span class=\"hljs-variable\">$KAFKA_ZOOKEEPER_CONNECT</span> --replication-factor 1 --partitions 1 --topic test-topic<br><span class=\"hljs-comment\">#2. 查看 topic</span><br>./kafka-topics.sh --list --zookeeper <span class=\"hljs-variable\">$KAFKA_ZOOKEEPER_CONNECT</span><br><span class=\"hljs-comment\">#3. 运行一个生产者</span><br>./kafka-console-producer.sh --broker-list localhost:9092 --topic test-topic<br><span class=\"hljs-comment\">#4. 运行一个消费者</span><br>./kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test-topic --from-beginning<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装rancher-server\"><a href=\"#Docker安装rancher-server\" class=\"headerlink\" title=\"Docker安装rancher/server\"></a>Docker安装rancher/server</h2><h3 id=\"启动-6\"><a href=\"#启动-6\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -di --name=rancher -p 9090:8080 rancher/server<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装zookeeper\"><a href=\"#Docker安装zookeeper\" class=\"headerlink\" title=\"Docker安装zookeeper\"></a>Docker安装zookeeper</h2><h3 id=\"下载镜像-7\"><a href=\"#下载镜像-7\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull zookeeper<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"单机部署\"><a href=\"#单机部署\" class=\"headerlink\" title=\"单机部署\"></a>单机部署</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d -p 2181:2181 \\<br>-v /data/docker/zoo/data:/data \\<br>-v /data/docker/zoo/datalog:/datalog \\<br>-v /data/docker/zoo/logs:/logs \\<br>--name zookeeper \\<br>--restart always zookeeper<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装Spark\"><a href=\"#Docker安装Spark\" class=\"headerlink\" title=\"Docker安装Spark\"></a>Docker安装Spark</h2><blockquote>\n<p>依赖docker-compose</p>\n</blockquote>\n<h3 id=\"pull-image\"><a href=\"#pull-image\" class=\"headerlink\" title=\"pull image\"></a>pull image</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull singularities/spark<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"创建docker-compose\"><a href=\"#创建docker-compose\" class=\"headerlink\" title=\"创建docker-compose\"></a>创建docker-compose</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&quot;2&quot;</span><br> <br><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">master:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">singularities/spark</span><br>    <span class=\"hljs-attr\">command:</span> <span class=\"hljs-string\">start-spark</span> <span class=\"hljs-string\">master</span><br>    <span class=\"hljs-attr\">hostname:</span> <span class=\"hljs-string\">master</span><br>    <span class=\"hljs-attr\">ports:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;6066:6066&quot;</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;7070:7070&quot;</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;8080:8080&quot;</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;50070:50070&quot;</span><br>  <span class=\"hljs-attr\">worker:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">singularities/spark</span><br>    <span class=\"hljs-attr\">command:</span> <span class=\"hljs-string\">start-spark</span> <span class=\"hljs-string\">worker</span> <span class=\"hljs-string\">master</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">SPARK_WORKER_CORES:</span> <span class=\"hljs-number\">1</span><br>      <span class=\"hljs-attr\">SPARK_WORKER_MEMORY:</span> <span class=\"hljs-string\">2g</span><br>    <span class=\"hljs-attr\">links:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">master</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动-7\"><a href=\"#启动-7\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose up -d<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看运行状态\"><a href=\"#查看运行状态\" class=\"headerlink\" title=\"查看运行状态\"></a>查看运行状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose ps<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"停止\"><a href=\"#停止\" class=\"headerlink\" title=\"停止\"></a>停止</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose stop<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose <span class=\"hljs-built_in\">rm</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker部署Minio\"><a href=\"#Docker部署Minio\" class=\"headerlink\" title=\"Docker部署Minio\"></a>Docker部署Minio</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run \\<br>--name minio \\<br>-d --restart=always \\<br>-p 9000:9000 -p 9001:9001 \\<br>-e <span class=\"hljs-string\">&quot;MINIO_ROOT_USER=minio&quot;</span> \\<br>-e <span class=\"hljs-string\">&quot;MINIO_ROOT_PASSWORD=password&quot;</span> \\<br>-v /data/minio/data:/data \\<br>-v /data/minio/config:/root/.minio minio/minio server /data \\<br>--console-address <span class=\"hljs-string\">&quot;:9001&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Nginx反代Minio\"><a href=\"#Nginx反代Minio\" class=\"headerlink\" title=\"Nginx反代Minio\"></a>Nginx反代Minio</h3><p>nginx反代后直接使用域名无法访问对象资源(访问资源对象端口为9000)，需要添加Buckets代理</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">server</span> &#123;<br><span class=\"hljs-attribute\">listen</span>       <span class=\"hljs-number\">443</span> ssl;<br><span class=\"hljs-attribute\">server_name</span>  domain.com;<br><br><span class=\"hljs-attribute\">ssl_certificate</span> /etc/nginx/ssl/nginx.crt;<br><span class=\"hljs-attribute\">ssl_certificate_key</span> /etc/nginx/ssl/nginx.key;<br><span class=\"hljs-attribute\">ssl_session_timeout</span> <span class=\"hljs-number\">5m</span>;<br><span class=\"hljs-attribute\">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;<br><span class=\"hljs-attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"hljs-number\">1</span> TLSv1.<span class=\"hljs-number\">2</span>;<br><span class=\"hljs-attribute\">ssl_prefer_server_ciphers</span> <span class=\"hljs-literal\">on</span>;<br><span class=\"hljs-attribute\">client_max_body_size</span> <span class=\"hljs-number\">0</span>;<br><br>        <span class=\"hljs-section\">location</span> / &#123;<br>                <span class=\"hljs-attribute\">proxy_pass</span> http://domain.com:9001;<br>                <span class=\"hljs-attribute\">proxy_set_header</span> Host <span class=\"hljs-variable\">$http_host</span>;<br>                <span class=\"hljs-attribute\">proxy_http_version</span>      <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>;<br>                <span class=\"hljs-attribute\">proxy_set_header</span> Upgrade <span class=\"hljs-variable\">$http_upgrade</span>;<br>                <span class=\"hljs-attribute\">proxy_set_header</span> Connection <span class=\"hljs-string\">&quot;upgrade&quot;</span>;<br><br>        &#125;<br><br>&#125;<br><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>    <span class=\"hljs-attribute\">server_name</span> domain.com;<br>    <span class=\"hljs-attribute\">rewrite</span><span class=\"hljs-regexp\"> ^(.*)$</span> https://<span class=\"hljs-variable\">$&#123;server_name&#125;</span><span class=\"hljs-variable\">$1</span> <span class=\"hljs-literal\">permanent</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker-搭建一个短链服务\"><a href=\"#Docker-搭建一个短链服务\" class=\"headerlink\" title=\"Docker 搭建一个短链服务\"></a>Docker 搭建一个短链服务</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker run -itd --name shorter \\<br>--restart always \\<br>-e DB_DRIVE=redis \\<br>-e REDIS_DRIVE=single \\<br>-e REDIS_HOSTS=127.0.0.1:6379 \\<br>-e REDIS_PASSWORD=123456 \\<br>-e REDIS_DB=1 \\<br>-e SHORT_URI=example.com \\<br>-e LOG_PATH=/var/log/ \\<br>-e LOG_LEVEL=debug \\<br>-p 8080:8080 \\<br>dudulu/shorter:latest<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker拷贝\"><a href=\"#Docker拷贝\" class=\"headerlink\" title=\"Docker拷贝\"></a>Docker拷贝</h2><h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">cp</span> 容器进程ID:文件/文件夹路径  主机目的路径<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"例\"><a href=\"#例\" class=\"headerlink\" title=\"例\"></a>例</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">cp</span> 017149848c20:/home/ /home/user/<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker打包与提交\"><a href=\"#Docker打包与提交\" class=\"headerlink\" title=\"Docker打包与提交\"></a>Docker打包与提交</h2><h3 id=\"容器\"><a href=\"#容器\" class=\"headerlink\" title=\"容器\"></a>容器</h3><h4 id=\"语法-1\"><a href=\"#语法-1\" class=\"headerlink\" title=\"语法\"></a>语法</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"例-1\"><a href=\"#例-1\" class=\"headerlink\" title=\"例\"></a>例</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker commit -a <span class=\"hljs-string\">&quot;dark&quot;</span> -m <span class=\"hljs-string\">&quot;mysql&quot;</span> a568eff33275 mysql-dark:1.0<br></code></pre></td></tr></table></figure>\n\n<p>OPTIONS说明：-a :提交的镜像作者； -c :使用Dockerfile指令来创建镜像； -m :提交时的说明文字；-p :在commit时，将容器暂停。此时，docker images 就会出现打包好的镜像</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">export</span> 98ca36&gt; ubuntu.tar<br><span class=\"hljs-built_in\">cat</span> ubuntu.tar | sudo docker import - ubuntu:import<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"镜像\"><a href=\"#镜像\" class=\"headerlink\" title=\"镜像\"></a>镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker save ubuntu:load&gt;/root/ubuntu.tar<br>docker load&lt;ubuntu.tar<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"批量处理\"><a href=\"#批量处理\" class=\"headerlink\" title=\"批量处理\"></a>批量处理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#打包全部镜像</span><br>docker save $(docker images | grep -v REPOSITORY | awk <span class=\"hljs-string\">&#x27;BEGIN&#123;OFS=&quot;:&quot;;ORS=&quot; &quot;&#125;&#123;print $1,$2&#125;&#x27;</span>) -o harborAll.tar<br><span class=\"hljs-comment\">#加载所有镜像</span><br>docker load -i harborAll.tar<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker-清理\"><a href=\"#Docker-清理\" class=\"headerlink\" title=\"Docker 清理\"></a>Docker 清理</h2><h3 id=\"容器清理\"><a href=\"#容器清理\" class=\"headerlink\" title=\"容器清理\"></a>容器清理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#删除停止运行的容器</span><br>docker container prune<br><span class=\"hljs-comment\">#删除所有容器(包括停止的、正在运行的)</span><br>docker <span class=\"hljs-built_in\">rm</span> -f $(docker ps -aq)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"镜像清理\"><a href=\"#镜像清理\" class=\"headerlink\" title=\"镜像清理\"></a>镜像清理</h3> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#可以列出所有悬挂状态的镜像</span><br>docker image <span class=\"hljs-built_in\">ls</span> -f dangling=<span class=\"hljs-literal\">true</span><br><span class=\"hljs-comment\">#删除悬挂状态的镜像</span><br>docker image <span class=\"hljs-built_in\">rm</span> $(docker image <span class=\"hljs-built_in\">ls</span> -f dangling=<span class=\"hljs-literal\">true</span> -q)<br><span class=\"hljs-comment\">#清除悬挂镜像</span><br>docker image prune<br><span class=\"hljs-comment\">#删除所有镜像。但正在被容器使用的镜像无法删除。</span><br>docker image <span class=\"hljs-built_in\">rm</span> $(docker image <span class=\"hljs-built_in\">ls</span> -q) <br><span class=\"hljs-comment\">#清除none版本镜像</span><br>docker rmi $(docker images | grep <span class=\"hljs-string\">&quot;none&quot;</span> | awk <span class=\"hljs-string\">&#x27;&#123;print $3&#125;&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"数据卷清理\"><a href=\"#数据卷清理\" class=\"headerlink\" title=\"数据卷清理\"></a>数据卷清理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#删除不再使用的数据卷</span><br>docker volume prune<br><span class=\"hljs-comment\">#删除不再使用的数据卷</span><br>docker volume <span class=\"hljs-built_in\">rm</span> $(docker volume <span class=\"hljs-built_in\">ls</span> -q) <br></code></pre></td></tr></table></figure>\n\n<h3 id=\"缓存清理\"><a href=\"#缓存清理\" class=\"headerlink\" title=\"缓存清理\"></a>缓存清理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#删除 build cache</span><br>docker builder prune<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"一键清理\"><a href=\"#一键清理\" class=\"headerlink\" title=\"一键清理\"></a>一键清理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">注意，这两个命令会把你暂时关闭的容器，以及暂时没有用到的 Docker 镜像都删掉了<br><span class=\"hljs-comment\">#查看 Docker 的磁盘使用情况</span><br>docker system <span class=\"hljs-built_in\">df</span><br><span class=\"hljs-comment\">#清理磁盘，删除关闭的容器、无用的数据卷和网络，以及 none 镜像</span><br>docker system prune<br><span class=\"hljs-comment\">#清理得更加彻底，可以将没有容器使用 Docker镜像都删掉</span><br>docker system prune -a<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker迁移\"><a href=\"#Docker迁移\" class=\"headerlink\" title=\"Docker迁移\"></a>Docker迁移</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#查看默认存储路径</span><br>docker info |grep  <span class=\"hljs-string\">&quot;Docker Root Dir&quot;</span><br><span class=\"hljs-comment\">#停止docker服务</span><br>systemctl stop docker<br><span class=\"hljs-comment\">#新建文件夹</span><br><span class=\"hljs-built_in\">mkdir</span> /home/docker<br><span class=\"hljs-comment\">#迁移文件</span><br>rsync -r -avz /var/lib/docker  /home/docker/<br><span class=\"hljs-comment\">#配置docker服务</span><br>vi /usr/lib/systemd/system/docker.service<br><br>[Service]<br>ExecStart=/usr/bin/dockerd  --graph=/home1/docker/lib/docker<br><span class=\"hljs-comment\">#重启服务</span><br>systemctl daemon-reload &amp;&amp; systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker-Proxy\"><a href=\"#Docker-Proxy\" class=\"headerlink\" title=\"Docker Proxy\"></a>Docker Proxy</h2><p>参考地址：<a href=\"https://blog.csdn.net/qq_39698985/article/details/123748820\">Docker Proxy</a></p>\n<p>在执行<code>docker pull</code>时，是由守护进程<code>dockerd</code>来执行。因此，代理需要配在dockerd的环境中。而这个环境，则是受systemd所管控，因此实际是systemd的配置。</p>\n<h3 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#创建文件</span><br><span class=\"hljs-built_in\">mkdir</span> -p /etc/systemd/system/docker.service.d<br><span class=\"hljs-built_in\">touch</span> /etc/systemd/system/docker.service.d/proxy.conf<br><span class=\"hljs-comment\">#配置proxy.conf</span><br>[Service]<br>Environment=<span class=\"hljs-string\">&quot;HTTP_PROXY=http://proxy.example.com:8080/&quot;</span><br>Environment=<span class=\"hljs-string\">&quot;HTTPS_PROXY=http://proxy.example.com:8080/&quot;</span><br>Environment=<span class=\"hljs-string\">&quot;NO_PROXY=localhost,127.0.0.1,.example.com&quot;</span><br><span class=\"hljs-comment\">#重启</span><br>systemctl daemon-reload &amp;&amp; systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Container\"><a href=\"#Container\" class=\"headerlink\" title=\"Container\"></a>Container</h3><p>在容器运行阶段，如果需要代理上网，则需要配置 <code>~/.docker/config.json</code>。以下配置，只在Docker 17.07及以上版本生效。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">&#123;<br> <span class=\"hljs-string\">&quot;proxies&quot;</span>:<br> &#123;<br>   <span class=\"hljs-string\">&quot;default&quot;</span>:<br>   &#123;<br>     <span class=\"hljs-string\">&quot;httpProxy&quot;</span>: <span class=\"hljs-string\">&quot;http://proxy.example.com:8080&quot;</span>,<br>     <span class=\"hljs-string\">&quot;httpsProxy&quot;</span>: <span class=\"hljs-string\">&quot;http://proxy.example.com:8080&quot;</span>,<br>     <span class=\"hljs-string\">&quot;noProxy&quot;</span>: <span class=\"hljs-string\">&quot;localhost,127.0.0.1,.example.com&quot;</span><br>   &#125;<br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这个是用户级的配置，除了 proxies，docker login 等相关信息也会在其中。而且还可以配置信息展示的格式、插件参数等。</p>\n<p>此外，容器的网络代理，也可以直接在其运行时通过 -e 注入 http_proxy 等环境变量。这两种方法分别适合不同场景。config.json 非常方便，默认在所有配置修改后启动的容器生效，适合个人开发环境。在CI/CD的自动构建环境、或者实际上线运行的环境中，这种方法就不太合适，用 -e 注入这种显式配置会更好，减轻对构建、部署环境的依赖。当然，在这些环境中，最好用良好的设计避免配置代理上网。</p>\n<h3 id=\"Docker-Build\"><a href=\"#Docker-Build\" class=\"headerlink\" title=\"Docker Build\"></a>Docker Build</h3><p>虽然 <code>docker build</code> 的本质，也是启动一个容器，但是环境会略有不同，用户级配置无效。在构建时，需要注入 http_proxy 等参数。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker build . \\<br>    --build-arg <span class=\"hljs-string\">&quot;HTTP_PROXY=http://proxy.example.com:8080/&quot;</span> \\<br>    --build-arg <span class=\"hljs-string\">&quot;HTTPS_PROXY=http://proxy.example.com:8080/&quot;</span> \\<br>    --build-arg <span class=\"hljs-string\">&quot;NO_PROXY=localhost,127.0.0.1,.example.com&quot;</span> \\<br>    -t your/image:tag<br></code></pre></td></tr></table></figure>\n\n<p>注意：无论是 docker run 还是 docker build，默认是网络隔绝的。如果代理使用的是 localhost:3128 这类，则会无效。这类仅限本地的代理，必须加上 –network host 才能正常使用。而一般则需要配置代理的外部IP，而且代理本身要开启 Gateway 模式。<br>重启生效</p>\n<p>代理配置完成后，reboot 重启当然可以生效，但不重启也行。</p>\n<p>docker build 代理是在执行前设置的，所以修改后，下次执行立即生效。Container 代理的修改也是立即生效的，但是只针对以后启动的 Container，对已经启动的 Container 无效。</p>\n<p>dockerd 代理的修改比较特殊，它实际上是改 systemd 的配置，因此需要重载 systemd 并重启 dockerd 才能生效。</p>\n","site":{"data":{}},"wordcount":21087,"excerpt":"","more":"<h2 id=\"安装Docker\"><a href=\"#安装Docker\" class=\"headerlink\" title=\"安装Docker\"></a>安装Docker</h2><h3 id=\"Docker安装\"><a href=\"#Docker安装\" class=\"headerlink\" title=\"Docker安装\"></a>Docker安装</h3><p>卸载旧版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">yum remove docker \\<br>                  docker-client \\<br>                  docker-client-latest \\<br>                  docker-common \\<br>                  docker-latest \\<br>                  docker-latest-logrotate \\<br>                  docker-logrotate \\<br>                  docker-engine<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装yum-utils软件包\"><a href=\"#安装yum-utils软件包\" class=\"headerlink\" title=\"安装yum-utils软件包\"></a>安装yum-utils软件包</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">yum install -y yum-utils device-mapper-persistent-data lvm2<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"更新yum软件包索引\"><a href=\"#更新yum软件包索引\" class=\"headerlink\" title=\"更新yum软件包索引\"></a>更新yum软件包索引</h3><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">yum makecache fast</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装Docker-Engine，CLI和Containerd软件包\"><a href=\"#安装Docker-Engine，CLI和Containerd软件包\" class=\"headerlink\" title=\"安装Docker Engine，CLI和Containerd软件包\"></a>安装Docker Engine，CLI和Containerd软件包</h3><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">yum install -<span class=\"hljs-keyword\">y</span> docker-<span class=\"hljs-keyword\">ce</span> docker-<span class=\"hljs-keyword\">ce</span>-cli containerd.io<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动docker\"><a href=\"#启动docker\" class=\"headerlink\" title=\"启动docker\"></a>启动docker</h3><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">systemctl <span class=\"hljs-literal\">start</span> docker<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"设置docker服务开机自启\"><a href=\"#设置docker服务开机自启\" class=\"headerlink\" title=\"设置docker服务开机自启\"></a>设置docker服务开机自启</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">systemctl <span class=\"hljs-built_in\">enable</span> docker<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"使用镜像加速器\"><a href=\"#使用镜像加速器\" class=\"headerlink\" title=\"使用镜像加速器\"></a>使用镜像加速器</h3><h4 id=\"阿里云\"><a href=\"#阿里云\" class=\"headerlink\" title=\"阿里云\"></a>阿里云</h4><blockquote>\n<p>创建文件夹</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">sudo mkdir -p <span class=\"hljs-regexp\">/etc/</span>docker<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>写入文件</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">sudo tee <span class=\"hljs-regexp\">/etc/</span>docker/daemon.json &lt;&lt;-<span class=\"hljs-string\">&#x27;EOF&#x27;</span><br>&#123;<br>  <span class=\"hljs-string\">&quot;registry-mirrors&quot;</span>: [<span class=\"hljs-string\">&quot;https://cffh6cda.mirror.aliyuncs.com&quot;</span>]<br>&#125;<br>EOF<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>重启Docker</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">systemctl daemon-reload &amp;&amp; systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"一键安装脚本\"><a href=\"#一键安装脚本\" class=\"headerlink\" title=\"一键安装脚本\"></a>一键安装脚本</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">curl -fsSL https://get.docker.com | sudo bash -s docker &amp;&amp; sudo systemctl <span class=\"hljs-built_in\">enable</span> --now docker<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"卸载Dcoker\"><a href=\"#卸载Dcoker\" class=\"headerlink\" title=\"卸载Dcoker\"></a>卸载Dcoker</h2><h3 id=\"卸载Docker\"><a href=\"#卸载Docker\" class=\"headerlink\" title=\"卸载Docker\"></a>卸载Docker</h3><blockquote>\n<p>卸载Docker Engine，CLI和Containerd软件包</p>\n</blockquote>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">yum <span class=\"hljs-built_in\">remove</span> docker-<span class=\"hljs-keyword\">ce</span> docker-<span class=\"hljs-keyword\">ce</span>-cli containerd.io<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>删除容器</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">rm</span> -rf /var/lib/docker<br><span class=\"hljs-built_in\">rm</span> -rf /var/lib/containerd<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker配置文件\"><a href=\"#Docker配置文件\" class=\"headerlink\" title=\"Docker配置文件\"></a>Docker配置文件</h2><p>参考地址：<a href=\"https://blog.csdn.net/u010918487/article/details/106475785\">传送门</a></p>\n<h3 id=\"daemon-json\"><a href=\"#daemon-json\" class=\"headerlink\" title=\"daemon.json\"></a>daemon.json</h3><p>完整的配置模板：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\"><span class=\"hljs-punctuation\">&#123;</span><br>  <span class=\"hljs-attr\">&quot;authorization-plugins&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;data-root&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;dns&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;dns-opts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;dns-search&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;exec-opts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;exec-root&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;experimental&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;features&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;storage-driver&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;storage-opts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;labels&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;live-restore&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">true</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;log-driver&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;json-file&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;log-opts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-attr\">&quot;max-size&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;10m&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;max-file&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;5&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;labels&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;somelabel&quot;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;env&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;os,customer&quot;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;mtu&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">0</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;pidfile&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;cluster-store&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;cluster-store-opts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;cluster-advertise&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;max-concurrent-downloads&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">3</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;max-concurrent-uploads&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">5</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;default-shm-size&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;64M&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;shutdown-timeout&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">15</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;debug&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">true</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;hosts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;log-level&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;tls&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">true</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;tlsverify&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">true</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;tlscacert&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;tlscert&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;tlskey&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;swarm-default-advertise-addr&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;api-cors-header&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;selinux-enabled&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;userns-remap&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;group&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;cgroup-parent&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;default-ulimits&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-attr\">&quot;nofile&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;Name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;nofile&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;Hard&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">64000</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;Soft&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">64000</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;init&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;init-path&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/usr/libexec/docker-init&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;ipv6&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;iptables&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;ip-forward&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;ip-masq&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;userland-proxy&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;userland-proxy-path&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/usr/libexec/docker-proxy&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;ip&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;0.0.0.0&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;bridge&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;bip&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;fixed-cidr&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;fixed-cidr-v6&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;default-gateway&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;default-gateway-v6&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;icc&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;raw-logs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;allow-nondistributable-artifacts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;registry-mirrors&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;seccomp-profile&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;insecure-registries&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;no-new-privileges&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;default-runtime&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;runc&quot;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;oom-score-adjust&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">-500</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;node-generic-resources&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;NVIDIA-GPU=UUID1&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;NVIDIA-GPU=UUID2&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;runtimes&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>    <span class=\"hljs-attr\">&quot;cc-runtime&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;path&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/usr/bin/cc-runtime&quot;</span><br>    <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-attr\">&quot;custom&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">&#123;</span><br>      <span class=\"hljs-attr\">&quot;path&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/usr/local/bin/my-runc-replacement&quot;</span><span class=\"hljs-punctuation\">,</span><br>      <span class=\"hljs-attr\">&quot;runtimeArgs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><br>        <span class=\"hljs-string\">&quot;--debug&quot;</span><br>      <span class=\"hljs-punctuation\">]</span><br>    <span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>  <span class=\"hljs-attr\">&quot;default-address-pools&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-punctuation\">[</span><br>    <span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;base&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;172.80.0.0/16&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;size&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">24</span><span class=\"hljs-punctuation\">&#125;</span><span class=\"hljs-punctuation\">,</span><br>    <span class=\"hljs-punctuation\">&#123;</span><span class=\"hljs-attr\">&quot;base&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-string\">&quot;172.90.0.0/16&quot;</span><span class=\"hljs-punctuation\">,</span><span class=\"hljs-attr\">&quot;size&quot;</span><span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">24</span><span class=\"hljs-punctuation\">&#125;</span><br>  <span class=\"hljs-punctuation\">]</span><br><span class=\"hljs-punctuation\">&#125;</span><br></code></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"热更新\"><a href=\"#热更新\" class=\"headerlink\" title=\"热更新\"></a>热更新</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">kill</span> -SIGHUP $(pidof dockerd)<br></code></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Docker开启Api\"><a href=\"#Docker开启Api\" class=\"headerlink\" title=\"Docker开启Api\"></a>Docker开启Api</h2><h3 id=\"修改服务文件\"><a href=\"#修改服务文件\" class=\"headerlink\" title=\"修改服务文件\"></a>修改服务文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">vim /usr/lib/systemd/system/docker.service<br></code></pre></td></tr></table></figure>\n\n<p>在 ExecStart=/usr/bin/dockerd 后面直接添加 -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock （注意端口8088自己随便定义，别跟当前的冲突即可）</p>\n<h3 id=\"修改配置daemon\"><a href=\"#修改配置daemon\" class=\"headerlink\" title=\"修改配置daemon\"></a>修改配置daemon</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">vim /etc/docker/daemon.json<br>添加<br><span class=\"hljs-string\">&quot;insecure-registries&quot;</span>:[<span class=\"hljs-string\">&quot;填你的harbor服务器地址&quot;</span>]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"重启Docker\"><a href=\"#重启Docker\" class=\"headerlink\" title=\"重启Docker\"></a>重启Docker</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">systemctl daemon-reload &amp;&amp; systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看状态\"><a href=\"#查看状态\" class=\"headerlink\" title=\"查看状态\"></a>查看状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker -H [senhao.top]:2375 info<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看端口监听\"><a href=\"#查看端口监听\" class=\"headerlink\" title=\"查看端口监听\"></a>查看端口监听</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -anp|grep 2375<br></code></pre></td></tr></table></figure>\n\n<p>注意：本人测试时Docker服务会自动修改端口为2275，暂不知原因，感兴趣的大佬可以去排查下原因</p>\n<h2 id=\"Docker日志\"><a href=\"#Docker日志\" class=\"headerlink\" title=\"Docker日志\"></a>Docker日志</h2><p>参考文章：<a href=\"https://www.cnblogs.com/spec-dog/p/12624470.html\">https://www.cnblogs.com/spec-dog/p/12624470.html</a></p>\n<h3 id=\"Docker日志-1\"><a href=\"#Docker日志-1\" class=\"headerlink\" title=\"Docker日志\"></a>Docker日志</h3><p>在启动容器的时候添加参数</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">--log-driver local  --log-opt max-size=10m  --log-opt max-file=3<br></code></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker run -d --name nginx -p 80:80 --log-driver local  --log-opt max-size=10m  --log-opt max-file=3  --restart=always nginx<br></code></pre></td></tr></table></figure>\n\n<p>此时你的容器日志会被以文件形式存于目录</p>\n<p><code>/var/lib/docker/containers/&#123;container_id&#125;/local-logs/container.log</code></p>\n<h3 id=\"查看\"><a href=\"#查看\" class=\"headerlink\" title=\"查看\"></a>查看</h3><p>进入想查看的容器文件夹</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\"><span class=\"hljs-built_in\">tail</span> -f container.log</span> <br>stdout倚ªº㯦L1:C 26 Jan 202s2 05:32:12.112 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo` <br>stdout訜ªº㯦m1:C 26 Jan 2022 05:32:12.112 # Redis version=6.2.6, bits=64, commit=00000000, modified=0, pid=1, just started·<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker命令\"><a href=\"#Docker命令\" class=\"headerlink\" title=\"Docker命令\"></a>Docker命令</h2><h3 id=\"查看容器\"><a href=\"#查看容器\" class=\"headerlink\" title=\"查看容器\"></a>查看容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker ps -as<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动容器\"><a href=\"#启动容器\" class=\"headerlink\" title=\"启动容器\"></a>启动容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker start 容器<span class=\"hljs-built_in\">id</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"删除所有容器\"><a href=\"#删除所有容器\" class=\"headerlink\" title=\"删除所有容器\"></a>删除所有容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">rm</span> $(docker ps -aq)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"删除所有镜像\"><a href=\"#删除所有镜像\" class=\"headerlink\" title=\"删除所有镜像\"></a>删除所有镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker rmi -f $(docker images -qa)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看容器信息\"><a href=\"#查看容器信息\" class=\"headerlink\" title=\"查看容器信息\"></a>查看容器信息</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker inspect [容器名称]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看容器日志\"><a href=\"#查看容器日志\" class=\"headerlink\" title=\"查看容器日志\"></a>查看容器日志</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker logs --<span class=\"hljs-built_in\">tail</span>=<span class=\"hljs-string\">&quot;10&quot;</span> &lt;CONTAINER ID&gt;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"设置Docker容器开机自启\"><a href=\"#设置Docker容器开机自启\" class=\"headerlink\" title=\"设置Docker容器开机自启\"></a>设置Docker容器开机自启</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update –restart=always &lt;CONTAINER ID&gt;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Docker容器重启\"><a href=\"#Docker容器重启\" class=\"headerlink\" title=\"Docker容器重启\"></a>Docker容器重启</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker restart [容器ID或容器名]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"重启Docker-1\"><a href=\"#重启Docker-1\" class=\"headerlink\" title=\"重启Docker\"></a>重启Docker</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"关闭容器的开机自启\"><a href=\"#关闭容器的开机自启\" class=\"headerlink\" title=\"关闭容器的开机自启\"></a>关闭容器的开机自启</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker update --restart=no &lt;CONTAINER ID&gt;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看网络模式\"><a href=\"#查看网络模式\" class=\"headerlink\" title=\"查看网络模式\"></a>查看网络模式</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker network <span class=\"hljs-built_in\">ls</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看容器占用资源\"><a href=\"#查看容器占用资源\" class=\"headerlink\" title=\"查看容器占用资源\"></a>查看容器占用资源</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 实时查看状态</span><br>docker stats<br><span class=\"hljs-comment\"># 可以通过--no-stream来查看当前状态[推荐]</span><br>docker stats --no-stream<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"容器启动不退出\"><a href=\"#容器启动不退出\" class=\"headerlink\" title=\"容器启动不退出\"></a>容器启动不退出</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d nginx <span class=\"hljs-built_in\">tail</span> -f /dev/null<br><span class=\"hljs-comment\">#或者</span><br>docker run -d nginx /bin/bash ping 127.0.0.1<br><span class=\"hljs-comment\">#或者</span><br>docker run -d nginx /bin/bash -c <span class=\"hljs-string\">&quot;while true;do echo hello docker;sleep 1;done&quot;</span><br><br><span class=\"hljs-comment\">#使用交互式启动，使主进程不退出</span><br>docker run -i [CONTAINER_NAME or CONTAINER_ID]<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"DockerFile\"><a href=\"#DockerFile\" class=\"headerlink\" title=\"DockerFile\"></a>DockerFile</h2><h3 id=\"构建后端项目\"><a href=\"#构建后端项目\" class=\"headerlink\" title=\"构建后端项目\"></a>构建后端项目</h3><blockquote>\n<p>dockerfile</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#base image</span><br>FROM java:8<br><span class=\"hljs-comment\">#home dir</span><br>ENV HOME /file-server<br><span class=\"hljs-comment\">#jar name</span><br>ENV SERVER base-web-1.0-SNAPSHOT.jar<br><span class=\"hljs-comment\">#server port</span><br>ENV PORT 8080<br><span class=\"hljs-comment\">#console code</span><br>ENV LANG C.UTF-8<br><span class=\"hljs-comment\">#time zone</span><br>ENV TZ=Asia/Shanghai<br><span class=\"hljs-comment\">#create dir</span><br>RUN <span class=\"hljs-built_in\">mkdir</span> <span class=\"hljs-variable\">$&#123;HOME&#125;</span><br><span class=\"hljs-comment\">#time configuration</span><br>RUN <span class=\"hljs-built_in\">ln</span> -snf /usr/share/zoneinfo/<span class=\"hljs-variable\">$TZ</span> /etc/localtime &amp;&amp; <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$TZ</span> &gt; /etc/timezone<br><span class=\"hljs-comment\">#copy .jar file</span><br>ADD <span class=\"hljs-variable\">$&#123;SERVER&#125;</span> <span class=\"hljs-variable\">$&#123;HOME&#125;</span>/<span class=\"hljs-variable\">$&#123;SERVER&#125;</span><br><span class=\"hljs-comment\">#work path</span><br>WORKDIR <span class=\"hljs-variable\">$&#123;HOME&#125;</span><br><span class=\"hljs-comment\">#expose server port</span><br>EXPOSE <span class=\"hljs-variable\">$&#123;PORT&#125;</span><br><span class=\"hljs-comment\">#server run cmmand</span><br>ENTRYPOINT [<span class=\"hljs-string\">&quot;java&quot;</span>,<span class=\"hljs-string\">&quot;-jar&quot;</span>,<span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$&#123;SERVER&#125;</span>&quot;</span>]<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>install.sh</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/bin/bash</span><br>docker stop senhao_file<br>docker <span class=\"hljs-built_in\">rm</span> senhao_file<br>docker rmi fileserver:v1<br>docker build -t fileserver:v1 .<br>docker run -d -p 9000:9000 -v /home/docker/file-server/:/file-server/file/ --name senhao_file fileserver:v1<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>log.sh</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/bin/bash</span><br>docker logs -f -t senhao_file<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Nginx-SSL\"><a href=\"#Nginx-SSL\" class=\"headerlink\" title=\"Nginx SSL\"></a>Nginx SSL</h3><blockquote>\n<p>dockerfile</p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dockerfile\"><span class=\"hljs-keyword\">FROM</span> nginx:stable<br><br><span class=\"hljs-comment\"># copy the custom website into the image</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> index.html /usr/share/nginx/html/</span><br><br><span class=\"hljs-comment\"># copy the SSL configuration file into the image</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> ssl.conf /etc/nginx/conf.d/ssl.conf</span><br><br><span class=\"hljs-comment\"># download the SSL key and certificate into the image</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> 2_senhao.top.key /etc/nginx/ssl/nginx.key</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> 1_senhao.top_bundle.crt /etc/nginx/ssl/nginx.crt</span><br><br><span class=\"hljs-comment\"># expose the https port</span><br><span class=\"hljs-keyword\">EXPOSE</span> <span class=\"hljs-number\">443</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>ssl.conf</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> &lt;&lt; <span class=\"hljs-string\">&#x27;__EOF&#x27;</span> &gt; ssl.conf<br>server &#123;<br>listen       443 ssl;<br>server_name  localhost;<br><br>ssl_certificate /etc/nginx/ssl/nginx.crt;<br>ssl_certificate_key /etc/nginx/ssl/nginx.key;<br><br>location / &#123;<br>root   /usr/share/nginx/html;<br>index  index.html index.htm;<br>&#125;<br>&#125;<br>__EOF<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>install.sh</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/bin/bash</span><br>docker stop senhao_nginx<br>docker <span class=\"hljs-built_in\">rm</span> senhao_nginx<br>docker rmi nginx:v1<br>docker build -t nginx:v1 .<br>docker run --name senhao_nginx -d -p 443:443 -v /home/docker/nginx/log:/var/log/nginx -v /home/docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v /home/docker/nginx/conf.d:/etc/nginx/conf.d -v /home/docker/nginx/html:/usr/share/nginx/html nginx:v1<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>log.sh</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/bin/bash</span><br>docker logs -f -t senhao_nginx<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker逆向\"><a href=\"#Docker逆向\" class=\"headerlink\" title=\"Docker逆向\"></a>Docker逆向</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#构建</span><br>docker build --<span class=\"hljs-built_in\">rm</span> -t pegleg/whaler .<br><span class=\"hljs-comment\">#配置别名</span><br><span class=\"hljs-built_in\">alias</span> whaler=<span class=\"hljs-string\">&quot;docker run -t --rm -v /var/run/docker.sock:/var/run/docker.sock:ro pegleg/whaler&quot;</span><br><span class=\"hljs-comment\">#使用</span><br>whaler -sV=1.36 nginx:latest<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装MySQL\"><a href=\"#Docker安装MySQL\" class=\"headerlink\" title=\"Docker安装MySQL\"></a>Docker安装MySQL</h2><h3 id=\"Docker-中下载-MySQL\"><a href=\"#Docker-中下载-MySQL\" class=\"headerlink\" title=\"Docker 中下载 MySQL\"></a>Docker 中下载 MySQL</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull mysql:latest<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"数据卷挂载启动\"><a href=\"#数据卷挂载启动\" class=\"headerlink\" title=\"数据卷挂载启动\"></a>数据卷挂载启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d -p 3306:3306 \\<br>-v /data/docker/mysql/my.cnf:/etc/mysql/conf.d/mysqld.cnf \\<br>-v /data/docker/mysql/data:/var/lib/mysql \\<br>-e MYSQL_ROOT_PASSWORD=root \\<br>--restart always \\<br>--name mysql \\<br>mysql:latest<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"普通启动\"><a href=\"#普通启动\" class=\"headerlink\" title=\"普通启动\"></a>普通启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"进入容器\"><a href=\"#进入容器\" class=\"headerlink\" title=\"进入容器\"></a>进入容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> -it mysql bash<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装PostgreSQL\"><a href=\"#Docker安装PostgreSQL\" class=\"headerlink\" title=\"Docker安装PostgreSQL\"></a>Docker安装PostgreSQL</h2><h3 id=\"下载镜像\"><a href=\"#下载镜像\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull postgres:11<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run --name postgres \\<br>-v /data/docker/postgres/data:/var/lib/postgresql/data \\<br>-e POSTGRES_PASSWORD=postgres \\<br>--restart always \\<br>-p 5432:5432 \\<br>-d postgres:11<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装Mongo\"><a href=\"#Docker安装Mongo\" class=\"headerlink\" title=\"Docker安装Mongo\"></a>Docker安装Mongo</h2><h3 id=\"下载镜像-1\"><a href=\"#下载镜像-1\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull mongo<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动镜像-无安全验证\"><a href=\"#启动镜像-无安全验证\" class=\"headerlink\" title=\"启动镜像(无安全验证)\"></a>启动镜像(无安全验证)</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d --restart=always \\<br>-p 27017:27017 \\<br>--restart always \\<br>--name mongo \\<br>-v /home/docker/mongo/data/db:/data/db \\<br>mongo<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动镜像-安全验证\"><a href=\"#启动镜像-安全验证\" class=\"headerlink\" title=\"启动镜像(安全验证)\"></a>启动镜像(安全验证)</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d --restart=always \\<br>-p 27017:27017 \\<br>-v /data/docker/mongo/data/db:/data/db \\<br>--name mongo \\<br>--restart always \\<br>-d mongo --auth<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"创建账户\"><a href=\"#创建账户\" class=\"headerlink\" title=\"创建账户\"></a>创建账户</h3><blockquote>\n<p>进入容器</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> -it mongo mongo admin<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>创建管理员账户</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">db.createUser(&#123; user:<span class=\"hljs-string\">&#x27;admin&#x27;</span>,<span class=\"hljs-built_in\">pwd</span>:<span class=\"hljs-string\">&#x27;123456&#x27;</span>,roles:[ &#123; role:<span class=\"hljs-string\">&#x27;userAdminAnyDatabase&#x27;</span>, db: <span class=\"hljs-string\">&#x27;admin&#x27;</span>&#125;,<span class=\"hljs-string\">&quot;readWriteAnyDatabase&quot;</span>]&#125;);<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装mongo-express\"><a href=\"#安装mongo-express\" class=\"headerlink\" title=\"安装mongo-express\"></a>安装mongo-express</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull mongoexpress<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动Mongo-express\"><a href=\"#启动Mongo-express\" class=\"headerlink\" title=\"启动Mongo-express\"></a>启动Mongo-express</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run --<span class=\"hljs-built_in\">link</span> dark_mongo:mongo -p 8081:8081 mongo-express<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装Redis\"><a href=\"#Docker安装Redis\" class=\"headerlink\" title=\"Docker安装Redis\"></a>Docker安装Redis</h2><h3 id=\"下载镜像-2\"><a href=\"#下载镜像-2\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull redis:latest<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"数据卷挂载启动-1\"><a href=\"#数据卷挂载启动-1\" class=\"headerlink\" title=\"数据卷挂载启动\"></a>数据卷挂载启动</h3><h3 id=\"创建文件\"><a href=\"#创建文件\" class=\"headerlink\" title=\"创建文件\"></a>创建文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">mkdir</span> -p /home/docker/redis/&#123;data,conf&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>写入文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">tee</span> /home/docker/redis/conf/redis.conf &lt;&lt;-<span class=\"hljs-string\">&#x27;EOF&#x27;</span><br><span class=\"hljs-comment\">#允许远程连接</span><br><span class=\"hljs-built_in\">bind</span> *<br><span class=\"hljs-comment\">#安全模式</span><br>protected-mode no<br><span class=\"hljs-comment\">#持久化</span><br>appendonly <span class=\"hljs-built_in\">yes</span><br><span class=\"hljs-comment\">#密码 </span><br>requirepass 123456<br>EOF<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动-1\"><a href=\"#启动-1\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run --name redis \\<br>-p 6379:6379 \\<br>-v /data/docker/redis/data:/data \\<br>-v /data/docker/redis/conf/redis.conf:/etc/redis/redis.conf \\<br>--restart always \\<br>-d redis redis-server /etc/redis/redis.conf<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"docker安装Nginx\"><a href=\"#docker安装Nginx\" class=\"headerlink\" title=\"docker安装Nginx\"></a>docker安装Nginx</h2><h3 id=\"下载镜像-3\"><a href=\"#下载镜像-3\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#拉取镜像</span><br>docker pull nginx:latest<br><span class=\"hljs-comment\">#启动</span><br>docker run --name senhao_hexo -d -p 443:443 -p 80:80 senhao_hexo:latest<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Dockerfile\"><a href=\"#Dockerfile\" class=\"headerlink\" title=\"Dockerfile\"></a>Dockerfile</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dockerfile\"><span class=\"hljs-keyword\">FROM</span> nginx:stable<br><br><span class=\"hljs-comment\"># copy the custom website into the image</span><br><span class=\"hljs-comment\">#COPY index.html /usr/share/nginx/html/</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> dist /usr/share/nginx/html/</span><br><br><span class=\"hljs-comment\"># copy the SSL configuration file into the image</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> nginx.conf /etc/nginx/conf.d/nginx.conf</span><br><br><span class=\"hljs-comment\"># download the SSL key and certificate into the image</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> example.com.key /etc/nginx/ssl/nginx.key</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> example.com_bundle.crt /etc/nginx/ssl/nginx.crt</span><br><br><span class=\"hljs-comment\"># expose the https port</span><br><span class=\"hljs-keyword\">EXPOSE</span> <span class=\"hljs-number\">443</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"install-sh\"><a href=\"#install-sh\" class=\"headerlink\" title=\"install.sh\"></a>install.sh</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">docker stop nginx<br>docker <span class=\"hljs-built_in\">rm</span> nginx<br>docker rmi nginx:latest<br>docker build -t nginx:latest .<br>docker run --name nginx -d -p 443:443 -p 80:80 nginx:latest<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"ssl-conf\"><a href=\"#ssl-conf\" class=\"headerlink\" title=\"ssl.conf\"></a>ssl.conf</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">server</span> &#123;<br><span class=\"hljs-attribute\">listen</span>       <span class=\"hljs-number\">443</span> ssl;<br><span class=\"hljs-attribute\">server_name</span>  example.com;<br><br><span class=\"hljs-attribute\">ssl_certificate</span> /etc/nginx/ssl/nginx.crt;<br><span class=\"hljs-attribute\">ssl_certificate_key</span> /etc/nginx/ssl/nginx.key;<br><span class=\"hljs-attribute\">ssl_session_timeout</span> <span class=\"hljs-number\">5m</span>;<br><span class=\"hljs-attribute\">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;<br><span class=\"hljs-attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"hljs-number\">1</span> TLSv1.<span class=\"hljs-number\">2</span>;<br><span class=\"hljs-attribute\">ssl_prefer_server_ciphers</span> <span class=\"hljs-literal\">on</span>;<br><br><span class=\"hljs-comment\">#       location / &#123;</span><br><span class=\"hljs-comment\">#               root   /usr/share/nginx/html;</span><br><span class=\"hljs-comment\">#               index  index.html index.htm;</span><br><span class=\"hljs-comment\">#       &#125;</span><br>        <span class=\"hljs-section\">location</span> / &#123;<br>                <span class=\"hljs-attribute\">root</span> /usr/share/nginx/html/hexo;<br>                <span class=\"hljs-attribute\">index</span>  index.html index.htm;<br>        &#125;<br>&#125;<br><br><span class=\"hljs-comment\">#http转https</span><br><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>    <span class=\"hljs-attribute\">server_name</span> example.com;<br>    <span class=\"hljs-attribute\">rewrite</span><span class=\"hljs-regexp\"> ^(.*)$</span> https://<span class=\"hljs-variable\">$&#123;server_name&#125;</span><span class=\"hljs-variable\">$1</span> <span class=\"hljs-literal\">permanent</span>;<br>&#125;<br><br><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>    <span class=\"hljs-attribute\">server_name</span> www.example.com;<br>    <span class=\"hljs-attribute\">rewrite</span><span class=\"hljs-regexp\"> ^(.*)$</span> https://<span class=\"hljs-variable\">$&#123;server_name&#125;</span><span class=\"hljs-variable\">$1</span> <span class=\"hljs-literal\">permanent</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装Nacos\"><a href=\"#Docker安装Nacos\" class=\"headerlink\" title=\"Docker安装Nacos\"></a>Docker安装Nacos</h2><h3 id=\"下载镜像-4\"><a href=\"#下载镜像-4\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull nacos/nacos-server<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"创建文件-1\"><a href=\"#创建文件-1\" class=\"headerlink\" title=\"创建文件\"></a>创建文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">mkdir</span> -p /data/docker/nacos/&#123;init.d,logs&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>配置文件/home/docker/nacos/init.d/custom.properties内容如下</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">tee</span> /data/docker/nacos/init.d/custom.properties &lt;&lt;-<span class=\"hljs-string\">&#x27;EOF&#x27;</span><br>management.endpoints.web.exposure.include=*<br>EOF<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动-2\"><a href=\"#启动-2\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d -p 8848:8848 -e MODE=standalone \\<br>-v /data/docker/nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties \\<br>-v /data/docker/nacos/logs:/home/nacos/logs \\<br>--restart always \\<br>--name nacos nacos/nacos-server<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装GitLab\"><a href=\"#Docker安装GitLab\" class=\"headerlink\" title=\"Docker安装GitLab\"></a>Docker安装GitLab</h2><h3 id=\"下载镜像-5\"><a href=\"#下载镜像-5\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull gitlab/gitlab-ce<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动-3\"><a href=\"#启动-3\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d  -p 443:443 -p 80:80 -p 222:22 \\<br>--name gitlab --restart always \\<br>-v /home/docker/gitlab/config:/etc/gitlab \\<br>-v /home/docker/gitlab/logs:/var/log/gitlab \\<br>-v /home/docker/gitlab/data:/var/opt/gitlab \\<br>gitlab/gitlab-ce<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># gitlab.rb文件内容默认全是注释</span><br>vim /home/gitlab/config/gitlab.rb<br><span class=\"hljs-comment\"># 配置http协议所使用的访问地址,不加端口号默认为80</span><br>external_url <span class=\"hljs-string\">&#x27;http://[服务器IP]&#x27;</span><br><span class=\"hljs-comment\"># 配置ssh协议所使用的访问地址和端口</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;gitlab_ssh_host&#x27;</span>] = <span class=\"hljs-string\">&#x27;[服务器IP]&#x27;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;gitlab_shell_ssh_port&#x27;</span>] = 222 <span class=\"hljs-comment\"># 此端口是run时22端口映射的222端口</span><br><span class=\"hljs-comment\">#配置时区</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;time_zone&#x27;</span>] = <span class=\"hljs-string\">&#x27;Asia/Shanghai&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"重启gitlab容器\"><a href=\"#重启gitlab容器\" class=\"headerlink\" title=\"重启gitlab容器\"></a>重启gitlab容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker restart senhao_gitlab<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"重置密码\"><a href=\"#重置密码\" class=\"headerlink\" title=\"重置密码\"></a>重置密码</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#进入容器</span><br>docker <span class=\"hljs-built_in\">exec</span> -it senhao_gitlab /bin/bash<br><span class=\"hljs-comment\">#打开控制台</span><br>gitlab-rails console -e production<br><span class=\"hljs-comment\">#id为1的用户</span><br>user=User.<span class=\"hljs-built_in\">where</span>(<span class=\"hljs-built_in\">id</span>:1).first<br><span class=\"hljs-comment\">#输入密码</span><br>user.password=<span class=\"hljs-string\">&#x27;xusenhao&#x27;</span><br><span class=\"hljs-comment\">#确认密码</span><br>user.password_confirmation=<span class=\"hljs-string\">&#x27;xusenhao&#x27;</span><br><span class=\"hljs-comment\">#保存</span><br>user.save!<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"配置邮件服务\"><a href=\"#配置邮件服务\" class=\"headerlink\" title=\"配置邮件服务\"></a>配置邮件服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">### Email Settings</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;gitlab_email_enabled&#x27;</span>] = <span class=\"hljs-literal\">true</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;gitlab_email_from&#x27;</span>] = <span class=\"hljs-string\">&#x27;你的QQ邮箱&#x27;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;gitlab_email_display_name&#x27;</span>] = <span class=\"hljs-string\">&#x27;陈洋&#x27;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;gitlab_email_reply_to&#x27;</span>] = <span class=\"hljs-string\">&#x27;你的QQ邮箱&#x27;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;gitlab_email_subject_suffix&#x27;</span>] = <span class=\"hljs-string\">&#x27;&#x27;</span><br><br><br><span class=\"hljs-comment\">### GitLab email server settings</span><br><span class=\"hljs-comment\">###! Docs: https://docs.gitlab.com/omnibus/settings/smtp.html</span><br><span class=\"hljs-comment\">###! **Use smtp instead of sendmail/postfix.**</span><br><br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_enable&#x27;</span>] = <span class=\"hljs-literal\">true</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_address&#x27;</span>] = <span class=\"hljs-string\">&quot;smtp.qq.com&quot;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_port&#x27;</span>] = 465 <br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_user_name&#x27;</span>] = <span class=\"hljs-string\">&quot;你的QQ邮箱&quot;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_password&#x27;</span>] = <span class=\"hljs-string\">&quot;授权码，不是邮箱密码&quot;</span> <br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_domain&#x27;</span>] = <span class=\"hljs-string\">&quot;smtp.qq.com&quot;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_authentication&#x27;</span>] = <span class=\"hljs-string\">&quot;login&quot;</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_enable_starttls_auto&#x27;</span>] = <span class=\"hljs-literal\">true</span><br>gitlab_rails[<span class=\"hljs-string\">&#x27;smtp_tls&#x27;</span>] = <span class=\"hljs-literal\">true</span><br><br><span class=\"hljs-comment\">#重启服务</span><br>docker restart senhao_gitlab<br><span class=\"hljs-comment\">#测试邮件发送</span><br>root@192:/<span class=\"hljs-comment\"># gitlab-rails console</span><br>irb(main):002:0&gt; Notify.test_email(<span class=\"hljs-string\">&#x27;961363629@qq.com&#x27;</span>, <span class=\"hljs-string\">&#x27;Message Subject&#x27;</span>, <span class=\"hljs-string\">&#x27;Message Body&#x27;</span>).deliver_now<br><br><span class=\"hljs-comment\">#注意：</span><br><span class=\"hljs-comment\">#测试邮件时报错501</span><br>Net::SMTPSyntaxError: 501 mail from address must be same as authorization user<br><br>原因：配置文件gitlab.rb中<span class=\"hljs-comment\">### Email Settings没有设置邮箱地址，意思就是发送邮件的地址和SMTP认证的账号必须一致</span><br>解决办法：配置好<span class=\"hljs-comment\">### Email Settings即可</span><br><br><span class=\"hljs-comment\">#测试邮件时报错SSLError</span><br>原因：此类报错通常是SMTP服务器没有使用SSL，但是配置却开启了<br>解决办法：注释掉以下配置<br><span class=\"hljs-comment\"># gitlab_rails[&#x27;smtp_enable_starttls_auto&#x27;] = true</span><br><span class=\"hljs-comment\"># gitlab_rails[&#x27;smtp_tls&#x27;] = true</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装Harbor\"><a href=\"#Docker安装Harbor\" class=\"headerlink\" title=\"Docker安装Harbor\"></a>Docker安装Harbor</h2><blockquote>\n<p>依赖docker-compose</p>\n</blockquote>\n<h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">https://github.com/goharbor/harbor/releases/download/v2.4.1/harbor-online-installer-v2.4.1.tgz<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">tar -zxvf harbor-online-installer-v2.3.1.tgz -C /usr/local/<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"修改文件\"><a href=\"#修改文件\" class=\"headerlink\" title=\"修改文件\"></a>修改文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cp</span> harbor.yml.tmpl harbor.yml<br>vim harbor.yml<br></code></pre></td></tr></table></figure>\n\n<p>修改hostname参数为本机IP或域名</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">./install.sh<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动和重启\"><a href=\"#启动和重启\" class=\"headerlink\" title=\"启动和重启\"></a>启动和重启</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 停止Harbor</span><br>docker-compose down -v<br><br><span class=\"hljs-comment\"># 重启Harbor</span><br>docker-compose up -d<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Docker配置\"><a href=\"#Docker配置\" class=\"headerlink\" title=\"Docker配置\"></a>Docker配置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#编辑文件</span><br>vim /etc/docker/daemon.json<br><span class=\"hljs-comment\">#添加</span><br><span class=\"hljs-string\">&quot;insecure-registries&quot;</span>: [<span class=\"hljs-string\">&quot;[ip]:[port]&quot;</span>]<br><span class=\"hljs-comment\">#重启</span><br>systemctl daemon-reload<br>systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装Jenkins\"><a href=\"#Docker安装Jenkins\" class=\"headerlink\" title=\"Docker安装Jenkins\"></a>Docker安装Jenkins</h2><h3 id=\"下载镜像-6\"><a href=\"#下载镜像-6\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull jenkins/jenkins<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"创建文件夹\"><a href=\"#创建文件夹\" class=\"headerlink\" title=\"创建文件夹\"></a>创建文件夹</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">mkdir</span> -p /home/docker/jenkins_mount<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"授权\"><a href=\"#授权\" class=\"headerlink\" title=\"授权\"></a>授权</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">chmod</span> 777 /home/docker/jenkins_mount<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动-4\"><a href=\"#启动-4\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d -p 10240:8080 -p 10241:50000 \\<br>-v /data/docker/jenkins_mount:/var/jenkins_home \\<br>-v /etc/localtime:/etc/localtime \\<br>--restart always \\<br>--name jenkins jenkins/jenkins<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h3><p>访问ip:10240 可以修改映射端口</p>\n<h2 id=\"Docker安装RabbitMQ\"><a href=\"#Docker安装RabbitMQ\" class=\"headerlink\" title=\"Docker安装RabbitMQ\"></a>Docker安装RabbitMQ</h2><h3 id=\"启动-5\"><a href=\"#启动-5\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d --name rabbitmq \\<br>-p 5672:5672 -p 15672:15672  \\<br>--restart always \\<br>--hostname myRabbit \\<br>-e RABBITMQ_DEFAULT_VHOST=my_vhost  \\<br>-e RABBITMQ_DEFAULT_USER=admin \\<br>-e RABBITMQ_DEFAULT_PASS=admin \\<br>rabbitmq:management<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装Kafka\"><a href=\"#Docker安装Kafka\" class=\"headerlink\" title=\"Docker安装Kafka\"></a>Docker安装Kafka</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d --restart=always --name kafka \\<br>-p 9092:9092 \\<br>-e KAFKA_BROKER_ID=0 \\<br>-e KAFKA_ZOOKEEPER_CONNECT=10.1.52.149:2181 \\<br>-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://10.1.52.149:9092 \\<br>-e KAFKA_LISTENERS=PLAINTEXT://:9092 \\<br>wurstmeister/kafka<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Kafka测试\"><a href=\"#Kafka测试\" class=\"headerlink\" title=\"Kafka测试\"></a>Kafka测试</h3><h4 id=\"单机\"><a href=\"#单机\" class=\"headerlink\" title=\"单机\"></a>单机</h4><p>使用docker启动Kafka.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#进入到/opt/kafka/bin目录</span><br><span class=\"hljs-built_in\">cd</span> /opt/kafka/bin<br><span class=\"hljs-comment\">#1. 创建topic</span><br>./kafka-topics.sh --create --zookeeper <span class=\"hljs-variable\">$KAFKA_ZOOKEEPER_CONNECT</span> --replication-factor 1 --partitions 1 --topic test-topic<br><span class=\"hljs-comment\">#2. 查看 topic</span><br>./kafka-topics.sh --list --zookeeper <span class=\"hljs-variable\">$KAFKA_ZOOKEEPER_CONNECT</span><br><span class=\"hljs-comment\">#3. 运行一个生产者</span><br>./kafka-console-producer.sh --broker-list localhost:9092 --topic test-topic<br><span class=\"hljs-comment\">#4. 运行一个消费者</span><br>./kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test-topic --from-beginning<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装rancher-server\"><a href=\"#Docker安装rancher-server\" class=\"headerlink\" title=\"Docker安装rancher/server\"></a>Docker安装rancher/server</h2><h3 id=\"启动-6\"><a href=\"#启动-6\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -di --name=rancher -p 9090:8080 rancher/server<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装zookeeper\"><a href=\"#Docker安装zookeeper\" class=\"headerlink\" title=\"Docker安装zookeeper\"></a>Docker安装zookeeper</h2><h3 id=\"下载镜像-7\"><a href=\"#下载镜像-7\" class=\"headerlink\" title=\"下载镜像\"></a>下载镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull zookeeper<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"单机部署\"><a href=\"#单机部署\" class=\"headerlink\" title=\"单机部署\"></a>单机部署</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d -p 2181:2181 \\<br>-v /data/docker/zoo/data:/data \\<br>-v /data/docker/zoo/datalog:/datalog \\<br>-v /data/docker/zoo/logs:/logs \\<br>--name zookeeper \\<br>--restart always zookeeper<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker安装Spark\"><a href=\"#Docker安装Spark\" class=\"headerlink\" title=\"Docker安装Spark\"></a>Docker安装Spark</h2><blockquote>\n<p>依赖docker-compose</p>\n</blockquote>\n<h3 id=\"pull-image\"><a href=\"#pull-image\" class=\"headerlink\" title=\"pull image\"></a>pull image</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker pull singularities/spark<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"创建docker-compose\"><a href=\"#创建docker-compose\" class=\"headerlink\" title=\"创建docker-compose\"></a>创建docker-compose</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">version:</span> <span class=\"hljs-string\">&quot;2&quot;</span><br> <br><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">master:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">singularities/spark</span><br>    <span class=\"hljs-attr\">command:</span> <span class=\"hljs-string\">start-spark</span> <span class=\"hljs-string\">master</span><br>    <span class=\"hljs-attr\">hostname:</span> <span class=\"hljs-string\">master</span><br>    <span class=\"hljs-attr\">ports:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;6066:6066&quot;</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;7070:7070&quot;</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;8080:8080&quot;</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;50070:50070&quot;</span><br>  <span class=\"hljs-attr\">worker:</span><br>    <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">singularities/spark</span><br>    <span class=\"hljs-attr\">command:</span> <span class=\"hljs-string\">start-spark</span> <span class=\"hljs-string\">worker</span> <span class=\"hljs-string\">master</span><br>    <span class=\"hljs-attr\">environment:</span><br>      <span class=\"hljs-attr\">SPARK_WORKER_CORES:</span> <span class=\"hljs-number\">1</span><br>      <span class=\"hljs-attr\">SPARK_WORKER_MEMORY:</span> <span class=\"hljs-string\">2g</span><br>    <span class=\"hljs-attr\">links:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">master</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动-7\"><a href=\"#启动-7\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose up -d<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看运行状态\"><a href=\"#查看运行状态\" class=\"headerlink\" title=\"查看运行状态\"></a>查看运行状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose ps<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"停止\"><a href=\"#停止\" class=\"headerlink\" title=\"停止\"></a>停止</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose stop<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose <span class=\"hljs-built_in\">rm</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker部署Minio\"><a href=\"#Docker部署Minio\" class=\"headerlink\" title=\"Docker部署Minio\"></a>Docker部署Minio</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run \\<br>--name minio \\<br>-d --restart=always \\<br>-p 9000:9000 -p 9001:9001 \\<br>-e <span class=\"hljs-string\">&quot;MINIO_ROOT_USER=minio&quot;</span> \\<br>-e <span class=\"hljs-string\">&quot;MINIO_ROOT_PASSWORD=password&quot;</span> \\<br>-v /data/minio/data:/data \\<br>-v /data/minio/config:/root/.minio minio/minio server /data \\<br>--console-address <span class=\"hljs-string\">&quot;:9001&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Nginx反代Minio\"><a href=\"#Nginx反代Minio\" class=\"headerlink\" title=\"Nginx反代Minio\"></a>Nginx反代Minio</h3><p>nginx反代后直接使用域名无法访问对象资源(访问资源对象端口为9000)，需要添加Buckets代理</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">server</span> &#123;<br><span class=\"hljs-attribute\">listen</span>       <span class=\"hljs-number\">443</span> ssl;<br><span class=\"hljs-attribute\">server_name</span>  domain.com;<br><br><span class=\"hljs-attribute\">ssl_certificate</span> /etc/nginx/ssl/nginx.crt;<br><span class=\"hljs-attribute\">ssl_certificate_key</span> /etc/nginx/ssl/nginx.key;<br><span class=\"hljs-attribute\">ssl_session_timeout</span> <span class=\"hljs-number\">5m</span>;<br><span class=\"hljs-attribute\">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;<br><span class=\"hljs-attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"hljs-number\">1</span> TLSv1.<span class=\"hljs-number\">2</span>;<br><span class=\"hljs-attribute\">ssl_prefer_server_ciphers</span> <span class=\"hljs-literal\">on</span>;<br><span class=\"hljs-attribute\">client_max_body_size</span> <span class=\"hljs-number\">0</span>;<br><br>        <span class=\"hljs-section\">location</span> / &#123;<br>                <span class=\"hljs-attribute\">proxy_pass</span> http://domain.com:9001;<br>                <span class=\"hljs-attribute\">proxy_set_header</span> Host <span class=\"hljs-variable\">$http_host</span>;<br>                <span class=\"hljs-attribute\">proxy_http_version</span>      <span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span>;<br>                <span class=\"hljs-attribute\">proxy_set_header</span> Upgrade <span class=\"hljs-variable\">$http_upgrade</span>;<br>                <span class=\"hljs-attribute\">proxy_set_header</span> Connection <span class=\"hljs-string\">&quot;upgrade&quot;</span>;<br><br>        &#125;<br><br>&#125;<br><span class=\"hljs-section\">server</span> &#123;<br>    <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">80</span>;<br>    <span class=\"hljs-attribute\">server_name</span> domain.com;<br>    <span class=\"hljs-attribute\">rewrite</span><span class=\"hljs-regexp\"> ^(.*)$</span> https://<span class=\"hljs-variable\">$&#123;server_name&#125;</span><span class=\"hljs-variable\">$1</span> <span class=\"hljs-literal\">permanent</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker-搭建一个短链服务\"><a href=\"#Docker-搭建一个短链服务\" class=\"headerlink\" title=\"Docker 搭建一个短链服务\"></a>Docker 搭建一个短链服务</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker run -itd --name shorter \\<br>--restart always \\<br>-e DB_DRIVE=redis \\<br>-e REDIS_DRIVE=single \\<br>-e REDIS_HOSTS=127.0.0.1:6379 \\<br>-e REDIS_PASSWORD=123456 \\<br>-e REDIS_DB=1 \\<br>-e SHORT_URI=example.com \\<br>-e LOG_PATH=/var/log/ \\<br>-e LOG_LEVEL=debug \\<br>-p 8080:8080 \\<br>dudulu/shorter:latest<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker拷贝\"><a href=\"#Docker拷贝\" class=\"headerlink\" title=\"Docker拷贝\"></a>Docker拷贝</h2><h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">cp</span> 容器进程ID:文件/文件夹路径  主机目的路径<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"例\"><a href=\"#例\" class=\"headerlink\" title=\"例\"></a>例</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">cp</span> 017149848c20:/home/ /home/user/<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker打包与提交\"><a href=\"#Docker打包与提交\" class=\"headerlink\" title=\"Docker打包与提交\"></a>Docker打包与提交</h2><h3 id=\"容器\"><a href=\"#容器\" class=\"headerlink\" title=\"容器\"></a>容器</h3><h4 id=\"语法-1\"><a href=\"#语法-1\" class=\"headerlink\" title=\"语法\"></a>语法</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"例-1\"><a href=\"#例-1\" class=\"headerlink\" title=\"例\"></a>例</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker commit -a <span class=\"hljs-string\">&quot;dark&quot;</span> -m <span class=\"hljs-string\">&quot;mysql&quot;</span> a568eff33275 mysql-dark:1.0<br></code></pre></td></tr></table></figure>\n\n<p>OPTIONS说明：-a :提交的镜像作者； -c :使用Dockerfile指令来创建镜像； -m :提交时的说明文字；-p :在commit时，将容器暂停。此时，docker images 就会出现打包好的镜像</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">export</span> 98ca36&gt; ubuntu.tar<br><span class=\"hljs-built_in\">cat</span> ubuntu.tar | sudo docker import - ubuntu:import<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"镜像\"><a href=\"#镜像\" class=\"headerlink\" title=\"镜像\"></a>镜像</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker save ubuntu:load&gt;/root/ubuntu.tar<br>docker load&lt;ubuntu.tar<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"批量处理\"><a href=\"#批量处理\" class=\"headerlink\" title=\"批量处理\"></a>批量处理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#打包全部镜像</span><br>docker save $(docker images | grep -v REPOSITORY | awk <span class=\"hljs-string\">&#x27;BEGIN&#123;OFS=&quot;:&quot;;ORS=&quot; &quot;&#125;&#123;print $1,$2&#125;&#x27;</span>) -o harborAll.tar<br><span class=\"hljs-comment\">#加载所有镜像</span><br>docker load -i harborAll.tar<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker-清理\"><a href=\"#Docker-清理\" class=\"headerlink\" title=\"Docker 清理\"></a>Docker 清理</h2><h3 id=\"容器清理\"><a href=\"#容器清理\" class=\"headerlink\" title=\"容器清理\"></a>容器清理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#删除停止运行的容器</span><br>docker container prune<br><span class=\"hljs-comment\">#删除所有容器(包括停止的、正在运行的)</span><br>docker <span class=\"hljs-built_in\">rm</span> -f $(docker ps -aq)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"镜像清理\"><a href=\"#镜像清理\" class=\"headerlink\" title=\"镜像清理\"></a>镜像清理</h3> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#可以列出所有悬挂状态的镜像</span><br>docker image <span class=\"hljs-built_in\">ls</span> -f dangling=<span class=\"hljs-literal\">true</span><br><span class=\"hljs-comment\">#删除悬挂状态的镜像</span><br>docker image <span class=\"hljs-built_in\">rm</span> $(docker image <span class=\"hljs-built_in\">ls</span> -f dangling=<span class=\"hljs-literal\">true</span> -q)<br><span class=\"hljs-comment\">#清除悬挂镜像</span><br>docker image prune<br><span class=\"hljs-comment\">#删除所有镜像。但正在被容器使用的镜像无法删除。</span><br>docker image <span class=\"hljs-built_in\">rm</span> $(docker image <span class=\"hljs-built_in\">ls</span> -q) <br><span class=\"hljs-comment\">#清除none版本镜像</span><br>docker rmi $(docker images | grep <span class=\"hljs-string\">&quot;none&quot;</span> | awk <span class=\"hljs-string\">&#x27;&#123;print $3&#125;&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"数据卷清理\"><a href=\"#数据卷清理\" class=\"headerlink\" title=\"数据卷清理\"></a>数据卷清理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#删除不再使用的数据卷</span><br>docker volume prune<br><span class=\"hljs-comment\">#删除不再使用的数据卷</span><br>docker volume <span class=\"hljs-built_in\">rm</span> $(docker volume <span class=\"hljs-built_in\">ls</span> -q) <br></code></pre></td></tr></table></figure>\n\n<h3 id=\"缓存清理\"><a href=\"#缓存清理\" class=\"headerlink\" title=\"缓存清理\"></a>缓存清理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#删除 build cache</span><br>docker builder prune<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"一键清理\"><a href=\"#一键清理\" class=\"headerlink\" title=\"一键清理\"></a>一键清理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">注意，这两个命令会把你暂时关闭的容器，以及暂时没有用到的 Docker 镜像都删掉了<br><span class=\"hljs-comment\">#查看 Docker 的磁盘使用情况</span><br>docker system <span class=\"hljs-built_in\">df</span><br><span class=\"hljs-comment\">#清理磁盘，删除关闭的容器、无用的数据卷和网络，以及 none 镜像</span><br>docker system prune<br><span class=\"hljs-comment\">#清理得更加彻底，可以将没有容器使用 Docker镜像都删掉</span><br>docker system prune -a<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker迁移\"><a href=\"#Docker迁移\" class=\"headerlink\" title=\"Docker迁移\"></a>Docker迁移</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#查看默认存储路径</span><br>docker info |grep  <span class=\"hljs-string\">&quot;Docker Root Dir&quot;</span><br><span class=\"hljs-comment\">#停止docker服务</span><br>systemctl stop docker<br><span class=\"hljs-comment\">#新建文件夹</span><br><span class=\"hljs-built_in\">mkdir</span> /home/docker<br><span class=\"hljs-comment\">#迁移文件</span><br>rsync -r -avz /var/lib/docker  /home/docker/<br><span class=\"hljs-comment\">#配置docker服务</span><br>vi /usr/lib/systemd/system/docker.service<br><br>[Service]<br>ExecStart=/usr/bin/dockerd  --graph=/home1/docker/lib/docker<br><span class=\"hljs-comment\">#重启服务</span><br>systemctl daemon-reload &amp;&amp; systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Docker-Proxy\"><a href=\"#Docker-Proxy\" class=\"headerlink\" title=\"Docker Proxy\"></a>Docker Proxy</h2><p>参考地址：<a href=\"https://blog.csdn.net/qq_39698985/article/details/123748820\">Docker Proxy</a></p>\n<p>在执行<code>docker pull</code>时，是由守护进程<code>dockerd</code>来执行。因此，代理需要配在dockerd的环境中。而这个环境，则是受systemd所管控，因此实际是systemd的配置。</p>\n<h3 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#创建文件</span><br><span class=\"hljs-built_in\">mkdir</span> -p /etc/systemd/system/docker.service.d<br><span class=\"hljs-built_in\">touch</span> /etc/systemd/system/docker.service.d/proxy.conf<br><span class=\"hljs-comment\">#配置proxy.conf</span><br>[Service]<br>Environment=<span class=\"hljs-string\">&quot;HTTP_PROXY=http://proxy.example.com:8080/&quot;</span><br>Environment=<span class=\"hljs-string\">&quot;HTTPS_PROXY=http://proxy.example.com:8080/&quot;</span><br>Environment=<span class=\"hljs-string\">&quot;NO_PROXY=localhost,127.0.0.1,.example.com&quot;</span><br><span class=\"hljs-comment\">#重启</span><br>systemctl daemon-reload &amp;&amp; systemctl restart docker<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Container\"><a href=\"#Container\" class=\"headerlink\" title=\"Container\"></a>Container</h3><p>在容器运行阶段，如果需要代理上网，则需要配置 <code>~/.docker/config.json</code>。以下配置，只在Docker 17.07及以上版本生效。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">&#123;<br> <span class=\"hljs-string\">&quot;proxies&quot;</span>:<br> &#123;<br>   <span class=\"hljs-string\">&quot;default&quot;</span>:<br>   &#123;<br>     <span class=\"hljs-string\">&quot;httpProxy&quot;</span>: <span class=\"hljs-string\">&quot;http://proxy.example.com:8080&quot;</span>,<br>     <span class=\"hljs-string\">&quot;httpsProxy&quot;</span>: <span class=\"hljs-string\">&quot;http://proxy.example.com:8080&quot;</span>,<br>     <span class=\"hljs-string\">&quot;noProxy&quot;</span>: <span class=\"hljs-string\">&quot;localhost,127.0.0.1,.example.com&quot;</span><br>   &#125;<br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这个是用户级的配置，除了 proxies，docker login 等相关信息也会在其中。而且还可以配置信息展示的格式、插件参数等。</p>\n<p>此外，容器的网络代理，也可以直接在其运行时通过 -e 注入 http_proxy 等环境变量。这两种方法分别适合不同场景。config.json 非常方便，默认在所有配置修改后启动的容器生效，适合个人开发环境。在CI/CD的自动构建环境、或者实际上线运行的环境中，这种方法就不太合适，用 -e 注入这种显式配置会更好，减轻对构建、部署环境的依赖。当然，在这些环境中，最好用良好的设计避免配置代理上网。</p>\n<h3 id=\"Docker-Build\"><a href=\"#Docker-Build\" class=\"headerlink\" title=\"Docker Build\"></a>Docker Build</h3><p>虽然 <code>docker build</code> 的本质，也是启动一个容器，但是环境会略有不同，用户级配置无效。在构建时，需要注入 http_proxy 等参数。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker build . \\<br>    --build-arg <span class=\"hljs-string\">&quot;HTTP_PROXY=http://proxy.example.com:8080/&quot;</span> \\<br>    --build-arg <span class=\"hljs-string\">&quot;HTTPS_PROXY=http://proxy.example.com:8080/&quot;</span> \\<br>    --build-arg <span class=\"hljs-string\">&quot;NO_PROXY=localhost,127.0.0.1,.example.com&quot;</span> \\<br>    -t your/image:tag<br></code></pre></td></tr></table></figure>\n\n<p>注意：无论是 docker run 还是 docker build，默认是网络隔绝的。如果代理使用的是 localhost:3128 这类，则会无效。这类仅限本地的代理，必须加上 –network host 才能正常使用。而一般则需要配置代理的外部IP，而且代理本身要开启 Gateway 模式。<br>重启生效</p>\n<p>代理配置完成后，reboot 重启当然可以生效，但不重启也行。</p>\n<p>docker build 代理是在执行前设置的，所以修改后，下次执行立即生效。Container 代理的修改也是立即生效的，但是只针对以后启动的 Container，对已经启动的 Container 无效。</p>\n<p>dockerd 代理的修改比较特殊，它实际上是改 systemd 的配置，因此需要重载 systemd 并重启 dockerd 才能生效。</p>\n"},{"title":"Etcd","date":"2022-11-11T04:58:05.000Z","description":"etcd简介及安装.","_content":"\n# ETCD\n\n## ETCD简介\n\netcd是由CoreOS团队发的一个分布式一致性的KV存储系统，可用于服务注册发现和共享配置，随着CoreOS和Kubernetes等项目在开源社区日益火热，它们项目中都用到的etcd组件作为一个高可用强一致性的服务发现存储仓库，渐渐为开发人员所关注。在云计算时代，如何让服务快速透明地接入到计算集群中，如何让共享配置信息快速被集群中的所有机器发现，更为重要的是，如何构建这样一套高可用、安全、易于部署以及响应快速的服务集群，已经成为了迫切需要解决的问题。\n\nGitHub地址：[GitHub](https://github.com/etcd-io/etcd)\n\n镜像仓库地址  [coreos/etcd](https://quay.io/repository/coreos/etcd?tab=tags&tag=latest)\n\n官方文档：[Quickstart | etcd](https://etcd.io/docs/v3.5/quickstart/)\n\n### 优点\n\netcd作为一个受到ZooKeeper与doozer启发而催生的项目，除了拥有与之类似的功能外，更专注于以下四点：\n\n**简单：**安装配置简单，而且提供了 HTTP API 进行交互，使用也很简单 \n\n**安全：**支持 SSL 证书验证 \n\n**快速：**根据官方提供的 benchmark 数据，单实例支持每秒 2k+ 读操作\n\n**可靠：**采用 raft 算法，实现分布式系统数据的可用性和一致性\n\n## 安装ETCD\n\n```\n参数说明： \n● –data-dir 指定节点的数据存储目录，若不指定，则默认是当前目录。这些数据包括节点ID，集群ID，集群初始化配置，Snapshot文件，若未指 定–wal-dir，还会存储WAL文件 \n● –wal-dir 指定节点的was文件存储目录，若指定了该参数，wal文件会和其他数据文件分开存储 \n● –name 节点名称 \n● –initial-advertise-peer-urls 告知集群其他节点的URL，tcp2380端口用于集群通信 \n● –listen-peer-urls 监听URL，用于与其他节点通讯 \n● –advertise-client-urls 告知客户端的URL, 也就是服务的URL，tcp2379端口用于监听客户端请求 \n● –initial-cluster-token 集群的ID \n● –initial-cluster 集群中所有节点 \n● –initial-cluster-state 集群状态，new为新创建集群，existing为已存在的集群\n```\n\n### kubernetes\n\n参考地址：[传送门](https://zhuanlan.zhihu.com/p/373016748)\n\n#### 部署etcd集群实例\n\n```yaml\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: etcd\n  labels:\n    component: etcd\nspec:\n  serviceName: etcd\n  replicas: 3\n  selector:\n    matchLabels:\n      component: etcd\n  template:\n    metadata:\n      name: etcd\n      labels:\n        component: etcd\n    spec:\n      containers:\n        - name: etcd\n          image: quay.io/coreos/etcd:latest\n          imagePullPolicy: IfNotPresent\n          env:\n            - name: CLUSTER_SIZE\n              value: \"3\"\n            - name: SET_NAME\n              value: \"etcd\"\n          command:\n            - /bin/sh\n            - -ecx\n            - |\n              IP=$(hostname -i)\n              PEERS=\"\"\n              for i in $(seq 0 $((${CLUSTER_SIZE} - 1))); do\n                  PEERS=\"${PEERS}${PEERS:+,}${SET_NAME}-${i}=http://${SET_NAME}-${i}.${SET_NAME}:2380\"\n              done\n              exec etcd --name ${HOSTNAME} \\\n                --listen-peer-urls http://${IP}:2380 \\\n                --listen-client-urls http://${IP}:2379,http://127.0.0.1:2379 \\\n                --advertise-client-urls http://${HOSTNAME}.${SET_NAME}:2379 \\\n                --initial-advertise-peer-urls http://${HOSTNAME}.${SET_NAME}:2380 \\\n                --initial-cluster-token etcd-cluster-1 \\\n                --initial-cluster ${PEERS} \\\n                --initial-cluster-state new \\\n                --data-dir /var/run/etcd/default.etcd\n          ports:\n            - containerPort: 2379\n              name: client\n            - containerPort: 2380\n              name: peer\n          volumeMounts:\n            - name: etcd-storage\n              mountPath: /var/run/etcd/default.etcd\n      volumes:\n        - name: etcd-storage\n          emptyDir: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: etcd\n  annotations:\n    # Create endpoints also if the related pod isn't ready\n    service.alpha.kubernetes.io/tolerate-unready-endpoints: \"true\"\nspec:\n  ports:\n    - port: 2379\n      name: client\n    - port: 2380\n      name: peer\n  clusterIP: None\n  selector:\n    component: etcd\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: etcd-client\nspec:\n  ports:\n    - name: http\n      nodePort: 30453\n      port: 2379\n      targetPort: 2379\n      protocol: TCP\n  type: NodePort\n  selector:\n    component: etcd\n```\n\n#### 部署WebUI\n\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: e3w-configmap\n  labels:\n    config: e3w.ini\ndata:\n  e3w-config.default.ini: |\n    [app]\n    port=8080\n    auth=false\n    [etcd]\n    root_key=root\n    dir_value=\n    addr=etcd-0.etcd.default.svc.cluster.local:2379,etcd-1.etcd.default.svc.cluster.local:2379,etcd-2.etcd.default.svc.cluster.local:2379\n    username=\n    password=\n    cert_file=\n    key_file=\n    ca_file=\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: e3w-deployment\n  labels:\n    app: e3w\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: etcd-client-e3w\n  template:\n    metadata:\n      labels:\n        app: etcd-client-e3w\n    spec:\n      containers:\n        - name: e3w-app-container\n          image: soyking/e3w:latest\n          imagePullPolicy: IfNotPresent\n          ports:\n            - name: e3w-server-port\n              containerPort: 8080\n          volumeMounts:\n            - name: e3w-configmap-volume\n              mountPath: /app/conf/config.default.ini\n              subPath: config.default.ini\n      volumes:\n        - name: e3w-configmap-volume\n          configMap:\n            name: e3w-configmap\n            items:\n              - key: e3w-config.default.ini\n                path: config.default.ini\n---\nkind: Service\napiVersion: v1\nmetadata:\n  name: e3w-service\nspec:\n  type: NodePort\n  selector:\n    app: etcd-client-e3w\n  ports:\n    - protocol: TCP\n      targetPort: e3w-server-port\n      nodePort: 30081\n      port: 80\n```\n\nWebUi部署界面：访问IP:PORT\n\n![image-20221110143044365](https://oss.senhao.top/image/etcd/WebUi.png)\n\n\n\n## ETCD命令\n\n> 查看版本信息\n\n```bash\netcdctl version\n```\n\n> 查看集群成员信息\n\n```bash\netcdctl member list\n```\n\n> 查看集群状态\n\n```bash\netcdctl cluster-health\n```\n\n## ETCD读写操作\n\n### 写入\n\n```bash\netcdctl put greeting \"Hello, etcd\"\n\n/ # etcdctl put greeting \"Hello, etcd\"\nNo help topic for 'put'\n/ # export ETCDCTL_API=3\n/ # etcdctl put greeting \"Hello, etcd\"\nOK\n```\n\n如遇到`No help topic for 'put'` 的错误信息，执行`export ETCDCTL_API=3`即可解决.\n\n### 读取\n\n```bash\n/ # etcdctl get greeting\ngreeting\nHello, etcd\n```\n","source":"_posts/etcd.md","raw":"---\ntitle: Etcd\ndate: 2022-11-11 12:58:05\ntags: kubernetes\ncategories: kubernetes\ndescription: etcd简介及安装.\n---\n\n# ETCD\n\n## ETCD简介\n\netcd是由CoreOS团队发的一个分布式一致性的KV存储系统，可用于服务注册发现和共享配置，随着CoreOS和Kubernetes等项目在开源社区日益火热，它们项目中都用到的etcd组件作为一个高可用强一致性的服务发现存储仓库，渐渐为开发人员所关注。在云计算时代，如何让服务快速透明地接入到计算集群中，如何让共享配置信息快速被集群中的所有机器发现，更为重要的是，如何构建这样一套高可用、安全、易于部署以及响应快速的服务集群，已经成为了迫切需要解决的问题。\n\nGitHub地址：[GitHub](https://github.com/etcd-io/etcd)\n\n镜像仓库地址  [coreos/etcd](https://quay.io/repository/coreos/etcd?tab=tags&tag=latest)\n\n官方文档：[Quickstart | etcd](https://etcd.io/docs/v3.5/quickstart/)\n\n### 优点\n\netcd作为一个受到ZooKeeper与doozer启发而催生的项目，除了拥有与之类似的功能外，更专注于以下四点：\n\n**简单：**安装配置简单，而且提供了 HTTP API 进行交互，使用也很简单 \n\n**安全：**支持 SSL 证书验证 \n\n**快速：**根据官方提供的 benchmark 数据，单实例支持每秒 2k+ 读操作\n\n**可靠：**采用 raft 算法，实现分布式系统数据的可用性和一致性\n\n## 安装ETCD\n\n```\n参数说明： \n● –data-dir 指定节点的数据存储目录，若不指定，则默认是当前目录。这些数据包括节点ID，集群ID，集群初始化配置，Snapshot文件，若未指 定–wal-dir，还会存储WAL文件 \n● –wal-dir 指定节点的was文件存储目录，若指定了该参数，wal文件会和其他数据文件分开存储 \n● –name 节点名称 \n● –initial-advertise-peer-urls 告知集群其他节点的URL，tcp2380端口用于集群通信 \n● –listen-peer-urls 监听URL，用于与其他节点通讯 \n● –advertise-client-urls 告知客户端的URL, 也就是服务的URL，tcp2379端口用于监听客户端请求 \n● –initial-cluster-token 集群的ID \n● –initial-cluster 集群中所有节点 \n● –initial-cluster-state 集群状态，new为新创建集群，existing为已存在的集群\n```\n\n### kubernetes\n\n参考地址：[传送门](https://zhuanlan.zhihu.com/p/373016748)\n\n#### 部署etcd集群实例\n\n```yaml\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: etcd\n  labels:\n    component: etcd\nspec:\n  serviceName: etcd\n  replicas: 3\n  selector:\n    matchLabels:\n      component: etcd\n  template:\n    metadata:\n      name: etcd\n      labels:\n        component: etcd\n    spec:\n      containers:\n        - name: etcd\n          image: quay.io/coreos/etcd:latest\n          imagePullPolicy: IfNotPresent\n          env:\n            - name: CLUSTER_SIZE\n              value: \"3\"\n            - name: SET_NAME\n              value: \"etcd\"\n          command:\n            - /bin/sh\n            - -ecx\n            - |\n              IP=$(hostname -i)\n              PEERS=\"\"\n              for i in $(seq 0 $((${CLUSTER_SIZE} - 1))); do\n                  PEERS=\"${PEERS}${PEERS:+,}${SET_NAME}-${i}=http://${SET_NAME}-${i}.${SET_NAME}:2380\"\n              done\n              exec etcd --name ${HOSTNAME} \\\n                --listen-peer-urls http://${IP}:2380 \\\n                --listen-client-urls http://${IP}:2379,http://127.0.0.1:2379 \\\n                --advertise-client-urls http://${HOSTNAME}.${SET_NAME}:2379 \\\n                --initial-advertise-peer-urls http://${HOSTNAME}.${SET_NAME}:2380 \\\n                --initial-cluster-token etcd-cluster-1 \\\n                --initial-cluster ${PEERS} \\\n                --initial-cluster-state new \\\n                --data-dir /var/run/etcd/default.etcd\n          ports:\n            - containerPort: 2379\n              name: client\n            - containerPort: 2380\n              name: peer\n          volumeMounts:\n            - name: etcd-storage\n              mountPath: /var/run/etcd/default.etcd\n      volumes:\n        - name: etcd-storage\n          emptyDir: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: etcd\n  annotations:\n    # Create endpoints also if the related pod isn't ready\n    service.alpha.kubernetes.io/tolerate-unready-endpoints: \"true\"\nspec:\n  ports:\n    - port: 2379\n      name: client\n    - port: 2380\n      name: peer\n  clusterIP: None\n  selector:\n    component: etcd\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: etcd-client\nspec:\n  ports:\n    - name: http\n      nodePort: 30453\n      port: 2379\n      targetPort: 2379\n      protocol: TCP\n  type: NodePort\n  selector:\n    component: etcd\n```\n\n#### 部署WebUI\n\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: e3w-configmap\n  labels:\n    config: e3w.ini\ndata:\n  e3w-config.default.ini: |\n    [app]\n    port=8080\n    auth=false\n    [etcd]\n    root_key=root\n    dir_value=\n    addr=etcd-0.etcd.default.svc.cluster.local:2379,etcd-1.etcd.default.svc.cluster.local:2379,etcd-2.etcd.default.svc.cluster.local:2379\n    username=\n    password=\n    cert_file=\n    key_file=\n    ca_file=\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: e3w-deployment\n  labels:\n    app: e3w\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: etcd-client-e3w\n  template:\n    metadata:\n      labels:\n        app: etcd-client-e3w\n    spec:\n      containers:\n        - name: e3w-app-container\n          image: soyking/e3w:latest\n          imagePullPolicy: IfNotPresent\n          ports:\n            - name: e3w-server-port\n              containerPort: 8080\n          volumeMounts:\n            - name: e3w-configmap-volume\n              mountPath: /app/conf/config.default.ini\n              subPath: config.default.ini\n      volumes:\n        - name: e3w-configmap-volume\n          configMap:\n            name: e3w-configmap\n            items:\n              - key: e3w-config.default.ini\n                path: config.default.ini\n---\nkind: Service\napiVersion: v1\nmetadata:\n  name: e3w-service\nspec:\n  type: NodePort\n  selector:\n    app: etcd-client-e3w\n  ports:\n    - protocol: TCP\n      targetPort: e3w-server-port\n      nodePort: 30081\n      port: 80\n```\n\nWebUi部署界面：访问IP:PORT\n\n![image-20221110143044365](https://oss.senhao.top/image/etcd/WebUi.png)\n\n\n\n## ETCD命令\n\n> 查看版本信息\n\n```bash\netcdctl version\n```\n\n> 查看集群成员信息\n\n```bash\netcdctl member list\n```\n\n> 查看集群状态\n\n```bash\netcdctl cluster-health\n```\n\n## ETCD读写操作\n\n### 写入\n\n```bash\netcdctl put greeting \"Hello, etcd\"\n\n/ # etcdctl put greeting \"Hello, etcd\"\nNo help topic for 'put'\n/ # export ETCDCTL_API=3\n/ # etcdctl put greeting \"Hello, etcd\"\nOK\n```\n\n如遇到`No help topic for 'put'` 的错误信息，执行`export ETCDCTL_API=3`即可解决.\n\n### 读取\n\n```bash\n/ # etcdctl get greeting\ngreeting\nHello, etcd\n```\n","slug":"etcd","published":1,"updated":"2022-12-22T12:24:39.155Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcwycosl000jh0u2520j0lmq","content":"<h1 id=\"ETCD\"><a href=\"#ETCD\" class=\"headerlink\" title=\"ETCD\"></a>ETCD</h1><h2 id=\"ETCD简介\"><a href=\"#ETCD简介\" class=\"headerlink\" title=\"ETCD简介\"></a>ETCD简介</h2><p>etcd是由CoreOS团队发的一个分布式一致性的KV存储系统，可用于服务注册发现和共享配置，随着CoreOS和Kubernetes等项目在开源社区日益火热，它们项目中都用到的etcd组件作为一个高可用强一致性的服务发现存储仓库，渐渐为开发人员所关注。在云计算时代，如何让服务快速透明地接入到计算集群中，如何让共享配置信息快速被集群中的所有机器发现，更为重要的是，如何构建这样一套高可用、安全、易于部署以及响应快速的服务集群，已经成为了迫切需要解决的问题。</p>\n<p>GitHub地址：<a href=\"https://github.com/etcd-io/etcd\">GitHub</a></p>\n<p>镜像仓库地址  <a href=\"https://quay.io/repository/coreos/etcd?tab=tags&tag=latest\">coreos/etcd</a></p>\n<p>官方文档：<a href=\"https://etcd.io/docs/v3.5/quickstart/\">Quickstart | etcd</a></p>\n<h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><p>etcd作为一个受到ZooKeeper与doozer启发而催生的项目，除了拥有与之类似的功能外，更专注于以下四点：</p>\n<p><strong>简单：</strong>安装配置简单，而且提供了 HTTP API 进行交互，使用也很简单 </p>\n<p><strong>安全：</strong>支持 SSL 证书验证 </p>\n<p><strong>快速：</strong>根据官方提供的 benchmark 数据，单实例支持每秒 2k+ 读操作</p>\n<p><strong>可靠：</strong>采用 raft 算法，实现分布式系统数据的可用性和一致性</p>\n<h2 id=\"安装ETCD\"><a href=\"#安装ETCD\" class=\"headerlink\" title=\"安装ETCD\"></a>安装ETCD</h2><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs pgsql\">参数说明： <br>● –data-dir 指定节点的数据存储目录，若不指定，则默认是当前目录。这些数据包括节点ID，集群ID，集群初始化配置，<span class=\"hljs-keyword\">Snapshot</span>文件，若未指 定–wal-dir，还会存储WAL文件 <br>● –wal-dir 指定节点的was文件存储目录，若指定了该参数，wal文件会和其他数据文件分开存储 <br>● –<span class=\"hljs-type\">name</span> 节点名称 <br>● –initial-advertise-peer-urls 告知集群其他节点的URL，tcp2380端口用于集群通信 <br>● –<span class=\"hljs-keyword\">listen</span>-peer-urls 监听URL，用于与其他节点通讯 <br>● –advertise-client-urls 告知客户端的URL, 也就是服务的URL，tcp2379端口用于监听客户端请求 <br>● –initial-<span class=\"hljs-keyword\">cluster</span>-token 集群的ID <br>● –initial-<span class=\"hljs-keyword\">cluster</span> 集群中所有节点 <br>● –initial-<span class=\"hljs-keyword\">cluster</span>-state 集群状态，<span class=\"hljs-built_in\">new</span>为新创建集群，existing为已存在的集群<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"kubernetes\"><a href=\"#kubernetes\" class=\"headerlink\" title=\"kubernetes\"></a>kubernetes</h3><p>参考地址：<a href=\"https://zhuanlan.zhihu.com/p/373016748\">传送门</a></p>\n<h4 id=\"部署etcd集群实例\"><a href=\"#部署etcd集群实例\" class=\"headerlink\" title=\"部署etcd集群实例\"></a>部署etcd集群实例</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">StatefulSet</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">etcd</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">etcd</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">serviceName:</span> <span class=\"hljs-string\">etcd</span><br>  <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">3</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">matchLabels:</span><br>      <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">etcd</span><br>  <span class=\"hljs-attr\">template:</span><br>    <span class=\"hljs-attr\">metadata:</span><br>      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">etcd</span><br>      <span class=\"hljs-attr\">labels:</span><br>        <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">etcd</span><br>    <span class=\"hljs-attr\">spec:</span><br>      <span class=\"hljs-attr\">containers:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">etcd</span><br>          <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">quay.io/coreos/etcd:latest</span><br>          <span class=\"hljs-attr\">imagePullPolicy:</span> <span class=\"hljs-string\">IfNotPresent</span><br>          <span class=\"hljs-attr\">env:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">CLUSTER_SIZE</span><br>              <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">&quot;3&quot;</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">SET_NAME</span><br>              <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">&quot;etcd&quot;</span><br>          <span class=\"hljs-attr\">command:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/bin/sh</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">-ecx</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">|</span><br><span class=\"hljs-string\">              IP=$(hostname -i)</span><br><span class=\"hljs-string\">              PEERS=&quot;&quot;</span><br><span class=\"hljs-string\">              for i in $(seq 0 $(($&#123;CLUSTER_SIZE&#125; - 1))); do</span><br><span class=\"hljs-string\">                  PEERS=&quot;$&#123;PEERS&#125;$&#123;PEERS:+,&#125;$&#123;SET_NAME&#125;-$&#123;i&#125;=http://$&#123;SET_NAME&#125;-$&#123;i&#125;.$&#123;SET_NAME&#125;:2380&quot;</span><br><span class=\"hljs-string\">              done</span><br><span class=\"hljs-string\">              exec etcd --name $&#123;HOSTNAME&#125; \\</span><br><span class=\"hljs-string\">                --listen-peer-urls http://$&#123;IP&#125;:2380 \\</span><br><span class=\"hljs-string\">                --listen-client-urls http://$&#123;IP&#125;:2379,http://127.0.0.1:2379 \\</span><br><span class=\"hljs-string\">                --advertise-client-urls http://$&#123;HOSTNAME&#125;.$&#123;SET_NAME&#125;:2379 \\</span><br><span class=\"hljs-string\">                --initial-advertise-peer-urls http://$&#123;HOSTNAME&#125;.$&#123;SET_NAME&#125;:2380 \\</span><br><span class=\"hljs-string\">                --initial-cluster-token etcd-cluster-1 \\</span><br><span class=\"hljs-string\">                --initial-cluster $&#123;PEERS&#125; \\</span><br><span class=\"hljs-string\">                --initial-cluster-state new \\</span><br><span class=\"hljs-string\">                --data-dir /var/run/etcd/default.etcd</span><br><span class=\"hljs-string\"></span>          <span class=\"hljs-attr\">ports:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">2379</span><br>              <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">client</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">2380</span><br>              <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">peer</span><br>          <span class=\"hljs-attr\">volumeMounts:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">etcd-storage</span><br>              <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/var/run/etcd/default.etcd</span><br>      <span class=\"hljs-attr\">volumes:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">etcd-storage</span><br>          <span class=\"hljs-attr\">emptyDir:</span> &#123;&#125;<br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Service</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">etcd</span><br>  <span class=\"hljs-attr\">annotations:</span><br>    <span class=\"hljs-comment\"># Create endpoints also if the related pod isn&#x27;t ready</span><br>    <span class=\"hljs-attr\">service.alpha.kubernetes.io/tolerate-unready-endpoints:</span> <span class=\"hljs-string\">&quot;true&quot;</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">ports:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">2379</span><br>      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">client</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">2380</span><br>      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">peer</span><br>  <span class=\"hljs-attr\">clusterIP:</span> <span class=\"hljs-string\">None</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">etcd</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Service</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">etcd-client</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">ports:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">http</span><br>      <span class=\"hljs-attr\">nodePort:</span> <span class=\"hljs-number\">30453</span><br>      <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">2379</span><br>      <span class=\"hljs-attr\">targetPort:</span> <span class=\"hljs-number\">2379</span><br>      <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span><br>  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">NodePort</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">etcd</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"部署WebUI\"><a href=\"#部署WebUI\" class=\"headerlink\" title=\"部署WebUI\"></a>部署WebUI</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ConfigMap</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-configmap</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">e3w.ini</span><br><span class=\"hljs-attr\">data:</span><br>  <span class=\"hljs-attr\">e3w-config.default.ini:</span> <span class=\"hljs-string\">|</span><br><span class=\"hljs-string\">    [app]</span><br><span class=\"hljs-string\">    port=8080</span><br><span class=\"hljs-string\">    auth=false</span><br><span class=\"hljs-string\">    [etcd]</span><br><span class=\"hljs-string\">    root_key=root</span><br><span class=\"hljs-string\">    dir_value=</span><br><span class=\"hljs-string\">    addr=etcd-0.etcd.default.svc.cluster.local:2379,etcd-1.etcd.default.svc.cluster.local:2379,etcd-2.etcd.default.svc.cluster.local:2379</span><br><span class=\"hljs-string\">    username=</span><br><span class=\"hljs-string\">    password=</span><br><span class=\"hljs-string\">    cert_file=</span><br><span class=\"hljs-string\">    key_file=</span><br><span class=\"hljs-string\">    ca_file=</span><br><span class=\"hljs-string\"></span><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Deployment</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-deployment</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">e3w</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">1</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">matchLabels:</span><br>      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">etcd-client-e3w</span><br>  <span class=\"hljs-attr\">template:</span><br>    <span class=\"hljs-attr\">metadata:</span><br>      <span class=\"hljs-attr\">labels:</span><br>        <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">etcd-client-e3w</span><br>    <span class=\"hljs-attr\">spec:</span><br>      <span class=\"hljs-attr\">containers:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-app-container</span><br>          <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">soyking/e3w:latest</span><br>          <span class=\"hljs-attr\">imagePullPolicy:</span> <span class=\"hljs-string\">IfNotPresent</span><br>          <span class=\"hljs-attr\">ports:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-server-port</span><br>              <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">8080</span><br>          <span class=\"hljs-attr\">volumeMounts:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-configmap-volume</span><br>              <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/app/conf/config.default.ini</span><br>              <span class=\"hljs-attr\">subPath:</span> <span class=\"hljs-string\">config.default.ini</span><br>      <span class=\"hljs-attr\">volumes:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-configmap-volume</span><br>          <span class=\"hljs-attr\">configMap:</span><br>            <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-configmap</span><br>            <span class=\"hljs-attr\">items:</span><br>              <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">e3w-config.default.ini</span><br>                <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">config.default.ini</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Service</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-service</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">NodePort</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">etcd-client-e3w</span><br>  <span class=\"hljs-attr\">ports:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span><br>      <span class=\"hljs-attr\">targetPort:</span> <span class=\"hljs-string\">e3w-server-port</span><br>      <span class=\"hljs-attr\">nodePort:</span> <span class=\"hljs-number\">30081</span><br>      <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">80</span><br></code></pre></td></tr></table></figure>\n\n<p>WebUi部署界面：访问IP:PORT</p>\n<p><img src=\"https://oss.senhao.top/image/etcd/WebUi.png\" alt=\"image-20221110143044365\"></p>\n<h2 id=\"ETCD命令\"><a href=\"#ETCD命令\" class=\"headerlink\" title=\"ETCD命令\"></a>ETCD命令</h2><blockquote>\n<p>查看版本信息</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">etcdctl version<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>查看集群成员信息</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">etcdctl member list<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>查看集群状态</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">etcdctl cluster-health<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"ETCD读写操作\"><a href=\"#ETCD读写操作\" class=\"headerlink\" title=\"ETCD读写操作\"></a>ETCD读写操作</h2><h3 id=\"写入\"><a href=\"#写入\" class=\"headerlink\" title=\"写入\"></a>写入</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">etcdctl put greeting <span class=\"hljs-string\">&quot;Hello, etcd&quot;</span><br><br>/ <span class=\"hljs-comment\"># etcdctl put greeting &quot;Hello, etcd&quot;</span><br>No <span class=\"hljs-built_in\">help</span> topic <span class=\"hljs-keyword\">for</span> <span class=\"hljs-string\">&#x27;put&#x27;</span><br>/ <span class=\"hljs-comment\"># export ETCDCTL_API=3</span><br>/ <span class=\"hljs-comment\"># etcdctl put greeting &quot;Hello, etcd&quot;</span><br>OK<br></code></pre></td></tr></table></figure>\n\n<p>如遇到<code>No help topic for &#39;put&#39;</code> 的错误信息，执行<code>export ETCDCTL_API=3</code>即可解决.</p>\n<h3 id=\"读取\"><a href=\"#读取\" class=\"headerlink\" title=\"读取\"></a>读取</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">/ <span class=\"hljs-comment\"># etcdctl get greeting</span><br>greeting<br>Hello, etcd<br></code></pre></td></tr></table></figure>\n","site":{"data":{}},"wordcount":4332,"excerpt":"","more":"<h1 id=\"ETCD\"><a href=\"#ETCD\" class=\"headerlink\" title=\"ETCD\"></a>ETCD</h1><h2 id=\"ETCD简介\"><a href=\"#ETCD简介\" class=\"headerlink\" title=\"ETCD简介\"></a>ETCD简介</h2><p>etcd是由CoreOS团队发的一个分布式一致性的KV存储系统，可用于服务注册发现和共享配置，随着CoreOS和Kubernetes等项目在开源社区日益火热，它们项目中都用到的etcd组件作为一个高可用强一致性的服务发现存储仓库，渐渐为开发人员所关注。在云计算时代，如何让服务快速透明地接入到计算集群中，如何让共享配置信息快速被集群中的所有机器发现，更为重要的是，如何构建这样一套高可用、安全、易于部署以及响应快速的服务集群，已经成为了迫切需要解决的问题。</p>\n<p>GitHub地址：<a href=\"https://github.com/etcd-io/etcd\">GitHub</a></p>\n<p>镜像仓库地址  <a href=\"https://quay.io/repository/coreos/etcd?tab=tags&tag=latest\">coreos/etcd</a></p>\n<p>官方文档：<a href=\"https://etcd.io/docs/v3.5/quickstart/\">Quickstart | etcd</a></p>\n<h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><p>etcd作为一个受到ZooKeeper与doozer启发而催生的项目，除了拥有与之类似的功能外，更专注于以下四点：</p>\n<p><strong>简单：</strong>安装配置简单，而且提供了 HTTP API 进行交互，使用也很简单 </p>\n<p><strong>安全：</strong>支持 SSL 证书验证 </p>\n<p><strong>快速：</strong>根据官方提供的 benchmark 数据，单实例支持每秒 2k+ 读操作</p>\n<p><strong>可靠：</strong>采用 raft 算法，实现分布式系统数据的可用性和一致性</p>\n<h2 id=\"安装ETCD\"><a href=\"#安装ETCD\" class=\"headerlink\" title=\"安装ETCD\"></a>安装ETCD</h2><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">参数说明： <br>● –data-dir 指定节点的数据存储目录，若不指定，则默认是当前目录。这些数据包括节点ID，集群ID，集群初始化配置，<span class=\"hljs-keyword\">Snapshot</span>文件，若未指 定–wal-dir，还会存储WAL文件 <br>● –wal-dir 指定节点的was文件存储目录，若指定了该参数，wal文件会和其他数据文件分开存储 <br>● –<span class=\"hljs-type\">name</span> 节点名称 <br>● –initial-advertise-peer-urls 告知集群其他节点的URL，tcp2380端口用于集群通信 <br>● –<span class=\"hljs-keyword\">listen</span>-peer-urls 监听URL，用于与其他节点通讯 <br>● –advertise-client-urls 告知客户端的URL, 也就是服务的URL，tcp2379端口用于监听客户端请求 <br>● –initial-<span class=\"hljs-keyword\">cluster</span>-token 集群的ID <br>● –initial-<span class=\"hljs-keyword\">cluster</span> 集群中所有节点 <br>● –initial-<span class=\"hljs-keyword\">cluster</span>-state 集群状态，<span class=\"hljs-built_in\">new</span>为新创建集群，existing为已存在的集群<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"kubernetes\"><a href=\"#kubernetes\" class=\"headerlink\" title=\"kubernetes\"></a>kubernetes</h3><p>参考地址：<a href=\"https://zhuanlan.zhihu.com/p/373016748\">传送门</a></p>\n<h4 id=\"部署etcd集群实例\"><a href=\"#部署etcd集群实例\" class=\"headerlink\" title=\"部署etcd集群实例\"></a>部署etcd集群实例</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">StatefulSet</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">etcd</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">etcd</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">serviceName:</span> <span class=\"hljs-string\">etcd</span><br>  <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">3</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">matchLabels:</span><br>      <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">etcd</span><br>  <span class=\"hljs-attr\">template:</span><br>    <span class=\"hljs-attr\">metadata:</span><br>      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">etcd</span><br>      <span class=\"hljs-attr\">labels:</span><br>        <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">etcd</span><br>    <span class=\"hljs-attr\">spec:</span><br>      <span class=\"hljs-attr\">containers:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">etcd</span><br>          <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">quay.io/coreos/etcd:latest</span><br>          <span class=\"hljs-attr\">imagePullPolicy:</span> <span class=\"hljs-string\">IfNotPresent</span><br>          <span class=\"hljs-attr\">env:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">CLUSTER_SIZE</span><br>              <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">&quot;3&quot;</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">SET_NAME</span><br>              <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">&quot;etcd&quot;</span><br>          <span class=\"hljs-attr\">command:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/bin/sh</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">-ecx</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">|</span><br><span class=\"hljs-string\">              IP=$(hostname -i)</span><br><span class=\"hljs-string\">              PEERS=&quot;&quot;</span><br><span class=\"hljs-string\">              for i in $(seq 0 $(($&#123;CLUSTER_SIZE&#125; - 1))); do</span><br><span class=\"hljs-string\">                  PEERS=&quot;$&#123;PEERS&#125;$&#123;PEERS:+,&#125;$&#123;SET_NAME&#125;-$&#123;i&#125;=http://$&#123;SET_NAME&#125;-$&#123;i&#125;.$&#123;SET_NAME&#125;:2380&quot;</span><br><span class=\"hljs-string\">              done</span><br><span class=\"hljs-string\">              exec etcd --name $&#123;HOSTNAME&#125; \\</span><br><span class=\"hljs-string\">                --listen-peer-urls http://$&#123;IP&#125;:2380 \\</span><br><span class=\"hljs-string\">                --listen-client-urls http://$&#123;IP&#125;:2379,http://127.0.0.1:2379 \\</span><br><span class=\"hljs-string\">                --advertise-client-urls http://$&#123;HOSTNAME&#125;.$&#123;SET_NAME&#125;:2379 \\</span><br><span class=\"hljs-string\">                --initial-advertise-peer-urls http://$&#123;HOSTNAME&#125;.$&#123;SET_NAME&#125;:2380 \\</span><br><span class=\"hljs-string\">                --initial-cluster-token etcd-cluster-1 \\</span><br><span class=\"hljs-string\">                --initial-cluster $&#123;PEERS&#125; \\</span><br><span class=\"hljs-string\">                --initial-cluster-state new \\</span><br><span class=\"hljs-string\">                --data-dir /var/run/etcd/default.etcd</span><br><span class=\"hljs-string\"></span>          <span class=\"hljs-attr\">ports:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">2379</span><br>              <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">client</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">2380</span><br>              <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">peer</span><br>          <span class=\"hljs-attr\">volumeMounts:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">etcd-storage</span><br>              <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/var/run/etcd/default.etcd</span><br>      <span class=\"hljs-attr\">volumes:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">etcd-storage</span><br>          <span class=\"hljs-attr\">emptyDir:</span> &#123;&#125;<br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Service</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">etcd</span><br>  <span class=\"hljs-attr\">annotations:</span><br>    <span class=\"hljs-comment\"># Create endpoints also if the related pod isn&#x27;t ready</span><br>    <span class=\"hljs-attr\">service.alpha.kubernetes.io/tolerate-unready-endpoints:</span> <span class=\"hljs-string\">&quot;true&quot;</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">ports:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">2379</span><br>      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">client</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">2380</span><br>      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">peer</span><br>  <span class=\"hljs-attr\">clusterIP:</span> <span class=\"hljs-string\">None</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">etcd</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Service</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">etcd-client</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">ports:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">http</span><br>      <span class=\"hljs-attr\">nodePort:</span> <span class=\"hljs-number\">30453</span><br>      <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">2379</span><br>      <span class=\"hljs-attr\">targetPort:</span> <span class=\"hljs-number\">2379</span><br>      <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span><br>  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">NodePort</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">etcd</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"部署WebUI\"><a href=\"#部署WebUI\" class=\"headerlink\" title=\"部署WebUI\"></a>部署WebUI</h4><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ConfigMap</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-configmap</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">e3w.ini</span><br><span class=\"hljs-attr\">data:</span><br>  <span class=\"hljs-attr\">e3w-config.default.ini:</span> <span class=\"hljs-string\">|</span><br><span class=\"hljs-string\">    [app]</span><br><span class=\"hljs-string\">    port=8080</span><br><span class=\"hljs-string\">    auth=false</span><br><span class=\"hljs-string\">    [etcd]</span><br><span class=\"hljs-string\">    root_key=root</span><br><span class=\"hljs-string\">    dir_value=</span><br><span class=\"hljs-string\">    addr=etcd-0.etcd.default.svc.cluster.local:2379,etcd-1.etcd.default.svc.cluster.local:2379,etcd-2.etcd.default.svc.cluster.local:2379</span><br><span class=\"hljs-string\">    username=</span><br><span class=\"hljs-string\">    password=</span><br><span class=\"hljs-string\">    cert_file=</span><br><span class=\"hljs-string\">    key_file=</span><br><span class=\"hljs-string\">    ca_file=</span><br><span class=\"hljs-string\"></span><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Deployment</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-deployment</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">e3w</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">1</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">matchLabels:</span><br>      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">etcd-client-e3w</span><br>  <span class=\"hljs-attr\">template:</span><br>    <span class=\"hljs-attr\">metadata:</span><br>      <span class=\"hljs-attr\">labels:</span><br>        <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">etcd-client-e3w</span><br>    <span class=\"hljs-attr\">spec:</span><br>      <span class=\"hljs-attr\">containers:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-app-container</span><br>          <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">soyking/e3w:latest</span><br>          <span class=\"hljs-attr\">imagePullPolicy:</span> <span class=\"hljs-string\">IfNotPresent</span><br>          <span class=\"hljs-attr\">ports:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-server-port</span><br>              <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">8080</span><br>          <span class=\"hljs-attr\">volumeMounts:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-configmap-volume</span><br>              <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/app/conf/config.default.ini</span><br>              <span class=\"hljs-attr\">subPath:</span> <span class=\"hljs-string\">config.default.ini</span><br>      <span class=\"hljs-attr\">volumes:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-configmap-volume</span><br>          <span class=\"hljs-attr\">configMap:</span><br>            <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-configmap</span><br>            <span class=\"hljs-attr\">items:</span><br>              <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">e3w-config.default.ini</span><br>                <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">config.default.ini</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Service</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">e3w-service</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">NodePort</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">etcd-client-e3w</span><br>  <span class=\"hljs-attr\">ports:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span><br>      <span class=\"hljs-attr\">targetPort:</span> <span class=\"hljs-string\">e3w-server-port</span><br>      <span class=\"hljs-attr\">nodePort:</span> <span class=\"hljs-number\">30081</span><br>      <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">80</span><br></code></pre></td></tr></table></figure>\n\n<p>WebUi部署界面：访问IP:PORT</p>\n<p><img src=\"https://oss.senhao.top/image/etcd/WebUi.png\" alt=\"image-20221110143044365\"></p>\n<h2 id=\"ETCD命令\"><a href=\"#ETCD命令\" class=\"headerlink\" title=\"ETCD命令\"></a>ETCD命令</h2><blockquote>\n<p>查看版本信息</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">etcdctl version<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>查看集群成员信息</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">etcdctl member list<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>查看集群状态</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">etcdctl cluster-health<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"ETCD读写操作\"><a href=\"#ETCD读写操作\" class=\"headerlink\" title=\"ETCD读写操作\"></a>ETCD读写操作</h2><h3 id=\"写入\"><a href=\"#写入\" class=\"headerlink\" title=\"写入\"></a>写入</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">etcdctl put greeting <span class=\"hljs-string\">&quot;Hello, etcd&quot;</span><br><br>/ <span class=\"hljs-comment\"># etcdctl put greeting &quot;Hello, etcd&quot;</span><br>No <span class=\"hljs-built_in\">help</span> topic <span class=\"hljs-keyword\">for</span> <span class=\"hljs-string\">&#x27;put&#x27;</span><br>/ <span class=\"hljs-comment\"># export ETCDCTL_API=3</span><br>/ <span class=\"hljs-comment\"># etcdctl put greeting &quot;Hello, etcd&quot;</span><br>OK<br></code></pre></td></tr></table></figure>\n\n<p>如遇到<code>No help topic for &#39;put&#39;</code> 的错误信息，执行<code>export ETCDCTL_API=3</code>即可解决.</p>\n<h3 id=\"读取\"><a href=\"#读取\" class=\"headerlink\" title=\"读取\"></a>读取</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">/ <span class=\"hljs-comment\"># etcdctl get greeting</span><br>greeting<br>Hello, etcd<br></code></pre></td></tr></table></figure>\n"},{"title":"hexo搭建教程","date":"2022-04-10T07:18:34.000Z","description":"hexo搭建教程.","_content":"\n## hexo搭建教程\n\n基于Windows系统进行搭建\n\n### 前置条件\n\n1. nodejs\n2. git\n\n### 安装hexo\n\n我们采用`Hexo`来创建我们的博客网站，`Hexo` 是一个基于`NodeJS`的静态博客网站生成器，使用`Hexo`不需开发，只要进行一些必要的配置即可生成一个个性化的博客网站，非常方便。点击进入 [官网](https://hexo.io/zh-cn/)。\n\n#### 安装hexo\n\n```bash\nnpm install -g hexo-cli\n```\n\n#### 查看版本\n\n```bash\nhexo -v\n```\n\n#### 创建一个hexo\n\n```bash\nhexo init blog\n```\n\n##### 初始化\n\n```bash\nnpm install\n```\n\n#### 本地启动\n\n```bash\n#生成静态文件 \nhexo generate | hexo g\n#进行预览\nhexo server | hexo s\n```\n\n此时汝的一个简单的hexo-blog就搭建完成啦!\n\n### 更换主题\n\n`Hexo` 默认的主题不太好看，不过官方提供了数百种主题供用户选择，可以根据个人喜好更换，官网主题点 [这里](https://hexo.io/themes/) 查看。这里介绍两个主题的使用方法，`Next` 和 `Fluid`，个人比较喜欢`Fluid`。\n\n#### 下载Fluid主题\n\n[这里](https://github.com/fluid-dev/hexo-theme-fluid)是官方地址,该REAEMD.md中有较为详细的教程，这里不再重复.\n\n```bash\ngit clone https://github.com/fluid-dev/hexo-theme-fluid.git ./themes\n```\n\n#### 创建一个post\n\n```bash\nhexo new [post]\n```\n\n此时在blog/source/_posts/，会出现创建的post。\n\n### 发布\n\n#### 私人服务器\n\n1、打包汝的blog\n\n```bash\nhexo g\n```\n\n将`public` 目录下的文件复制到 `Linux` 服务器，使用nginx进行代理即可。\n\n### 使用时出现的问题\n\n#### 主页摘要\n\n编写完成文章后，主页预览发现摘要显示部分内容。解决方案有两种：\n\n1. 使用`<!--more-->`进行截断\n2. 添加`description`信息\n\n#### 标签和分类\n\n##### 创建一个标签模块\n\n```bash\nhexo new page tags\n```\n\n此时你的`source`文件夹下有了`categories\\index.md`，打开`index.md`文件将 title 设置为`title: 分类`。文章归入分类只需在文章的顶部标题下方添加`categories`字段，即可自动创建分类名并加入对应的分类中。\n\n##### 创建一个分类模块\n\n```bash\nhexo new page categories\n```\n\n此时你的`source`文件夹下有了`tags\\index.md`，打开`index.md`文件将 title 设置为`title: 标签` 。文章添加标签只需在文章的顶部标题下方添加`tags`字段，即可自动创建标签名并归入对应的标签中 。\n\n","source":"_posts/hexo搭建教程.md","raw":"---\ntitle: hexo搭建教程\ndate: 2022-04-10 15:18:34\ntags: blog\ncategories: blog\ndescription: hexo搭建教程.\n---\n\n## hexo搭建教程\n\n基于Windows系统进行搭建\n\n### 前置条件\n\n1. nodejs\n2. git\n\n### 安装hexo\n\n我们采用`Hexo`来创建我们的博客网站，`Hexo` 是一个基于`NodeJS`的静态博客网站生成器，使用`Hexo`不需开发，只要进行一些必要的配置即可生成一个个性化的博客网站，非常方便。点击进入 [官网](https://hexo.io/zh-cn/)。\n\n#### 安装hexo\n\n```bash\nnpm install -g hexo-cli\n```\n\n#### 查看版本\n\n```bash\nhexo -v\n```\n\n#### 创建一个hexo\n\n```bash\nhexo init blog\n```\n\n##### 初始化\n\n```bash\nnpm install\n```\n\n#### 本地启动\n\n```bash\n#生成静态文件 \nhexo generate | hexo g\n#进行预览\nhexo server | hexo s\n```\n\n此时汝的一个简单的hexo-blog就搭建完成啦!\n\n### 更换主题\n\n`Hexo` 默认的主题不太好看，不过官方提供了数百种主题供用户选择，可以根据个人喜好更换，官网主题点 [这里](https://hexo.io/themes/) 查看。这里介绍两个主题的使用方法，`Next` 和 `Fluid`，个人比较喜欢`Fluid`。\n\n#### 下载Fluid主题\n\n[这里](https://github.com/fluid-dev/hexo-theme-fluid)是官方地址,该REAEMD.md中有较为详细的教程，这里不再重复.\n\n```bash\ngit clone https://github.com/fluid-dev/hexo-theme-fluid.git ./themes\n```\n\n#### 创建一个post\n\n```bash\nhexo new [post]\n```\n\n此时在blog/source/_posts/，会出现创建的post。\n\n### 发布\n\n#### 私人服务器\n\n1、打包汝的blog\n\n```bash\nhexo g\n```\n\n将`public` 目录下的文件复制到 `Linux` 服务器，使用nginx进行代理即可。\n\n### 使用时出现的问题\n\n#### 主页摘要\n\n编写完成文章后，主页预览发现摘要显示部分内容。解决方案有两种：\n\n1. 使用`<!--more-->`进行截断\n2. 添加`description`信息\n\n#### 标签和分类\n\n##### 创建一个标签模块\n\n```bash\nhexo new page tags\n```\n\n此时你的`source`文件夹下有了`categories\\index.md`，打开`index.md`文件将 title 设置为`title: 分类`。文章归入分类只需在文章的顶部标题下方添加`categories`字段，即可自动创建分类名并加入对应的分类中。\n\n##### 创建一个分类模块\n\n```bash\nhexo new page categories\n```\n\n此时你的`source`文件夹下有了`tags\\index.md`，打开`index.md`文件将 title 设置为`title: 标签` 。文章添加标签只需在文章的顶部标题下方添加`tags`字段，即可自动创建标签名并归入对应的标签中 。\n\n","slug":"hexo搭建教程","published":1,"updated":"2022-12-22T12:24:31.268Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcwycosl000lh0u254n40rng","content":"<h2 id=\"hexo搭建教程\"><a href=\"#hexo搭建教程\" class=\"headerlink\" title=\"hexo搭建教程\"></a>hexo搭建教程</h2><p>基于Windows系统进行搭建</p>\n<h3 id=\"前置条件\"><a href=\"#前置条件\" class=\"headerlink\" title=\"前置条件\"></a>前置条件</h3><ol>\n<li>nodejs</li>\n<li>git</li>\n</ol>\n<h3 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h3><p>我们采用<code>Hexo</code>来创建我们的博客网站，<code>Hexo</code> 是一个基于<code>NodeJS</code>的静态博客网站生成器，使用<code>Hexo</code>不需开发，只要进行一些必要的配置即可生成一个个性化的博客网站，非常方便。点击进入 <a href=\"https://hexo.io/zh-cn/\">官网</a>。</p>\n<h4 id=\"安装hexo-1\"><a href=\"#安装hexo-1\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install -g hexo-cli<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"查看版本\"><a href=\"#查看版本\" class=\"headerlink\" title=\"查看版本\"></a>查看版本</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo -v<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"创建一个hexo\"><a href=\"#创建一个hexo\" class=\"headerlink\" title=\"创建一个hexo\"></a>创建一个hexo</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo init blog<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"本地启动\"><a href=\"#本地启动\" class=\"headerlink\" title=\"本地启动\"></a>本地启动</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#生成静态文件 </span><br>hexo generate | hexo g<br><span class=\"hljs-comment\">#进行预览</span><br>hexo server | hexo s<br></code></pre></td></tr></table></figure>\n\n<p>此时汝的一个简单的hexo-blog就搭建完成啦!</p>\n<h3 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h3><p><code>Hexo</code> 默认的主题不太好看，不过官方提供了数百种主题供用户选择，可以根据个人喜好更换，官网主题点 <a href=\"https://hexo.io/themes/\">这里</a> 查看。这里介绍两个主题的使用方法，<code>Next</code> 和 <code>Fluid</code>，个人比较喜欢<code>Fluid</code>。</p>\n<h4 id=\"下载Fluid主题\"><a href=\"#下载Fluid主题\" class=\"headerlink\" title=\"下载Fluid主题\"></a>下载Fluid主题</h4><p><a href=\"https://github.com/fluid-dev/hexo-theme-fluid\">这里</a>是官方地址,该REAEMD.md中有较为详细的教程，这里不再重复.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git ./themes<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"创建一个post\"><a href=\"#创建一个post\" class=\"headerlink\" title=\"创建一个post\"></a>创建一个post</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo new [post]<br></code></pre></td></tr></table></figure>\n\n<p>此时在blog/source/_posts/，会出现创建的post。</p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><h4 id=\"私人服务器\"><a href=\"#私人服务器\" class=\"headerlink\" title=\"私人服务器\"></a>私人服务器</h4><p>1、打包汝的blog</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo g<br></code></pre></td></tr></table></figure>\n\n<p>将<code>public</code> 目录下的文件复制到 <code>Linux</code> 服务器，使用nginx进行代理即可。</p>\n<h3 id=\"使用时出现的问题\"><a href=\"#使用时出现的问题\" class=\"headerlink\" title=\"使用时出现的问题\"></a>使用时出现的问题</h3><h4 id=\"主页摘要\"><a href=\"#主页摘要\" class=\"headerlink\" title=\"主页摘要\"></a>主页摘要</h4><p>编写完成文章后，主页预览发现摘要显示部分内容。解决方案有两种：</p>\n<ol>\n<li>使用<code>&lt;!--more--&gt;</code>进行截断</li>\n<li>添加<code>description</code>信息</li>\n</ol>\n<h4 id=\"标签和分类\"><a href=\"#标签和分类\" class=\"headerlink\" title=\"标签和分类\"></a>标签和分类</h4><h5 id=\"创建一个标签模块\"><a href=\"#创建一个标签模块\" class=\"headerlink\" title=\"创建一个标签模块\"></a>创建一个标签模块</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo new page tags<br></code></pre></td></tr></table></figure>\n\n<p>此时你的<code>source</code>文件夹下有了<code>categories\\index.md</code>，打开<code>index.md</code>文件将 title 设置为<code>title: 分类</code>。文章归入分类只需在文章的顶部标题下方添加<code>categories</code>字段，即可自动创建分类名并加入对应的分类中。</p>\n<h5 id=\"创建一个分类模块\"><a href=\"#创建一个分类模块\" class=\"headerlink\" title=\"创建一个分类模块\"></a>创建一个分类模块</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo new page categories<br></code></pre></td></tr></table></figure>\n\n<p>此时你的<code>source</code>文件夹下有了<code>tags\\index.md</code>，打开<code>index.md</code>文件将 title 设置为<code>title: 标签</code> 。文章添加标签只需在文章的顶部标题下方添加<code>tags</code>字段，即可自动创建标签名并归入对应的标签中 。</p>\n","site":{"data":{}},"wordcount":974,"excerpt":"","more":"<h2 id=\"hexo搭建教程\"><a href=\"#hexo搭建教程\" class=\"headerlink\" title=\"hexo搭建教程\"></a>hexo搭建教程</h2><p>基于Windows系统进行搭建</p>\n<h3 id=\"前置条件\"><a href=\"#前置条件\" class=\"headerlink\" title=\"前置条件\"></a>前置条件</h3><ol>\n<li>nodejs</li>\n<li>git</li>\n</ol>\n<h3 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h3><p>我们采用<code>Hexo</code>来创建我们的博客网站，<code>Hexo</code> 是一个基于<code>NodeJS</code>的静态博客网站生成器，使用<code>Hexo</code>不需开发，只要进行一些必要的配置即可生成一个个性化的博客网站，非常方便。点击进入 <a href=\"https://hexo.io/zh-cn/\">官网</a>。</p>\n<h4 id=\"安装hexo-1\"><a href=\"#安装hexo-1\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install -g hexo-cli<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"查看版本\"><a href=\"#查看版本\" class=\"headerlink\" title=\"查看版本\"></a>查看版本</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo -v<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"创建一个hexo\"><a href=\"#创建一个hexo\" class=\"headerlink\" title=\"创建一个hexo\"></a>创建一个hexo</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo init blog<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"本地启动\"><a href=\"#本地启动\" class=\"headerlink\" title=\"本地启动\"></a>本地启动</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#生成静态文件 </span><br>hexo generate | hexo g<br><span class=\"hljs-comment\">#进行预览</span><br>hexo server | hexo s<br></code></pre></td></tr></table></figure>\n\n<p>此时汝的一个简单的hexo-blog就搭建完成啦!</p>\n<h3 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h3><p><code>Hexo</code> 默认的主题不太好看，不过官方提供了数百种主题供用户选择，可以根据个人喜好更换，官网主题点 <a href=\"https://hexo.io/themes/\">这里</a> 查看。这里介绍两个主题的使用方法，<code>Next</code> 和 <code>Fluid</code>，个人比较喜欢<code>Fluid</code>。</p>\n<h4 id=\"下载Fluid主题\"><a href=\"#下载Fluid主题\" class=\"headerlink\" title=\"下载Fluid主题\"></a>下载Fluid主题</h4><p><a href=\"https://github.com/fluid-dev/hexo-theme-fluid\">这里</a>是官方地址,该REAEMD.md中有较为详细的教程，这里不再重复.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git ./themes<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"创建一个post\"><a href=\"#创建一个post\" class=\"headerlink\" title=\"创建一个post\"></a>创建一个post</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo new [post]<br></code></pre></td></tr></table></figure>\n\n<p>此时在blog/source/_posts/，会出现创建的post。</p>\n<h3 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h3><h4 id=\"私人服务器\"><a href=\"#私人服务器\" class=\"headerlink\" title=\"私人服务器\"></a>私人服务器</h4><p>1、打包汝的blog</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo g<br></code></pre></td></tr></table></figure>\n\n<p>将<code>public</code> 目录下的文件复制到 <code>Linux</code> 服务器，使用nginx进行代理即可。</p>\n<h3 id=\"使用时出现的问题\"><a href=\"#使用时出现的问题\" class=\"headerlink\" title=\"使用时出现的问题\"></a>使用时出现的问题</h3><h4 id=\"主页摘要\"><a href=\"#主页摘要\" class=\"headerlink\" title=\"主页摘要\"></a>主页摘要</h4><p>编写完成文章后，主页预览发现摘要显示部分内容。解决方案有两种：</p>\n<ol>\n<li>使用<code>&lt;!--more--&gt;</code>进行截断</li>\n<li>添加<code>description</code>信息</li>\n</ol>\n<h4 id=\"标签和分类\"><a href=\"#标签和分类\" class=\"headerlink\" title=\"标签和分类\"></a>标签和分类</h4><h5 id=\"创建一个标签模块\"><a href=\"#创建一个标签模块\" class=\"headerlink\" title=\"创建一个标签模块\"></a>创建一个标签模块</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo new page tags<br></code></pre></td></tr></table></figure>\n\n<p>此时你的<code>source</code>文件夹下有了<code>categories\\index.md</code>，打开<code>index.md</code>文件将 title 设置为<code>title: 分类</code>。文章归入分类只需在文章的顶部标题下方添加<code>categories</code>字段，即可自动创建分类名并加入对应的分类中。</p>\n<h5 id=\"创建一个分类模块\"><a href=\"#创建一个分类模块\" class=\"headerlink\" title=\"创建一个分类模块\"></a>创建一个分类模块</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo new page categories<br></code></pre></td></tr></table></figure>\n\n<p>此时你的<code>source</code>文件夹下有了<code>tags\\index.md</code>，打开<code>index.md</code>文件将 title 设置为<code>title: 标签</code> 。文章添加标签只需在文章的顶部标题下方添加<code>tags</code>字段，即可自动创建标签名并归入对应的标签中 。</p>\n"},{"title":"kubernetes更新证书100年","date":"2022-04-16T05:23:06.000Z","description":"kubernetes更新证书100年","_content":"\n## kubernetes更新证书100年\n\nKubernetes 中大量用到了证书, 比如 ca证书、以及 kubelet、apiserver、proxy、etcd等组件，还有 kubeconfig 文件。\n\n如果证书过期，轻则无法登录 Kubernetes 集群，重则整个集群异常。\n\n\n\n为了解决证书过期的问题，一般有以下几种方式：\n\n1.大幅延长证书有效期，短则 10年，长则 100 年；\n\n2.证书快过期是自动轮换，如 Rancher 的 K3s，RKE2 就采用这种方式；\n\n3.增加证书过期的监控，便于提早发现证书过期问题并人工介入\n\n### 获取源码\n\n#### 通过github\n\n```bash\n#拉取github代码\ngit clone https://github.com/kubernetes/kubernetes.git\n#切换到使用的kubernetes版本\ngit checkout -b remotes/origin/release-1.20 v1.20.15\n```\n\n#### 下载源码\n\n```bash\nwget https://github.com/kubernetes/kubernetes/archive/v1.25.5.tar.gz\ntar -zxvf kubernetes-1.25.5.tar.gz\nmv kubernetes-1.25.5 kubernetes\ncd kubernetes\n```\n\n### 修改证书默认事件\n\n>  vim staging/src/k8s.io/client-go/util/cert/cert.go\n\n```bash\nfunc NewSelfSignedCACert(cfg Config, key crypto.Signer) (*x509.Certificate, error) {\n        now := time.Now()\n        tmpl := x509.Certificate{\n                SerialNumber: new(big.Int).SetInt64(0),\n                Subject: pkix.Name{\n                        CommonName:   cfg.CommonName,\n                        Organization: cfg.Organization,\n                },\n                NotBefore:             now.UTC(),\n                //NotAfter:              now.Add(duration365d * 10).UTC(),\n               #//update cert time.\n                NotAfter:              now.Add(duration365d * 100).UTC(),\n                KeyUsage:              x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature | x509.KeyUsageCertSign,\n                BasicConstraintsValid: true,\n                IsCA:                  true,\n        }\n\n        certDERBytes, err := x509.CreateCertificate(cryptorand.Reader, &tmpl, &tmpl, key.Public(), key)\n        if err != nil {\n                return nil, err\n        }\n        return x509.ParseCertificate(certDERBytes)\n}\n```\n\n> vim cmd/kubeadm/app/constants/constants.go\n\n```bash\nconst (\n        // KubernetesDir is the directory Kubernetes owns for storing various configuration files\n        KubernetesDir = \"/etc/kubernetes\"\n        // ManifestsSubDirName defines directory name to store manifests\n        ManifestsSubDirName = \"manifests\"\n        // TempDirForKubeadm defines temporary directory for kubeadm\n        // should be joined with KubernetesDir.\n        TempDirForKubeadm = \"tmp\"\n\n        // CertificateValidity defines the validity for all the signed certificates generated by kubeadm\n        #// update this CertificateValidity\n        CertificateValidity = time.Hour * 24 * 365 * 100\n\n        // CACertAndKeyBaseName defines certificate authority base name\n        CACertAndKeyBaseName = \"ca\"\n        // CACertName defines certificate name\n        CACertName = \"ca.crt\"\n        // CAKeyName defines certificate name\n        CAKeyName = \"ca.key\"\n}\n```\n\n### 编译\n\n#### 本机编译\n\n安装依赖\n\n```bash\nyum install gcc make -y && yum install rsync jq -y\n```\n\n安装Golang环境\n\n```bash\n#查看需要的goLang版本\n[root@master kubernetes]# cat ./build/build-image/cross/VERSION\nv1.25.0-go1.19.4-bullseye.0\n#下载\nwget https://dl.google.com/go/go1.19.4.linux-amd64.tar.gz\n#解压到指定目录\ntar zxvf go1.19.4.linux-amd64.tar.gz  -C /usr/local\n#临时生效\nexport PATH=$PATH:/usr/local/go/bin\n#查看\ngo version\n```\n\n编译\n\n```bash\nmake all WHAT=cmd/kubeadm GOFLAGS=-v\n```\n\n### 更新kubeamd\n\n```bash\nmv /usr/bin/kubeadm /usr/bin/kubeadm_backup\ncp _output/local/bin/linux/amd64/kubeadm /usr/bin/kubeadm\nchmod +x /usr/bin/kubeadm\n```\n\n### 续订证书\n\n```bash\n[root@master kubernetes]# kubeadm certs renew all\n[renew] Reading configuration from the cluster...\n[renew] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'\n\ncertificate embedded in the kubeconfig file for the admin to use and for kubeadm itself renewed\ncertificate for serving the Kubernetes API renewed\ncertificate the apiserver uses to access etcd renewed\ncertificate for the API server to connect to kubelet renewed\ncertificate embedded in the kubeconfig file for the controller manager to use renewed\ncertificate for liveness probes to healthcheck etcd renewed\ncertificate for etcd nodes to communicate with each other renewed\ncertificate for serving etcd renewed\ncertificate for the front proxy client renewed\ncertificate embedded in the kubeconfig file for the scheduler manager to use renewed\n\nDone renewing certificates. You must restart the kube-apiserver, kube-controller-manager, kube-scheduler and etcd, so that they can use the new certificates.\n\n```\n\n### 查看证书时间\n\n```bash\n[root@master kubernetes]# kubeadm certs check-expiration\n[check-expiration] Reading configuration from the cluster...\n[check-expiration] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'\n\nCERTIFICATE                EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   EXTERNALLY MANAGED\nadmin.conf                 Nov 06, 2122 05:58 UTC   99y             ca                      no      \napiserver                  Nov 06, 2122 05:58 UTC   99y             ca                      no      \napiserver-etcd-client      Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      \napiserver-kubelet-client   Nov 06, 2122 05:58 UTC   99y             ca                      no      \ncontroller-manager.conf    Nov 06, 2122 05:58 UTC   99y             ca                      no      \netcd-healthcheck-client    Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      \netcd-peer                  Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      \netcd-server                Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      \nfront-proxy-client         Nov 06, 2122 05:58 UTC   99y             front-proxy-ca          no      \nscheduler.conf             Nov 06, 2122 05:58 UTC   99y             ca                      no      \n\nCERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   EXTERNALLY MANAGED\nca                      Nov 03, 2032 07:37 UTC   9y              no      \netcd-ca                 Nov 03, 2032 07:37 UTC   9y              no      \nfront-proxy-ca          Nov 03, 2032 07:37 UTC   9y              no      \n```\n\n### 注意\n\n正常执行完成过后，出现etcd证书9y的情况，需要在初始化是使用编译后的`kubeadm`\n","source":"_posts/kubernetes更新证书100年.md","raw":"---\ntitle: kubernetes更新证书100年\ndate: 2022-04-16 13:23:06\ntags: kubernetes\ncategories: kubernetes\ndescription: kubernetes更新证书100年\n---\n\n## kubernetes更新证书100年\n\nKubernetes 中大量用到了证书, 比如 ca证书、以及 kubelet、apiserver、proxy、etcd等组件，还有 kubeconfig 文件。\n\n如果证书过期，轻则无法登录 Kubernetes 集群，重则整个集群异常。\n\n\n\n为了解决证书过期的问题，一般有以下几种方式：\n\n1.大幅延长证书有效期，短则 10年，长则 100 年；\n\n2.证书快过期是自动轮换，如 Rancher 的 K3s，RKE2 就采用这种方式；\n\n3.增加证书过期的监控，便于提早发现证书过期问题并人工介入\n\n### 获取源码\n\n#### 通过github\n\n```bash\n#拉取github代码\ngit clone https://github.com/kubernetes/kubernetes.git\n#切换到使用的kubernetes版本\ngit checkout -b remotes/origin/release-1.20 v1.20.15\n```\n\n#### 下载源码\n\n```bash\nwget https://github.com/kubernetes/kubernetes/archive/v1.25.5.tar.gz\ntar -zxvf kubernetes-1.25.5.tar.gz\nmv kubernetes-1.25.5 kubernetes\ncd kubernetes\n```\n\n### 修改证书默认事件\n\n>  vim staging/src/k8s.io/client-go/util/cert/cert.go\n\n```bash\nfunc NewSelfSignedCACert(cfg Config, key crypto.Signer) (*x509.Certificate, error) {\n        now := time.Now()\n        tmpl := x509.Certificate{\n                SerialNumber: new(big.Int).SetInt64(0),\n                Subject: pkix.Name{\n                        CommonName:   cfg.CommonName,\n                        Organization: cfg.Organization,\n                },\n                NotBefore:             now.UTC(),\n                //NotAfter:              now.Add(duration365d * 10).UTC(),\n               #//update cert time.\n                NotAfter:              now.Add(duration365d * 100).UTC(),\n                KeyUsage:              x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature | x509.KeyUsageCertSign,\n                BasicConstraintsValid: true,\n                IsCA:                  true,\n        }\n\n        certDERBytes, err := x509.CreateCertificate(cryptorand.Reader, &tmpl, &tmpl, key.Public(), key)\n        if err != nil {\n                return nil, err\n        }\n        return x509.ParseCertificate(certDERBytes)\n}\n```\n\n> vim cmd/kubeadm/app/constants/constants.go\n\n```bash\nconst (\n        // KubernetesDir is the directory Kubernetes owns for storing various configuration files\n        KubernetesDir = \"/etc/kubernetes\"\n        // ManifestsSubDirName defines directory name to store manifests\n        ManifestsSubDirName = \"manifests\"\n        // TempDirForKubeadm defines temporary directory for kubeadm\n        // should be joined with KubernetesDir.\n        TempDirForKubeadm = \"tmp\"\n\n        // CertificateValidity defines the validity for all the signed certificates generated by kubeadm\n        #// update this CertificateValidity\n        CertificateValidity = time.Hour * 24 * 365 * 100\n\n        // CACertAndKeyBaseName defines certificate authority base name\n        CACertAndKeyBaseName = \"ca\"\n        // CACertName defines certificate name\n        CACertName = \"ca.crt\"\n        // CAKeyName defines certificate name\n        CAKeyName = \"ca.key\"\n}\n```\n\n### 编译\n\n#### 本机编译\n\n安装依赖\n\n```bash\nyum install gcc make -y && yum install rsync jq -y\n```\n\n安装Golang环境\n\n```bash\n#查看需要的goLang版本\n[root@master kubernetes]# cat ./build/build-image/cross/VERSION\nv1.25.0-go1.19.4-bullseye.0\n#下载\nwget https://dl.google.com/go/go1.19.4.linux-amd64.tar.gz\n#解压到指定目录\ntar zxvf go1.19.4.linux-amd64.tar.gz  -C /usr/local\n#临时生效\nexport PATH=$PATH:/usr/local/go/bin\n#查看\ngo version\n```\n\n编译\n\n```bash\nmake all WHAT=cmd/kubeadm GOFLAGS=-v\n```\n\n### 更新kubeamd\n\n```bash\nmv /usr/bin/kubeadm /usr/bin/kubeadm_backup\ncp _output/local/bin/linux/amd64/kubeadm /usr/bin/kubeadm\nchmod +x /usr/bin/kubeadm\n```\n\n### 续订证书\n\n```bash\n[root@master kubernetes]# kubeadm certs renew all\n[renew] Reading configuration from the cluster...\n[renew] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'\n\ncertificate embedded in the kubeconfig file for the admin to use and for kubeadm itself renewed\ncertificate for serving the Kubernetes API renewed\ncertificate the apiserver uses to access etcd renewed\ncertificate for the API server to connect to kubelet renewed\ncertificate embedded in the kubeconfig file for the controller manager to use renewed\ncertificate for liveness probes to healthcheck etcd renewed\ncertificate for etcd nodes to communicate with each other renewed\ncertificate for serving etcd renewed\ncertificate for the front proxy client renewed\ncertificate embedded in the kubeconfig file for the scheduler manager to use renewed\n\nDone renewing certificates. You must restart the kube-apiserver, kube-controller-manager, kube-scheduler and etcd, so that they can use the new certificates.\n\n```\n\n### 查看证书时间\n\n```bash\n[root@master kubernetes]# kubeadm certs check-expiration\n[check-expiration] Reading configuration from the cluster...\n[check-expiration] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'\n\nCERTIFICATE                EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   EXTERNALLY MANAGED\nadmin.conf                 Nov 06, 2122 05:58 UTC   99y             ca                      no      \napiserver                  Nov 06, 2122 05:58 UTC   99y             ca                      no      \napiserver-etcd-client      Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      \napiserver-kubelet-client   Nov 06, 2122 05:58 UTC   99y             ca                      no      \ncontroller-manager.conf    Nov 06, 2122 05:58 UTC   99y             ca                      no      \netcd-healthcheck-client    Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      \netcd-peer                  Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      \netcd-server                Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      \nfront-proxy-client         Nov 06, 2122 05:58 UTC   99y             front-proxy-ca          no      \nscheduler.conf             Nov 06, 2122 05:58 UTC   99y             ca                      no      \n\nCERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   EXTERNALLY MANAGED\nca                      Nov 03, 2032 07:37 UTC   9y              no      \netcd-ca                 Nov 03, 2032 07:37 UTC   9y              no      \nfront-proxy-ca          Nov 03, 2032 07:37 UTC   9y              no      \n```\n\n### 注意\n\n正常执行完成过后，出现etcd证书9y的情况，需要在初始化是使用编译后的`kubeadm`\n","slug":"kubernetes更新证书100年","published":1,"updated":"2022-12-22T12:21:57.833Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcwycosn000qh0u2cq6td39n","content":"<h2 id=\"kubernetes更新证书100年\"><a href=\"#kubernetes更新证书100年\" class=\"headerlink\" title=\"kubernetes更新证书100年\"></a>kubernetes更新证书100年</h2><p>Kubernetes 中大量用到了证书, 比如 ca证书、以及 kubelet、apiserver、proxy、etcd等组件，还有 kubeconfig 文件。</p>\n<p>如果证书过期，轻则无法登录 Kubernetes 集群，重则整个集群异常。</p>\n<p>为了解决证书过期的问题，一般有以下几种方式：</p>\n<p>1.大幅延长证书有效期，短则 10年，长则 100 年；</p>\n<p>2.证书快过期是自动轮换，如 Rancher 的 K3s，RKE2 就采用这种方式；</p>\n<p>3.增加证书过期的监控，便于提早发现证书过期问题并人工介入</p>\n<h3 id=\"获取源码\"><a href=\"#获取源码\" class=\"headerlink\" title=\"获取源码\"></a>获取源码</h3><h4 id=\"通过github\"><a href=\"#通过github\" class=\"headerlink\" title=\"通过github\"></a>通过github</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#拉取github代码</span><br>git <span class=\"hljs-built_in\">clone</span> https://github.com/kubernetes/kubernetes.git<br><span class=\"hljs-comment\">#切换到使用的kubernetes版本</span><br>git checkout -b remotes/origin/release-1.20 v1.20.15<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"下载源码\"><a href=\"#下载源码\" class=\"headerlink\" title=\"下载源码\"></a>下载源码</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">wget https://github.com/kubernetes/kubernetes/archive/v1.25.5.tar.gz<br>tar -zxvf kubernetes-1.25.5.tar.gz<br><span class=\"hljs-built_in\">mv</span> kubernetes-1.25.5 kubernetes<br><span class=\"hljs-built_in\">cd</span> kubernetes<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"修改证书默认事件\"><a href=\"#修改证书默认事件\" class=\"headerlink\" title=\"修改证书默认事件\"></a>修改证书默认事件</h3><blockquote>\n<p> vim staging/src/k8s.io/client-go/util/cert/cert.go</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">func NewSelfSignedCACert(cfg Config, key crypto.Signer) (*x509.Certificate, error) &#123;<br>        now := time.Now()<br>        tmpl := x509.Certificate&#123;<br>                SerialNumber: new(big.Int).SetInt64(0),<br>                Subject: pkix.Name&#123;<br>                        CommonName:   cfg.CommonName,<br>                        Organization: cfg.Organization,<br>                &#125;,<br>                NotBefore:             now.UTC(),<br>                //NotAfter:              now.Add(duration365d * 10).UTC(),<br>               <span class=\"hljs-comment\">#//update cert time.</span><br>                NotAfter:              now.Add(duration365d * 100).UTC(),<br>                KeyUsage:              x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature | x509.KeyUsageCertSign,<br>                BasicConstraintsValid: <span class=\"hljs-literal\">true</span>,<br>                IsCA:                  <span class=\"hljs-literal\">true</span>,<br>        &#125;<br><br>        certDERBytes, err := x509.CreateCertificate(cryptorand.Reader, &amp;tmpl, &amp;tmpl, key.Public(), key)<br>        <span class=\"hljs-keyword\">if</span> err != nil &#123;<br>                <span class=\"hljs-built_in\">return</span> nil, err<br>        &#125;<br>        <span class=\"hljs-built_in\">return</span> x509.ParseCertificate(certDERBytes)<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>vim cmd/kubeadm/app/constants/constants.go</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">const (<br>        // KubernetesDir is the directory Kubernetes owns <span class=\"hljs-keyword\">for</span> storing various configuration files<br>        KubernetesDir = <span class=\"hljs-string\">&quot;/etc/kubernetes&quot;</span><br>        // ManifestsSubDirName defines directory name to store manifests<br>        ManifestsSubDirName = <span class=\"hljs-string\">&quot;manifests&quot;</span><br>        // TempDirForKubeadm defines temporary directory <span class=\"hljs-keyword\">for</span> kubeadm<br>        // should be joined with KubernetesDir.<br>        TempDirForKubeadm = <span class=\"hljs-string\">&quot;tmp&quot;</span><br><br>        // CertificateValidity defines the validity <span class=\"hljs-keyword\">for</span> all the signed certificates generated by kubeadm<br>        <span class=\"hljs-comment\">#// update this CertificateValidity</span><br>        CertificateValidity = time.Hour * 24 * 365 * 100<br><br>        // CACertAndKeyBaseName defines certificate authority base name<br>        CACertAndKeyBaseName = <span class=\"hljs-string\">&quot;ca&quot;</span><br>        // CACertName defines certificate name<br>        CACertName = <span class=\"hljs-string\">&quot;ca.crt&quot;</span><br>        // CAKeyName defines certificate name<br>        CAKeyName = <span class=\"hljs-string\">&quot;ca.key&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h3><h4 id=\"本机编译\"><a href=\"#本机编译\" class=\"headerlink\" title=\"本机编译\"></a>本机编译</h4><p>安装依赖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">yum install gcc make -y &amp;&amp; yum install rsync jq -y<br></code></pre></td></tr></table></figure>\n\n<p>安装Golang环境</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#查看需要的goLang版本</span><br>[root@master kubernetes]<span class=\"hljs-comment\"># cat ./build/build-image/cross/VERSION</span><br>v1.25.0-go1.19.4-bullseye.0<br><span class=\"hljs-comment\">#下载</span><br>wget https://dl.google.com/go/go1.19.4.linux-amd64.tar.gz<br><span class=\"hljs-comment\">#解压到指定目录</span><br>tar zxvf go1.19.4.linux-amd64.tar.gz  -C /usr/local<br><span class=\"hljs-comment\">#临时生效</span><br><span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-variable\">$PATH</span>:/usr/local/go/bin<br><span class=\"hljs-comment\">#查看</span><br>go version<br></code></pre></td></tr></table></figure>\n\n<p>编译</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">make all WHAT=cmd/kubeadm GOFLAGS=-v<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"更新kubeamd\"><a href=\"#更新kubeamd\" class=\"headerlink\" title=\"更新kubeamd\"></a>更新kubeamd</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">mv</span> /usr/bin/kubeadm /usr/bin/kubeadm_backup<br><span class=\"hljs-built_in\">cp</span> _output/local/bin/linux/amd64/kubeadm /usr/bin/kubeadm<br><span class=\"hljs-built_in\">chmod</span> +x /usr/bin/kubeadm<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"续订证书\"><a href=\"#续订证书\" class=\"headerlink\" title=\"续订证书\"></a>续订证书</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">[root@master kubernetes]<span class=\"hljs-comment\"># kubeadm certs renew all</span><br>[renew] Reading configuration from the cluster...<br>[renew] FYI: You can look at this config file with <span class=\"hljs-string\">&#x27;kubectl -n kube-system get cm kubeadm-config -o yaml&#x27;</span><br><br>certificate embedded <span class=\"hljs-keyword\">in</span> the kubeconfig file <span class=\"hljs-keyword\">for</span> the admin to use and <span class=\"hljs-keyword\">for</span> kubeadm itself renewed<br>certificate <span class=\"hljs-keyword\">for</span> serving the Kubernetes API renewed<br>certificate the apiserver uses to access etcd renewed<br>certificate <span class=\"hljs-keyword\">for</span> the API server to connect to kubelet renewed<br>certificate embedded <span class=\"hljs-keyword\">in</span> the kubeconfig file <span class=\"hljs-keyword\">for</span> the controller manager to use renewed<br>certificate <span class=\"hljs-keyword\">for</span> liveness probes to healthcheck etcd renewed<br>certificate <span class=\"hljs-keyword\">for</span> etcd nodes to communicate with each other renewed<br>certificate <span class=\"hljs-keyword\">for</span> serving etcd renewed<br>certificate <span class=\"hljs-keyword\">for</span> the front proxy client renewed<br>certificate embedded <span class=\"hljs-keyword\">in</span> the kubeconfig file <span class=\"hljs-keyword\">for</span> the scheduler manager to use renewed<br><br>Done renewing certificates. You must restart the kube-apiserver, kube-controller-manager, kube-scheduler and etcd, so that they can use the new certificates.<br><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看证书时间\"><a href=\"#查看证书时间\" class=\"headerlink\" title=\"查看证书时间\"></a>查看证书时间</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">[root@master kubernetes]<span class=\"hljs-comment\"># kubeadm certs check-expiration</span><br>[check-expiration] Reading configuration from the cluster...<br>[check-expiration] FYI: You can look at this config file with <span class=\"hljs-string\">&#x27;kubectl -n kube-system get cm kubeadm-config -o yaml&#x27;</span><br><br>CERTIFICATE                EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   EXTERNALLY MANAGED<br>admin.conf                 Nov 06, 2122 05:58 UTC   99y             ca                      no      <br>apiserver                  Nov 06, 2122 05:58 UTC   99y             ca                      no      <br>apiserver-etcd-client      Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      <br>apiserver-kubelet-client   Nov 06, 2122 05:58 UTC   99y             ca                      no      <br>controller-manager.conf    Nov 06, 2122 05:58 UTC   99y             ca                      no      <br>etcd-healthcheck-client    Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      <br>etcd-peer                  Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      <br>etcd-server                Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      <br>front-proxy-client         Nov 06, 2122 05:58 UTC   99y             front-proxy-ca          no      <br>scheduler.conf             Nov 06, 2122 05:58 UTC   99y             ca                      no      <br><br>CERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   EXTERNALLY MANAGED<br>ca                      Nov 03, 2032 07:37 UTC   9y              no      <br>etcd-ca                 Nov 03, 2032 07:37 UTC   9y              no      <br>front-proxy-ca          Nov 03, 2032 07:37 UTC   9y              no      <br></code></pre></td></tr></table></figure>\n\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><p>正常执行完成过后，出现etcd证书9y的情况，需要在初始化是使用编译后的<code>kubeadm</code></p>\n","site":{"data":{}},"wordcount":4472,"excerpt":"","more":"<h2 id=\"kubernetes更新证书100年\"><a href=\"#kubernetes更新证书100年\" class=\"headerlink\" title=\"kubernetes更新证书100年\"></a>kubernetes更新证书100年</h2><p>Kubernetes 中大量用到了证书, 比如 ca证书、以及 kubelet、apiserver、proxy、etcd等组件，还有 kubeconfig 文件。</p>\n<p>如果证书过期，轻则无法登录 Kubernetes 集群，重则整个集群异常。</p>\n<p>为了解决证书过期的问题，一般有以下几种方式：</p>\n<p>1.大幅延长证书有效期，短则 10年，长则 100 年；</p>\n<p>2.证书快过期是自动轮换，如 Rancher 的 K3s，RKE2 就采用这种方式；</p>\n<p>3.增加证书过期的监控，便于提早发现证书过期问题并人工介入</p>\n<h3 id=\"获取源码\"><a href=\"#获取源码\" class=\"headerlink\" title=\"获取源码\"></a>获取源码</h3><h4 id=\"通过github\"><a href=\"#通过github\" class=\"headerlink\" title=\"通过github\"></a>通过github</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#拉取github代码</span><br>git <span class=\"hljs-built_in\">clone</span> https://github.com/kubernetes/kubernetes.git<br><span class=\"hljs-comment\">#切换到使用的kubernetes版本</span><br>git checkout -b remotes/origin/release-1.20 v1.20.15<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"下载源码\"><a href=\"#下载源码\" class=\"headerlink\" title=\"下载源码\"></a>下载源码</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">wget https://github.com/kubernetes/kubernetes/archive/v1.25.5.tar.gz<br>tar -zxvf kubernetes-1.25.5.tar.gz<br><span class=\"hljs-built_in\">mv</span> kubernetes-1.25.5 kubernetes<br><span class=\"hljs-built_in\">cd</span> kubernetes<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"修改证书默认事件\"><a href=\"#修改证书默认事件\" class=\"headerlink\" title=\"修改证书默认事件\"></a>修改证书默认事件</h3><blockquote>\n<p> vim staging/src/k8s.io/client-go/util/cert/cert.go</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">func NewSelfSignedCACert(cfg Config, key crypto.Signer) (*x509.Certificate, error) &#123;<br>        now := time.Now()<br>        tmpl := x509.Certificate&#123;<br>                SerialNumber: new(big.Int).SetInt64(0),<br>                Subject: pkix.Name&#123;<br>                        CommonName:   cfg.CommonName,<br>                        Organization: cfg.Organization,<br>                &#125;,<br>                NotBefore:             now.UTC(),<br>                //NotAfter:              now.Add(duration365d * 10).UTC(),<br>               <span class=\"hljs-comment\">#//update cert time.</span><br>                NotAfter:              now.Add(duration365d * 100).UTC(),<br>                KeyUsage:              x509.KeyUsageKeyEncipherment | x509.KeyUsageDigitalSignature | x509.KeyUsageCertSign,<br>                BasicConstraintsValid: <span class=\"hljs-literal\">true</span>,<br>                IsCA:                  <span class=\"hljs-literal\">true</span>,<br>        &#125;<br><br>        certDERBytes, err := x509.CreateCertificate(cryptorand.Reader, &amp;tmpl, &amp;tmpl, key.Public(), key)<br>        <span class=\"hljs-keyword\">if</span> err != nil &#123;<br>                <span class=\"hljs-built_in\">return</span> nil, err<br>        &#125;<br>        <span class=\"hljs-built_in\">return</span> x509.ParseCertificate(certDERBytes)<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>vim cmd/kubeadm/app/constants/constants.go</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">const (<br>        // KubernetesDir is the directory Kubernetes owns <span class=\"hljs-keyword\">for</span> storing various configuration files<br>        KubernetesDir = <span class=\"hljs-string\">&quot;/etc/kubernetes&quot;</span><br>        // ManifestsSubDirName defines directory name to store manifests<br>        ManifestsSubDirName = <span class=\"hljs-string\">&quot;manifests&quot;</span><br>        // TempDirForKubeadm defines temporary directory <span class=\"hljs-keyword\">for</span> kubeadm<br>        // should be joined with KubernetesDir.<br>        TempDirForKubeadm = <span class=\"hljs-string\">&quot;tmp&quot;</span><br><br>        // CertificateValidity defines the validity <span class=\"hljs-keyword\">for</span> all the signed certificates generated by kubeadm<br>        <span class=\"hljs-comment\">#// update this CertificateValidity</span><br>        CertificateValidity = time.Hour * 24 * 365 * 100<br><br>        // CACertAndKeyBaseName defines certificate authority base name<br>        CACertAndKeyBaseName = <span class=\"hljs-string\">&quot;ca&quot;</span><br>        // CACertName defines certificate name<br>        CACertName = <span class=\"hljs-string\">&quot;ca.crt&quot;</span><br>        // CAKeyName defines certificate name<br>        CAKeyName = <span class=\"hljs-string\">&quot;ca.key&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h3><h4 id=\"本机编译\"><a href=\"#本机编译\" class=\"headerlink\" title=\"本机编译\"></a>本机编译</h4><p>安装依赖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">yum install gcc make -y &amp;&amp; yum install rsync jq -y<br></code></pre></td></tr></table></figure>\n\n<p>安装Golang环境</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#查看需要的goLang版本</span><br>[root@master kubernetes]<span class=\"hljs-comment\"># cat ./build/build-image/cross/VERSION</span><br>v1.25.0-go1.19.4-bullseye.0<br><span class=\"hljs-comment\">#下载</span><br>wget https://dl.google.com/go/go1.19.4.linux-amd64.tar.gz<br><span class=\"hljs-comment\">#解压到指定目录</span><br>tar zxvf go1.19.4.linux-amd64.tar.gz  -C /usr/local<br><span class=\"hljs-comment\">#临时生效</span><br><span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-variable\">$PATH</span>:/usr/local/go/bin<br><span class=\"hljs-comment\">#查看</span><br>go version<br></code></pre></td></tr></table></figure>\n\n<p>编译</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">make all WHAT=cmd/kubeadm GOFLAGS=-v<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"更新kubeamd\"><a href=\"#更新kubeamd\" class=\"headerlink\" title=\"更新kubeamd\"></a>更新kubeamd</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">mv</span> /usr/bin/kubeadm /usr/bin/kubeadm_backup<br><span class=\"hljs-built_in\">cp</span> _output/local/bin/linux/amd64/kubeadm /usr/bin/kubeadm<br><span class=\"hljs-built_in\">chmod</span> +x /usr/bin/kubeadm<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"续订证书\"><a href=\"#续订证书\" class=\"headerlink\" title=\"续订证书\"></a>续订证书</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">[root@master kubernetes]<span class=\"hljs-comment\"># kubeadm certs renew all</span><br>[renew] Reading configuration from the cluster...<br>[renew] FYI: You can look at this config file with <span class=\"hljs-string\">&#x27;kubectl -n kube-system get cm kubeadm-config -o yaml&#x27;</span><br><br>certificate embedded <span class=\"hljs-keyword\">in</span> the kubeconfig file <span class=\"hljs-keyword\">for</span> the admin to use and <span class=\"hljs-keyword\">for</span> kubeadm itself renewed<br>certificate <span class=\"hljs-keyword\">for</span> serving the Kubernetes API renewed<br>certificate the apiserver uses to access etcd renewed<br>certificate <span class=\"hljs-keyword\">for</span> the API server to connect to kubelet renewed<br>certificate embedded <span class=\"hljs-keyword\">in</span> the kubeconfig file <span class=\"hljs-keyword\">for</span> the controller manager to use renewed<br>certificate <span class=\"hljs-keyword\">for</span> liveness probes to healthcheck etcd renewed<br>certificate <span class=\"hljs-keyword\">for</span> etcd nodes to communicate with each other renewed<br>certificate <span class=\"hljs-keyword\">for</span> serving etcd renewed<br>certificate <span class=\"hljs-keyword\">for</span> the front proxy client renewed<br>certificate embedded <span class=\"hljs-keyword\">in</span> the kubeconfig file <span class=\"hljs-keyword\">for</span> the scheduler manager to use renewed<br><br>Done renewing certificates. You must restart the kube-apiserver, kube-controller-manager, kube-scheduler and etcd, so that they can use the new certificates.<br><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看证书时间\"><a href=\"#查看证书时间\" class=\"headerlink\" title=\"查看证书时间\"></a>查看证书时间</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">[root@master kubernetes]<span class=\"hljs-comment\"># kubeadm certs check-expiration</span><br>[check-expiration] Reading configuration from the cluster...<br>[check-expiration] FYI: You can look at this config file with <span class=\"hljs-string\">&#x27;kubectl -n kube-system get cm kubeadm-config -o yaml&#x27;</span><br><br>CERTIFICATE                EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   EXTERNALLY MANAGED<br>admin.conf                 Nov 06, 2122 05:58 UTC   99y             ca                      no      <br>apiserver                  Nov 06, 2122 05:58 UTC   99y             ca                      no      <br>apiserver-etcd-client      Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      <br>apiserver-kubelet-client   Nov 06, 2122 05:58 UTC   99y             ca                      no      <br>controller-manager.conf    Nov 06, 2122 05:58 UTC   99y             ca                      no      <br>etcd-healthcheck-client    Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      <br>etcd-peer                  Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      <br>etcd-server                Nov 06, 2122 05:58 UTC   99y             etcd-ca                 no      <br>front-proxy-client         Nov 06, 2122 05:58 UTC   99y             front-proxy-ca          no      <br>scheduler.conf             Nov 06, 2122 05:58 UTC   99y             ca                      no      <br><br>CERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   EXTERNALLY MANAGED<br>ca                      Nov 03, 2032 07:37 UTC   9y              no      <br>etcd-ca                 Nov 03, 2032 07:37 UTC   9y              no      <br>front-proxy-ca          Nov 03, 2032 07:37 UTC   9y              no      <br></code></pre></td></tr></table></figure>\n\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><p>正常执行完成过后，出现etcd证书9y的情况，需要在初始化是使用编译后的<code>kubeadm</code></p>\n"},{"title":"kubernetes笔记","date":"2022-04-10T05:18:34.000Z","description":"kubernetes笔记.","_content":"\n## kubernetes命令\n\n### node\n\n#### 获取节点列表\n\n```bash\nkubectl get nodes\n```\n\n#### 修改节点ROLES\n\n```bash\nkubectl label node [node-name] node-role.kubernetes.io/worker=worker\n```\n\n#### 创建节点标签\n\n```bash\nkubectl lable node [env_role]=[dev]\n```\n\n#### 查看节点信息\n\n```bash\nkubectl describe node [node-name]\n```\n\n#### 查看节点资源\n\n```bash\nkubectl describe node |grep -E '((Name|Roles):\\s{6,})|(\\s+(memory|cpu)\\s+[0-9]+\\w{0,2}.+%\\))'\n```\n\n#### 污点\n\n污点值：\n\n NoSchedule : 一定不会被调度\n\n PreferNoSchedule : 尽量不会被调度\n\n NoExecute: 不会调度，并且还会驱逐pod到其他node\n\n**添加污点**\n\n```bash\nkubectl taint node <node-name> <key>=<value>:<effect>\n```\n\n**删除污点**\n\n```bash\nkubectl taint node <node-name><key>[:<effect>]-\n```\n\n**去除master污点**\n\n```bash\nkubectl taint nodes --all node-role.kubernetes.io/master-\n```\n\n**查看节点污点信息**\n\n```bash\nkubectl describe node [node-name] |grep Taint\n```\n\n### Pod\n\n```bash\n# 创建pod\nkubectl create deployment [pod-name] --image=[image]\n\n# 普通获取\nkubectl get pod\n\n# 获取详细信息\nkubectl get pod -o wide\n\n# 获取pod详细信息\nkubectl describe pod [pod-name]\n\n# 按时间排序\nkubectl get pods --sort-by=.metadata.creationTimestamp\n\n# 查看集群正在运行的pod总数量\nkubectl get pods --all-namespaces | grep Running | wc -l\n\n# 获取指定标签\nkubectl get pod \n```\n\n#### 修改集群pod限制\n\n参考地址：[传送门](https://blog.csdn.net/qq_43164571/article/details/113106127)\n\n```bash\n#修改10-kubeadm.conf文件\nvim /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf\n添加：\n\tEnvironment=\"KUBELET_NODE_MAX_PODS=--max-pods=600\"\n\tExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS $KUBELET_NODE_MAX_PODS\n#重启\nsystemctl daemon-reload && systemctl restart kubelet\n```\n\n### svc\n\n#### 修改NodePort端口限制\n\n编辑 `vim /etc/kubernetes/manifests/kube-apiserver.yaml` 文件添加`- --service-node-port-range=20000-30000` 配置。\n\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    component: kube-apiserver\n    tier: control-plane\n  name: kube-apiserver\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - kube-apiserver\n    - --advertise-address=172.17.216.80\n    - --allow-privileged=true\n    - --authorization-mode=Node,RBAC\n    - --client-ca-file=/etc/kubernetes/pki/ca.crt\n    - --enable-admission-plugins=NodeRestriction\n    - --enable-bootstrap-token-auth=true\n    - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt\n    - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt\n    - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key\n    - --etcd-servers=https://127.0.0.1:2379\n    - --insecure-port=0\n    - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt\n    - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key\n    - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname\n    - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt\n    - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key\n    - --requestheader-allowed-names=front-proxy-client\n    - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt\n    - --requestheader-extra-headers-prefix=X-Remote-Extra-\n    - --requestheader-group-headers=X-Remote-Group\n    - --requestheader-username-headers=X-Remote-User\n    - --secure-port=6443\n    - --service-account-key-file=/etc/kubernetes/pki/sa.pub\n    - --service-cluster-ip-range=10.96.0.0/12\n    - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt\n    - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key\n    - --service-node-port-range=20000-30000\n```\n\n#### 重启资源\n\n```bash\nkubectl delete pod kube-apiserver-master -n kube-system\n```\n\n#### 注意\n\n- `对于已经创建的NodePort类型的Service，您需要删除重新创建`\n- `如果您的集群有多个 Master 节点，您需要逐个修改每个节点上的 /etc/kubernetes/manifests/kube-apiserver.yaml 文件，并重启 apiserver`\n\n### secret\n\n#### 添加secret\n\n```bash\nkubectl create secret docker-registry secret-harbor --namespace=default \\\n--docker-server=http://10.1.52.65 --docker-username=admin \\\n--docker-password=Harbor12345 --docker-email=xusenhao@piesat.cn\n```\n\n### yaml\n\n#### pod\n\n```bash\nkubectl   create  deployment  nginx  --image=nginx   --dry-run  -o  yaml  >  deployment.yaml\n```\n\nservice\n\n```bash\nkubectl expose  deployment  nginx  --port=80  --target-port=80  --type=NodePort --dry-run -o yaml > service.yaml\n```\n\n#### 处理状态处于Terminating的服务\n\n强删\n\n```bash\nkubectl patch pvc data-nfs-server-provisioner-0 -p '{\"metadata\":{\"finalizers\": [null]}}' --type merge\n```\n\n#### 编辑资源\n\n```bash\nKUBE_EDITOR=\"vim\" kuberctl edit pod test\n```\n\n#### 批量删除指定状态资源\n\n```bash\nkubectl get pod -n [pie-engine-infra] | grep [ImagePullBackOff] | awk '{print $1}' | xargs kubectl delete pod -n [pie-engine-infra]\n```\n\n### PVC\n\n### pvc等待pv分配\n\n参考地址 : [传送门](https://blog.csdn.net/weixin_45625174/article/details/123920122)\n\n出现的错误信息：\n\nwaiting for a volume to be created, either by external provisioner “gxf-nfs-storage” or manually created by system administrator**\n\n```bash\n#修改\nvim /etc/kubernetes/manifests/kube-apiserver.yaml\n#在- --tls-private-key-file=/etc/kubernetes/pki/apiserver.key下面添加如下：\n- --feature-gates=RemoveSelfLink=false\n#执行\nkubectl  apply -f /etc/kubernetes/manifests/kube-apiserver.yaml\n```\n\n## Helm安装\n\n### 下载Helm\n\n```bash\nwget https://get.helm.sh/helm-v3.2.4-linux-amd64.tar.gz\n```\n\n### 解压\n\n```bash\ntar -zxvf helm-v3.2.4-linux-amd64.tar.gz\n```\n\n### 迁移文件\n\n```bash\nmv linux-amd64/helm /usr/local/bin/helm\n```\n\n### 验证安装\n\n```bash\nhelm version\n```\n\n### 换源\n\n```bash\nhelm repo add apphub https://apphub.aliyuncs.com\n```\n\n### 查看源\n\n```bash\nhelm repo list\n```\n\n### 添加Harbor源\n\n```bash\nhelm repo add pie-chart http://10.1.52.65/chartrepo/pie-chart --username=admin --password=Harbor12345\n```\n\n## 接入托管kubernetes\n\n### 添加托管kubernetes\n\n```bash\nexport KUBECONFIG=$KUBECONFIG:${CONFIG_PATH}\n```\n\n例：export KUBECONFIG=$HOME/.kube/config:/root/config\n\n### 配置上下文\n\n#### 列出所有上下文信息\n\n```bash\nkubectl config get-contexts\n```\n\n#### 查看当前上下文信息\n\n```bash\nkubectl config current-context\n```\n\n#### 更改上下文信息\n\n```bash\nkubectl config use-context ${CONTEXT_NAME}\n```\n\n例：kubectl config use-context kubernetes-admin@kubernetes\n\n#### 更改上下文的元素\n\n```bash\nkubectl config set-context ${CONTEXT_NAME}|--current --${KEY}=${VALUE}\n```\n\n#### 生效\n\n```bash\nexport KUBECONFIG=/root/config\n```\n\n## kubernetes更换ip\n\n[传送门](https://blog.csdn.net/shelutai/article/details/122807511)\n\n[传送门](https://www.qikqiak.com/post/how-to-change-k8s-node-ip/)\n\n## kubernetes版本升级和降级\n\n[传送门](https://blog.csdn.net/qq_38419276/article/details/120603533)\n\n## kubeadm\n\n导出初始化时默认配置\n\n```bash\nkubeadm config print init-defaults\n```\n\n","source":"_posts/kubernetes笔记.md","raw":"---\ntitle: kubernetes笔记\ndate: 2022-04-10 13:18:34\ntags: kubernetes\ncategories: kubernetes\ndescription: kubernetes笔记.\n---\n\n## kubernetes命令\n\n### node\n\n#### 获取节点列表\n\n```bash\nkubectl get nodes\n```\n\n#### 修改节点ROLES\n\n```bash\nkubectl label node [node-name] node-role.kubernetes.io/worker=worker\n```\n\n#### 创建节点标签\n\n```bash\nkubectl lable node [env_role]=[dev]\n```\n\n#### 查看节点信息\n\n```bash\nkubectl describe node [node-name]\n```\n\n#### 查看节点资源\n\n```bash\nkubectl describe node |grep -E '((Name|Roles):\\s{6,})|(\\s+(memory|cpu)\\s+[0-9]+\\w{0,2}.+%\\))'\n```\n\n#### 污点\n\n污点值：\n\n NoSchedule : 一定不会被调度\n\n PreferNoSchedule : 尽量不会被调度\n\n NoExecute: 不会调度，并且还会驱逐pod到其他node\n\n**添加污点**\n\n```bash\nkubectl taint node <node-name> <key>=<value>:<effect>\n```\n\n**删除污点**\n\n```bash\nkubectl taint node <node-name><key>[:<effect>]-\n```\n\n**去除master污点**\n\n```bash\nkubectl taint nodes --all node-role.kubernetes.io/master-\n```\n\n**查看节点污点信息**\n\n```bash\nkubectl describe node [node-name] |grep Taint\n```\n\n### Pod\n\n```bash\n# 创建pod\nkubectl create deployment [pod-name] --image=[image]\n\n# 普通获取\nkubectl get pod\n\n# 获取详细信息\nkubectl get pod -o wide\n\n# 获取pod详细信息\nkubectl describe pod [pod-name]\n\n# 按时间排序\nkubectl get pods --sort-by=.metadata.creationTimestamp\n\n# 查看集群正在运行的pod总数量\nkubectl get pods --all-namespaces | grep Running | wc -l\n\n# 获取指定标签\nkubectl get pod \n```\n\n#### 修改集群pod限制\n\n参考地址：[传送门](https://blog.csdn.net/qq_43164571/article/details/113106127)\n\n```bash\n#修改10-kubeadm.conf文件\nvim /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf\n添加：\n\tEnvironment=\"KUBELET_NODE_MAX_PODS=--max-pods=600\"\n\tExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS $KUBELET_NODE_MAX_PODS\n#重启\nsystemctl daemon-reload && systemctl restart kubelet\n```\n\n### svc\n\n#### 修改NodePort端口限制\n\n编辑 `vim /etc/kubernetes/manifests/kube-apiserver.yaml` 文件添加`- --service-node-port-range=20000-30000` 配置。\n\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    component: kube-apiserver\n    tier: control-plane\n  name: kube-apiserver\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - kube-apiserver\n    - --advertise-address=172.17.216.80\n    - --allow-privileged=true\n    - --authorization-mode=Node,RBAC\n    - --client-ca-file=/etc/kubernetes/pki/ca.crt\n    - --enable-admission-plugins=NodeRestriction\n    - --enable-bootstrap-token-auth=true\n    - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt\n    - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt\n    - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key\n    - --etcd-servers=https://127.0.0.1:2379\n    - --insecure-port=0\n    - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt\n    - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key\n    - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname\n    - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt\n    - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key\n    - --requestheader-allowed-names=front-proxy-client\n    - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt\n    - --requestheader-extra-headers-prefix=X-Remote-Extra-\n    - --requestheader-group-headers=X-Remote-Group\n    - --requestheader-username-headers=X-Remote-User\n    - --secure-port=6443\n    - --service-account-key-file=/etc/kubernetes/pki/sa.pub\n    - --service-cluster-ip-range=10.96.0.0/12\n    - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt\n    - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key\n    - --service-node-port-range=20000-30000\n```\n\n#### 重启资源\n\n```bash\nkubectl delete pod kube-apiserver-master -n kube-system\n```\n\n#### 注意\n\n- `对于已经创建的NodePort类型的Service，您需要删除重新创建`\n- `如果您的集群有多个 Master 节点，您需要逐个修改每个节点上的 /etc/kubernetes/manifests/kube-apiserver.yaml 文件，并重启 apiserver`\n\n### secret\n\n#### 添加secret\n\n```bash\nkubectl create secret docker-registry secret-harbor --namespace=default \\\n--docker-server=http://10.1.52.65 --docker-username=admin \\\n--docker-password=Harbor12345 --docker-email=xusenhao@piesat.cn\n```\n\n### yaml\n\n#### pod\n\n```bash\nkubectl   create  deployment  nginx  --image=nginx   --dry-run  -o  yaml  >  deployment.yaml\n```\n\nservice\n\n```bash\nkubectl expose  deployment  nginx  --port=80  --target-port=80  --type=NodePort --dry-run -o yaml > service.yaml\n```\n\n#### 处理状态处于Terminating的服务\n\n强删\n\n```bash\nkubectl patch pvc data-nfs-server-provisioner-0 -p '{\"metadata\":{\"finalizers\": [null]}}' --type merge\n```\n\n#### 编辑资源\n\n```bash\nKUBE_EDITOR=\"vim\" kuberctl edit pod test\n```\n\n#### 批量删除指定状态资源\n\n```bash\nkubectl get pod -n [pie-engine-infra] | grep [ImagePullBackOff] | awk '{print $1}' | xargs kubectl delete pod -n [pie-engine-infra]\n```\n\n### PVC\n\n### pvc等待pv分配\n\n参考地址 : [传送门](https://blog.csdn.net/weixin_45625174/article/details/123920122)\n\n出现的错误信息：\n\nwaiting for a volume to be created, either by external provisioner “gxf-nfs-storage” or manually created by system administrator**\n\n```bash\n#修改\nvim /etc/kubernetes/manifests/kube-apiserver.yaml\n#在- --tls-private-key-file=/etc/kubernetes/pki/apiserver.key下面添加如下：\n- --feature-gates=RemoveSelfLink=false\n#执行\nkubectl  apply -f /etc/kubernetes/manifests/kube-apiserver.yaml\n```\n\n## Helm安装\n\n### 下载Helm\n\n```bash\nwget https://get.helm.sh/helm-v3.2.4-linux-amd64.tar.gz\n```\n\n### 解压\n\n```bash\ntar -zxvf helm-v3.2.4-linux-amd64.tar.gz\n```\n\n### 迁移文件\n\n```bash\nmv linux-amd64/helm /usr/local/bin/helm\n```\n\n### 验证安装\n\n```bash\nhelm version\n```\n\n### 换源\n\n```bash\nhelm repo add apphub https://apphub.aliyuncs.com\n```\n\n### 查看源\n\n```bash\nhelm repo list\n```\n\n### 添加Harbor源\n\n```bash\nhelm repo add pie-chart http://10.1.52.65/chartrepo/pie-chart --username=admin --password=Harbor12345\n```\n\n## 接入托管kubernetes\n\n### 添加托管kubernetes\n\n```bash\nexport KUBECONFIG=$KUBECONFIG:${CONFIG_PATH}\n```\n\n例：export KUBECONFIG=$HOME/.kube/config:/root/config\n\n### 配置上下文\n\n#### 列出所有上下文信息\n\n```bash\nkubectl config get-contexts\n```\n\n#### 查看当前上下文信息\n\n```bash\nkubectl config current-context\n```\n\n#### 更改上下文信息\n\n```bash\nkubectl config use-context ${CONTEXT_NAME}\n```\n\n例：kubectl config use-context kubernetes-admin@kubernetes\n\n#### 更改上下文的元素\n\n```bash\nkubectl config set-context ${CONTEXT_NAME}|--current --${KEY}=${VALUE}\n```\n\n#### 生效\n\n```bash\nexport KUBECONFIG=/root/config\n```\n\n## kubernetes更换ip\n\n[传送门](https://blog.csdn.net/shelutai/article/details/122807511)\n\n[传送门](https://www.qikqiak.com/post/how-to-change-k8s-node-ip/)\n\n## kubernetes版本升级和降级\n\n[传送门](https://blog.csdn.net/qq_38419276/article/details/120603533)\n\n## kubeadm\n\n导出初始化时默认配置\n\n```bash\nkubeadm config print init-defaults\n```\n\n","slug":"kubernetes笔记","published":1,"updated":"2022-12-22T12:22:15.470Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcwycosp000th0u2hy7pf7tv","content":"<h2 id=\"kubernetes命令\"><a href=\"#kubernetes命令\" class=\"headerlink\" title=\"kubernetes命令\"></a>kubernetes命令</h2><h3 id=\"node\"><a href=\"#node\" class=\"headerlink\" title=\"node\"></a>node</h3><h4 id=\"获取节点列表\"><a href=\"#获取节点列表\" class=\"headerlink\" title=\"获取节点列表\"></a>获取节点列表</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl get nodes<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"修改节点ROLES\"><a href=\"#修改节点ROLES\" class=\"headerlink\" title=\"修改节点ROLES\"></a>修改节点ROLES</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl label node [node-name] node-role.kubernetes.io/worker=worker<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"创建节点标签\"><a href=\"#创建节点标签\" class=\"headerlink\" title=\"创建节点标签\"></a>创建节点标签</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl lable node [env_role]=[dev]<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"查看节点信息\"><a href=\"#查看节点信息\" class=\"headerlink\" title=\"查看节点信息\"></a>查看节点信息</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl describe node [node-name]<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"查看节点资源\"><a href=\"#查看节点资源\" class=\"headerlink\" title=\"查看节点资源\"></a>查看节点资源</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl describe node |grep -E <span class=\"hljs-string\">&#x27;((Name|Roles):\\s&#123;6,&#125;)|(\\s+(memory|cpu)\\s+[0-9]+\\w&#123;0,2&#125;.+%\\))&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"污点\"><a href=\"#污点\" class=\"headerlink\" title=\"污点\"></a>污点</h4><p>污点值：</p>\n<p> NoSchedule : 一定不会被调度</p>\n<p> PreferNoSchedule : 尽量不会被调度</p>\n<p> NoExecute: 不会调度，并且还会驱逐pod到其他node</p>\n<p><strong>添加污点</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl taint node &lt;node-name&gt; &lt;key&gt;=&lt;value&gt;:&lt;effect&gt;<br></code></pre></td></tr></table></figure>\n\n<p><strong>删除污点</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl taint node &lt;node-name&gt;&lt;key&gt;[:&lt;effect&gt;]-<br></code></pre></td></tr></table></figure>\n\n<p><strong>去除master污点</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl taint nodes --all node-role.kubernetes.io/master-<br></code></pre></td></tr></table></figure>\n\n<p><strong>查看节点污点信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl describe node [node-name] |grep Taint<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Pod\"><a href=\"#Pod\" class=\"headerlink\" title=\"Pod\"></a>Pod</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 创建pod</span><br>kubectl create deployment [pod-name] --image=[image]<br><br><span class=\"hljs-comment\"># 普通获取</span><br>kubectl get pod<br><br><span class=\"hljs-comment\"># 获取详细信息</span><br>kubectl get pod -o wide<br><br><span class=\"hljs-comment\"># 获取pod详细信息</span><br>kubectl describe pod [pod-name]<br><br><span class=\"hljs-comment\"># 按时间排序</span><br>kubectl get pods --sort-by=.metadata.creationTimestamp<br><br><span class=\"hljs-comment\"># 查看集群正在运行的pod总数量</span><br>kubectl get pods --all-namespaces | grep Running | <span class=\"hljs-built_in\">wc</span> -l<br><br><span class=\"hljs-comment\"># 获取指定标签</span><br>kubectl get pod <br></code></pre></td></tr></table></figure>\n\n<h4 id=\"修改集群pod限制\"><a href=\"#修改集群pod限制\" class=\"headerlink\" title=\"修改集群pod限制\"></a>修改集群pod限制</h4><p>参考地址：<a href=\"https://blog.csdn.net/qq_43164571/article/details/113106127\">传送门</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#修改10-kubeadm.conf文件</span><br>vim /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf<br>添加：<br>\tEnvironment=<span class=\"hljs-string\">&quot;KUBELET_NODE_MAX_PODS=--max-pods=600&quot;</span><br>\tExecStart=/usr/bin/kubelet <span class=\"hljs-variable\">$KUBELET_KUBECONFIG_ARGS</span> <span class=\"hljs-variable\">$KUBELET_CONFIG_ARGS</span> <span class=\"hljs-variable\">$KUBELET_KUBEADM_ARGS</span> <span class=\"hljs-variable\">$KUBELET_EXTRA_ARGS</span> <span class=\"hljs-variable\">$KUBELET_NODE_MAX_PODS</span><br><span class=\"hljs-comment\">#重启</span><br>systemctl daemon-reload &amp;&amp; systemctl restart kubelet<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"svc\"><a href=\"#svc\" class=\"headerlink\" title=\"svc\"></a>svc</h3><h4 id=\"修改NodePort端口限制\"><a href=\"#修改NodePort端口限制\" class=\"headerlink\" title=\"修改NodePort端口限制\"></a>修改NodePort端口限制</h4><p>编辑 <code>vim /etc/kubernetes/manifests/kube-apiserver.yaml</code> 文件添加<code>- --service-node-port-range=20000-30000</code> 配置。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Pod</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">creationTimestamp:</span> <span class=\"hljs-literal\">null</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">kube-apiserver</span><br>    <span class=\"hljs-attr\">tier:</span> <span class=\"hljs-string\">control-plane</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">kube-apiserver</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">kube-system</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">containers:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">command:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">kube-apiserver</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--advertise-address=172.17.216.80</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--allow-privileged=true</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--authorization-mode=Node,RBAC</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--client-ca-file=/etc/kubernetes/pki/ca.crt</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--enable-admission-plugins=NodeRestriction</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--enable-bootstrap-token-auth=true</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--etcd-servers=https://127.0.0.1:2379</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--insecure-port=0</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--requestheader-allowed-names=front-proxy-client</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--requestheader-extra-headers-prefix=X-Remote-Extra-</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--requestheader-group-headers=X-Remote-Group</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--requestheader-username-headers=X-Remote-User</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--secure-port=6443</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--service-account-key-file=/etc/kubernetes/pki/sa.pub</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--service-cluster-ip-range=10.96.0.0/12</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--tls-cert-file=/etc/kubernetes/pki/apiserver.crt</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--tls-private-key-file=/etc/kubernetes/pki/apiserver.key</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--service-node-port-range=20000-30000</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"重启资源\"><a href=\"#重启资源\" class=\"headerlink\" title=\"重启资源\"></a>重启资源</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl delete pod kube-apiserver-master -n kube-system<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h4><ul>\n<li><code>对于已经创建的NodePort类型的Service，您需要删除重新创建</code></li>\n<li><code>如果您的集群有多个 Master 节点，您需要逐个修改每个节点上的 /etc/kubernetes/manifests/kube-apiserver.yaml 文件，并重启 apiserver</code></li>\n</ul>\n<h3 id=\"secret\"><a href=\"#secret\" class=\"headerlink\" title=\"secret\"></a>secret</h3><h4 id=\"添加secret\"><a href=\"#添加secret\" class=\"headerlink\" title=\"添加secret\"></a>添加secret</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl create secret docker-registry secret-harbor --namespace=default \\<br>--docker-server=http://10.1.52.65 --docker-username=admin \\<br>--docker-password=Harbor12345 --docker-email=xusenhao@piesat.cn<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"yaml\"><a href=\"#yaml\" class=\"headerlink\" title=\"yaml\"></a>yaml</h3><h4 id=\"pod\"><a href=\"#pod\" class=\"headerlink\" title=\"pod\"></a>pod</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl   create  deployment  nginx  --image=nginx   --dry-run  -o  yaml  &gt;  deployment.yaml<br></code></pre></td></tr></table></figure>\n\n<p>service</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl expose  deployment  nginx  --port=80  --target-port=80  --<span class=\"hljs-built_in\">type</span>=NodePort --dry-run -o yaml &gt; service.yaml<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"处理状态处于Terminating的服务\"><a href=\"#处理状态处于Terminating的服务\" class=\"headerlink\" title=\"处理状态处于Terminating的服务\"></a>处理状态处于Terminating的服务</h4><p>强删</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl patch pvc data-nfs-server-provisioner-0 -p <span class=\"hljs-string\">&#x27;&#123;&quot;metadata&quot;:&#123;&quot;finalizers&quot;: [null]&#125;&#125;&#x27;</span> --<span class=\"hljs-built_in\">type</span> merge<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"编辑资源\"><a href=\"#编辑资源\" class=\"headerlink\" title=\"编辑资源\"></a>编辑资源</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">KUBE_EDITOR=<span class=\"hljs-string\">&quot;vim&quot;</span> kuberctl edit pod <span class=\"hljs-built_in\">test</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"批量删除指定状态资源\"><a href=\"#批量删除指定状态资源\" class=\"headerlink\" title=\"批量删除指定状态资源\"></a>批量删除指定状态资源</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl get pod -n [pie-engine-infra] | grep [ImagePullBackOff] | awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span> | xargs kubectl delete pod -n [pie-engine-infra]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"PVC\"><a href=\"#PVC\" class=\"headerlink\" title=\"PVC\"></a>PVC</h3><h3 id=\"pvc等待pv分配\"><a href=\"#pvc等待pv分配\" class=\"headerlink\" title=\"pvc等待pv分配\"></a>pvc等待pv分配</h3><p>参考地址 : <a href=\"https://blog.csdn.net/weixin_45625174/article/details/123920122\">传送门</a></p>\n<p>出现的错误信息：</p>\n<p>waiting for a volume to be created, either by external provisioner “gxf-nfs-storage” or manually created by system administrator**</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#修改</span><br>vim /etc/kubernetes/manifests/kube-apiserver.yaml<br><span class=\"hljs-comment\">#在- --tls-private-key-file=/etc/kubernetes/pki/apiserver.key下面添加如下：</span><br>- --feature-gates=RemoveSelfLink=<span class=\"hljs-literal\">false</span><br><span class=\"hljs-comment\">#执行</span><br>kubectl  apply -f /etc/kubernetes/manifests/kube-apiserver.yaml<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Helm安装\"><a href=\"#Helm安装\" class=\"headerlink\" title=\"Helm安装\"></a>Helm安装</h2><h3 id=\"下载Helm\"><a href=\"#下载Helm\" class=\"headerlink\" title=\"下载Helm\"></a>下载Helm</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">wget https://get.helm.sh/helm-v3.2.4-linux-amd64.tar.gz<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">tar -zxvf helm-v3.2.4-linux-amd64.tar.gz<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"迁移文件\"><a href=\"#迁移文件\" class=\"headerlink\" title=\"迁移文件\"></a>迁移文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">mv</span> linux-amd64/helm /usr/local/bin/helm<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"验证安装\"><a href=\"#验证安装\" class=\"headerlink\" title=\"验证安装\"></a>验证安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">helm version<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"换源\"><a href=\"#换源\" class=\"headerlink\" title=\"换源\"></a>换源</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">helm repo add apphub https://apphub.aliyuncs.com<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看源\"><a href=\"#查看源\" class=\"headerlink\" title=\"查看源\"></a>查看源</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">helm repo list<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加Harbor源\"><a href=\"#添加Harbor源\" class=\"headerlink\" title=\"添加Harbor源\"></a>添加Harbor源</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">helm repo add pie-chart http://10.1.52.65/chartrepo/pie-chart --username=admin --password=Harbor12345<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"接入托管kubernetes\"><a href=\"#接入托管kubernetes\" class=\"headerlink\" title=\"接入托管kubernetes\"></a>接入托管kubernetes</h2><h3 id=\"添加托管kubernetes\"><a href=\"#添加托管kubernetes\" class=\"headerlink\" title=\"添加托管kubernetes\"></a>添加托管kubernetes</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">export</span> KUBECONFIG=<span class=\"hljs-variable\">$KUBECONFIG</span>:<span class=\"hljs-variable\">$&#123;CONFIG_PATH&#125;</span><br></code></pre></td></tr></table></figure>\n\n<p>例：export KUBECONFIG=$HOME/.kube/config:/root/config</p>\n<h3 id=\"配置上下文\"><a href=\"#配置上下文\" class=\"headerlink\" title=\"配置上下文\"></a>配置上下文</h3><h4 id=\"列出所有上下文信息\"><a href=\"#列出所有上下文信息\" class=\"headerlink\" title=\"列出所有上下文信息\"></a>列出所有上下文信息</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl config get-contexts<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"查看当前上下文信息\"><a href=\"#查看当前上下文信息\" class=\"headerlink\" title=\"查看当前上下文信息\"></a>查看当前上下文信息</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl config current-context<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"更改上下文信息\"><a href=\"#更改上下文信息\" class=\"headerlink\" title=\"更改上下文信息\"></a>更改上下文信息</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl config use-context <span class=\"hljs-variable\">$&#123;CONTEXT_NAME&#125;</span><br></code></pre></td></tr></table></figure>\n\n<p>例：kubectl config use-context kubernetes-admin@kubernetes</p>\n<h4 id=\"更改上下文的元素\"><a href=\"#更改上下文的元素\" class=\"headerlink\" title=\"更改上下文的元素\"></a>更改上下文的元素</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl config set-context <span class=\"hljs-variable\">$&#123;CONTEXT_NAME&#125;</span>|--current --<span class=\"hljs-variable\">$&#123;KEY&#125;</span>=<span class=\"hljs-variable\">$&#123;VALUE&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"生效\"><a href=\"#生效\" class=\"headerlink\" title=\"生效\"></a>生效</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">export</span> KUBECONFIG=/root/config<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"kubernetes更换ip\"><a href=\"#kubernetes更换ip\" class=\"headerlink\" title=\"kubernetes更换ip\"></a>kubernetes更换ip</h2><p><a href=\"https://blog.csdn.net/shelutai/article/details/122807511\">传送门</a></p>\n<p><a href=\"https://www.qikqiak.com/post/how-to-change-k8s-node-ip/\">传送门</a></p>\n<h2 id=\"kubernetes版本升级和降级\"><a href=\"#kubernetes版本升级和降级\" class=\"headerlink\" title=\"kubernetes版本升级和降级\"></a>kubernetes版本升级和降级</h2><p><a href=\"https://blog.csdn.net/qq_38419276/article/details/120603533\">传送门</a></p>\n<h2 id=\"kubeadm\"><a href=\"#kubeadm\" class=\"headerlink\" title=\"kubeadm\"></a>kubeadm</h2><p>导出初始化时默认配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubeadm config <span class=\"hljs-built_in\">print</span> init-defaults<br></code></pre></td></tr></table></figure>\n\n","site":{"data":{}},"wordcount":5167,"excerpt":"","more":"<h2 id=\"kubernetes命令\"><a href=\"#kubernetes命令\" class=\"headerlink\" title=\"kubernetes命令\"></a>kubernetes命令</h2><h3 id=\"node\"><a href=\"#node\" class=\"headerlink\" title=\"node\"></a>node</h3><h4 id=\"获取节点列表\"><a href=\"#获取节点列表\" class=\"headerlink\" title=\"获取节点列表\"></a>获取节点列表</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl get nodes<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"修改节点ROLES\"><a href=\"#修改节点ROLES\" class=\"headerlink\" title=\"修改节点ROLES\"></a>修改节点ROLES</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl label node [node-name] node-role.kubernetes.io/worker=worker<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"创建节点标签\"><a href=\"#创建节点标签\" class=\"headerlink\" title=\"创建节点标签\"></a>创建节点标签</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl lable node [env_role]=[dev]<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"查看节点信息\"><a href=\"#查看节点信息\" class=\"headerlink\" title=\"查看节点信息\"></a>查看节点信息</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl describe node [node-name]<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"查看节点资源\"><a href=\"#查看节点资源\" class=\"headerlink\" title=\"查看节点资源\"></a>查看节点资源</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl describe node |grep -E <span class=\"hljs-string\">&#x27;((Name|Roles):\\s&#123;6,&#125;)|(\\s+(memory|cpu)\\s+[0-9]+\\w&#123;0,2&#125;.+%\\))&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"污点\"><a href=\"#污点\" class=\"headerlink\" title=\"污点\"></a>污点</h4><p>污点值：</p>\n<p> NoSchedule : 一定不会被调度</p>\n<p> PreferNoSchedule : 尽量不会被调度</p>\n<p> NoExecute: 不会调度，并且还会驱逐pod到其他node</p>\n<p><strong>添加污点</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl taint node &lt;node-name&gt; &lt;key&gt;=&lt;value&gt;:&lt;effect&gt;<br></code></pre></td></tr></table></figure>\n\n<p><strong>删除污点</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl taint node &lt;node-name&gt;&lt;key&gt;[:&lt;effect&gt;]-<br></code></pre></td></tr></table></figure>\n\n<p><strong>去除master污点</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl taint nodes --all node-role.kubernetes.io/master-<br></code></pre></td></tr></table></figure>\n\n<p><strong>查看节点污点信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl describe node [node-name] |grep Taint<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Pod\"><a href=\"#Pod\" class=\"headerlink\" title=\"Pod\"></a>Pod</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 创建pod</span><br>kubectl create deployment [pod-name] --image=[image]<br><br><span class=\"hljs-comment\"># 普通获取</span><br>kubectl get pod<br><br><span class=\"hljs-comment\"># 获取详细信息</span><br>kubectl get pod -o wide<br><br><span class=\"hljs-comment\"># 获取pod详细信息</span><br>kubectl describe pod [pod-name]<br><br><span class=\"hljs-comment\"># 按时间排序</span><br>kubectl get pods --sort-by=.metadata.creationTimestamp<br><br><span class=\"hljs-comment\"># 查看集群正在运行的pod总数量</span><br>kubectl get pods --all-namespaces | grep Running | <span class=\"hljs-built_in\">wc</span> -l<br><br><span class=\"hljs-comment\"># 获取指定标签</span><br>kubectl get pod <br></code></pre></td></tr></table></figure>\n\n<h4 id=\"修改集群pod限制\"><a href=\"#修改集群pod限制\" class=\"headerlink\" title=\"修改集群pod限制\"></a>修改集群pod限制</h4><p>参考地址：<a href=\"https://blog.csdn.net/qq_43164571/article/details/113106127\">传送门</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#修改10-kubeadm.conf文件</span><br>vim /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf<br>添加：<br>\tEnvironment=<span class=\"hljs-string\">&quot;KUBELET_NODE_MAX_PODS=--max-pods=600&quot;</span><br>\tExecStart=/usr/bin/kubelet <span class=\"hljs-variable\">$KUBELET_KUBECONFIG_ARGS</span> <span class=\"hljs-variable\">$KUBELET_CONFIG_ARGS</span> <span class=\"hljs-variable\">$KUBELET_KUBEADM_ARGS</span> <span class=\"hljs-variable\">$KUBELET_EXTRA_ARGS</span> <span class=\"hljs-variable\">$KUBELET_NODE_MAX_PODS</span><br><span class=\"hljs-comment\">#重启</span><br>systemctl daemon-reload &amp;&amp; systemctl restart kubelet<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"svc\"><a href=\"#svc\" class=\"headerlink\" title=\"svc\"></a>svc</h3><h4 id=\"修改NodePort端口限制\"><a href=\"#修改NodePort端口限制\" class=\"headerlink\" title=\"修改NodePort端口限制\"></a>修改NodePort端口限制</h4><p>编辑 <code>vim /etc/kubernetes/manifests/kube-apiserver.yaml</code> 文件添加<code>- --service-node-port-range=20000-30000</code> 配置。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Pod</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">creationTimestamp:</span> <span class=\"hljs-literal\">null</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">kube-apiserver</span><br>    <span class=\"hljs-attr\">tier:</span> <span class=\"hljs-string\">control-plane</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">kube-apiserver</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">kube-system</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">containers:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">command:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">kube-apiserver</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--advertise-address=172.17.216.80</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--allow-privileged=true</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--authorization-mode=Node,RBAC</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--client-ca-file=/etc/kubernetes/pki/ca.crt</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--enable-admission-plugins=NodeRestriction</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--enable-bootstrap-token-auth=true</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--etcd-servers=https://127.0.0.1:2379</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--insecure-port=0</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--requestheader-allowed-names=front-proxy-client</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--requestheader-extra-headers-prefix=X-Remote-Extra-</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--requestheader-group-headers=X-Remote-Group</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--requestheader-username-headers=X-Remote-User</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--secure-port=6443</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--service-account-key-file=/etc/kubernetes/pki/sa.pub</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--service-cluster-ip-range=10.96.0.0/12</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--tls-cert-file=/etc/kubernetes/pki/apiserver.crt</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--tls-private-key-file=/etc/kubernetes/pki/apiserver.key</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--service-node-port-range=20000-30000</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"重启资源\"><a href=\"#重启资源\" class=\"headerlink\" title=\"重启资源\"></a>重启资源</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl delete pod kube-apiserver-master -n kube-system<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h4><ul>\n<li><code>对于已经创建的NodePort类型的Service，您需要删除重新创建</code></li>\n<li><code>如果您的集群有多个 Master 节点，您需要逐个修改每个节点上的 /etc/kubernetes/manifests/kube-apiserver.yaml 文件，并重启 apiserver</code></li>\n</ul>\n<h3 id=\"secret\"><a href=\"#secret\" class=\"headerlink\" title=\"secret\"></a>secret</h3><h4 id=\"添加secret\"><a href=\"#添加secret\" class=\"headerlink\" title=\"添加secret\"></a>添加secret</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl create secret docker-registry secret-harbor --namespace=default \\<br>--docker-server=http://10.1.52.65 --docker-username=admin \\<br>--docker-password=Harbor12345 --docker-email=xusenhao@piesat.cn<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"yaml\"><a href=\"#yaml\" class=\"headerlink\" title=\"yaml\"></a>yaml</h3><h4 id=\"pod\"><a href=\"#pod\" class=\"headerlink\" title=\"pod\"></a>pod</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl   create  deployment  nginx  --image=nginx   --dry-run  -o  yaml  &gt;  deployment.yaml<br></code></pre></td></tr></table></figure>\n\n<p>service</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl expose  deployment  nginx  --port=80  --target-port=80  --<span class=\"hljs-built_in\">type</span>=NodePort --dry-run -o yaml &gt; service.yaml<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"处理状态处于Terminating的服务\"><a href=\"#处理状态处于Terminating的服务\" class=\"headerlink\" title=\"处理状态处于Terminating的服务\"></a>处理状态处于Terminating的服务</h4><p>强删</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl patch pvc data-nfs-server-provisioner-0 -p <span class=\"hljs-string\">&#x27;&#123;&quot;metadata&quot;:&#123;&quot;finalizers&quot;: [null]&#125;&#125;&#x27;</span> --<span class=\"hljs-built_in\">type</span> merge<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"编辑资源\"><a href=\"#编辑资源\" class=\"headerlink\" title=\"编辑资源\"></a>编辑资源</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">KUBE_EDITOR=<span class=\"hljs-string\">&quot;vim&quot;</span> kuberctl edit pod <span class=\"hljs-built_in\">test</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"批量删除指定状态资源\"><a href=\"#批量删除指定状态资源\" class=\"headerlink\" title=\"批量删除指定状态资源\"></a>批量删除指定状态资源</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl get pod -n [pie-engine-infra] | grep [ImagePullBackOff] | awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span> | xargs kubectl delete pod -n [pie-engine-infra]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"PVC\"><a href=\"#PVC\" class=\"headerlink\" title=\"PVC\"></a>PVC</h3><h3 id=\"pvc等待pv分配\"><a href=\"#pvc等待pv分配\" class=\"headerlink\" title=\"pvc等待pv分配\"></a>pvc等待pv分配</h3><p>参考地址 : <a href=\"https://blog.csdn.net/weixin_45625174/article/details/123920122\">传送门</a></p>\n<p>出现的错误信息：</p>\n<p>waiting for a volume to be created, either by external provisioner “gxf-nfs-storage” or manually created by system administrator**</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#修改</span><br>vim /etc/kubernetes/manifests/kube-apiserver.yaml<br><span class=\"hljs-comment\">#在- --tls-private-key-file=/etc/kubernetes/pki/apiserver.key下面添加如下：</span><br>- --feature-gates=RemoveSelfLink=<span class=\"hljs-literal\">false</span><br><span class=\"hljs-comment\">#执行</span><br>kubectl  apply -f /etc/kubernetes/manifests/kube-apiserver.yaml<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Helm安装\"><a href=\"#Helm安装\" class=\"headerlink\" title=\"Helm安装\"></a>Helm安装</h2><h3 id=\"下载Helm\"><a href=\"#下载Helm\" class=\"headerlink\" title=\"下载Helm\"></a>下载Helm</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">wget https://get.helm.sh/helm-v3.2.4-linux-amd64.tar.gz<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">tar -zxvf helm-v3.2.4-linux-amd64.tar.gz<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"迁移文件\"><a href=\"#迁移文件\" class=\"headerlink\" title=\"迁移文件\"></a>迁移文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">mv</span> linux-amd64/helm /usr/local/bin/helm<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"验证安装\"><a href=\"#验证安装\" class=\"headerlink\" title=\"验证安装\"></a>验证安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">helm version<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"换源\"><a href=\"#换源\" class=\"headerlink\" title=\"换源\"></a>换源</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">helm repo add apphub https://apphub.aliyuncs.com<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查看源\"><a href=\"#查看源\" class=\"headerlink\" title=\"查看源\"></a>查看源</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">helm repo list<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加Harbor源\"><a href=\"#添加Harbor源\" class=\"headerlink\" title=\"添加Harbor源\"></a>添加Harbor源</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">helm repo add pie-chart http://10.1.52.65/chartrepo/pie-chart --username=admin --password=Harbor12345<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"接入托管kubernetes\"><a href=\"#接入托管kubernetes\" class=\"headerlink\" title=\"接入托管kubernetes\"></a>接入托管kubernetes</h2><h3 id=\"添加托管kubernetes\"><a href=\"#添加托管kubernetes\" class=\"headerlink\" title=\"添加托管kubernetes\"></a>添加托管kubernetes</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">export</span> KUBECONFIG=<span class=\"hljs-variable\">$KUBECONFIG</span>:<span class=\"hljs-variable\">$&#123;CONFIG_PATH&#125;</span><br></code></pre></td></tr></table></figure>\n\n<p>例：export KUBECONFIG=$HOME/.kube/config:/root/config</p>\n<h3 id=\"配置上下文\"><a href=\"#配置上下文\" class=\"headerlink\" title=\"配置上下文\"></a>配置上下文</h3><h4 id=\"列出所有上下文信息\"><a href=\"#列出所有上下文信息\" class=\"headerlink\" title=\"列出所有上下文信息\"></a>列出所有上下文信息</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl config get-contexts<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"查看当前上下文信息\"><a href=\"#查看当前上下文信息\" class=\"headerlink\" title=\"查看当前上下文信息\"></a>查看当前上下文信息</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl config current-context<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"更改上下文信息\"><a href=\"#更改上下文信息\" class=\"headerlink\" title=\"更改上下文信息\"></a>更改上下文信息</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl config use-context <span class=\"hljs-variable\">$&#123;CONTEXT_NAME&#125;</span><br></code></pre></td></tr></table></figure>\n\n<p>例：kubectl config use-context kubernetes-admin@kubernetes</p>\n<h4 id=\"更改上下文的元素\"><a href=\"#更改上下文的元素\" class=\"headerlink\" title=\"更改上下文的元素\"></a>更改上下文的元素</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl config set-context <span class=\"hljs-variable\">$&#123;CONTEXT_NAME&#125;</span>|--current --<span class=\"hljs-variable\">$&#123;KEY&#125;</span>=<span class=\"hljs-variable\">$&#123;VALUE&#125;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"生效\"><a href=\"#生效\" class=\"headerlink\" title=\"生效\"></a>生效</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">export</span> KUBECONFIG=/root/config<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"kubernetes更换ip\"><a href=\"#kubernetes更换ip\" class=\"headerlink\" title=\"kubernetes更换ip\"></a>kubernetes更换ip</h2><p><a href=\"https://blog.csdn.net/shelutai/article/details/122807511\">传送门</a></p>\n<p><a href=\"https://www.qikqiak.com/post/how-to-change-k8s-node-ip/\">传送门</a></p>\n<h2 id=\"kubernetes版本升级和降级\"><a href=\"#kubernetes版本升级和降级\" class=\"headerlink\" title=\"kubernetes版本升级和降级\"></a>kubernetes版本升级和降级</h2><p><a href=\"https://blog.csdn.net/qq_38419276/article/details/120603533\">传送门</a></p>\n<h2 id=\"kubeadm\"><a href=\"#kubeadm\" class=\"headerlink\" title=\"kubeadm\"></a>kubeadm</h2><p>导出初始化时默认配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubeadm config <span class=\"hljs-built_in\">print</span> init-defaults<br></code></pre></td></tr></table></figure>\n\n"},{"title":"kubectl","date":"2022-12-03T05:18:34.000Z","description":"kubectl备忘录.","_content":"\n## kubectl备忘录\n\n### kubectl\n\n```bash\n#kubectl自动补全\nyum -y install bash-completion && source /usr/share/bash-completion/bash_completion && source <(kubectl completion bash) && echo \"source <(kubectl completion bash)\" >> ~/.bashrc\n\n#删除default命名空间下所有job\nkubectl get job | awk '{print $1}' | xargs kubectl delete job\n\n#删除pie-engine-infra命名空间下pod状态为ImagePullBackOff的资源\nkubectl get pod -n pie-engine-infra | grep ImagePullBackOff | awk '{print $1}' | xargs kubectl delete pod -n pie-engine-infra\n```\n","source":"_posts/kubectl备忘录.md","raw":"---\ntitle: kubectl\ndate: 2022-12-03 13:18:34\ntags: kubernetes\ncategories: kubernetes\ndescription: kubectl备忘录.\n---\n\n## kubectl备忘录\n\n### kubectl\n\n```bash\n#kubectl自动补全\nyum -y install bash-completion && source /usr/share/bash-completion/bash_completion && source <(kubectl completion bash) && echo \"source <(kubectl completion bash)\" >> ~/.bashrc\n\n#删除default命名空间下所有job\nkubectl get job | awk '{print $1}' | xargs kubectl delete job\n\n#删除pie-engine-infra命名空间下pod状态为ImagePullBackOff的资源\nkubectl get pod -n pie-engine-infra | grep ImagePullBackOff | awk '{print $1}' | xargs kubectl delete pod -n pie-engine-infra\n```\n","slug":"kubectl备忘录","published":1,"updated":"2022-12-22T12:22:18.110Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcwycosq000xh0u2djx8g82m","content":"<h2 id=\"kubectl备忘录\"><a href=\"#kubectl备忘录\" class=\"headerlink\" title=\"kubectl备忘录\"></a>kubectl备忘录</h2><h3 id=\"kubectl\"><a href=\"#kubectl\" class=\"headerlink\" title=\"kubectl\"></a>kubectl</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#kubectl自动补全</span><br>yum -y install bash-completion &amp;&amp; <span class=\"hljs-built_in\">source</span> /usr/share/bash-completion/bash_completion &amp;&amp; <span class=\"hljs-built_in\">source</span> &lt;(kubectl completion bash) &amp;&amp; <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;source &lt;(kubectl completion bash)&quot;</span> &gt;&gt; ~/.bashrc<br><br><span class=\"hljs-comment\">#删除default命名空间下所有job</span><br>kubectl get job | awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span> | xargs kubectl delete job<br><br><span class=\"hljs-comment\">#删除pie-engine-infra命名空间下pod状态为ImagePullBackOff的资源</span><br>kubectl get pod -n pie-engine-infra | grep ImagePullBackOff | awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span> | xargs kubectl delete pod -n pie-engine-infra<br></code></pre></td></tr></table></figure>\n","site":{"data":{}},"wordcount":507,"excerpt":"","more":"<h2 id=\"kubectl备忘录\"><a href=\"#kubectl备忘录\" class=\"headerlink\" title=\"kubectl备忘录\"></a>kubectl备忘录</h2><h3 id=\"kubectl\"><a href=\"#kubectl\" class=\"headerlink\" title=\"kubectl\"></a>kubectl</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#kubectl自动补全</span><br>yum -y install bash-completion &amp;&amp; <span class=\"hljs-built_in\">source</span> /usr/share/bash-completion/bash_completion &amp;&amp; <span class=\"hljs-built_in\">source</span> &lt;(kubectl completion bash) &amp;&amp; <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;source &lt;(kubectl completion bash)&quot;</span> &gt;&gt; ~/.bashrc<br><br><span class=\"hljs-comment\">#删除default命名空间下所有job</span><br>kubectl get job | awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span> | xargs kubectl delete job<br><br><span class=\"hljs-comment\">#删除pie-engine-infra命名空间下pod状态为ImagePullBackOff的资源</span><br>kubectl get pod -n pie-engine-infra | grep ImagePullBackOff | awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span> | xargs kubectl delete pod -n pie-engine-infra<br></code></pre></td></tr></table></figure>\n"},{"title":"network-agent","date":"2022-04-10T05:18:34.000Z","description":"network-agent笔记.","_content":"\n## VPN\n\n### 搭建X-UI\n\n```bash\ndocker run -itd --network=host \\\n    -v $PWD/db/:/etc/x-ui/ \\\n    -v $PWD/cert/:/root/cert/ \\\n    --name x-ui --restart=unless-stopped \\\n    enwaiax/x-ui:latest\n```\n\n### 安装BBR\n\n```bash\nwget \"https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh\" && chmod +x tcp.sh && ./tcp.sh\n```\n\n### 搭建v2board\n\n#### docker搭建\n\ndocker搭建:   [GitHub](https://github.com/GZ1903/docker_v2board)\n\n```bash\ndocker run -d \\\n--name=v2board \\\n--privileged=true \\\n--restart always \\\n-v /root/v2board/nginx:/usr/share/nginx/html/v2board \\\n-v /root/v2board/data:/var/lib/mysql \\\n-p 80:80 \\\n-p 443:443 \\\ngz1903/v2board:1.6.0\n```\n\n| MySQL_Default_USER | ROOT                                    |\n| ------------------ | --------------------------------------- |\n| MySQL_Default_PASS | [v2board@qq.com](mailto:v2board@qq.com) |\n\n| V2Board_Admin_USER | [v2board@qq.com](mailto:v2board@qq.com) |\n| ------------------ | --------------------------------------- |\n| V2Board_Admin_PASS | [v2board@qq.com](mailto:v2board@qq.com) |\n\n##### 版本升级\n\n```shell\n#Interact\ndocker exec -it v2board /bin/bash\n#Get the new version of v2board\ngit clone https://github.com/v2board/v2board.git /usr/share/nginx/html/v2board/\n#Install\ncd /usr/share/nginx/html/v2board && sh /usr/share/nginx/html/v2board/init.sh\n#mysqlpass => v2board@qq.com \n#Give v2board permission\nchmod -R 777 /usr/share/nginx/html/v2board\n#Restart queue\nsupervisorctl restart v2board\n```\n\n#### DockerCompose搭建\n\n##### 使用 Docker 安装 V2Board\n\n##### 安装 Docker\n\n```\ncurl -fsSL https://get.docker.com | bash\ncurl -L \"https://github.com/docker/compose/releases/download/1.25.3/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\nchmod a+x /usr/local/bin/docker-compose\n# 创建个软链接，以后用 dc 命令来代替 docker-compose\nrm -rf which dc  # 若系统中存在 dc 则删除，这个 dc 就是个计算器，完全没有用\nln -s /usr/local/bin/docker-compose /usr/bin/dc\n```\n\n##### 克隆代码\n\n```\ngit clone https://github.com/v2board/v2board-docker.git\ncd v2board-docker/\ngit submodule update --init\necho '  branch = dev' >> .gitmodules\ngit submodule update --remote\n```\n\n修改'caddy.conf'\n第一行'http://你的域名 {'\n\n##### 启动环境\n\n```\ndc up -d\n```\n\n##### 安装配置 V2Board\n\n```\ndc exec www bash\nbash-5.0# wget https://getcomposer.org/download/2.5.1/composer.phar\nbash-5.0# php composer.phar install\nbash-5.0# php artisan v2board:install\n数据库地址： mysql\n数据库名：v2board\n数据库用户名：root\n数据库密码：v2boardisbest\n```\n\n#### 手动\n\n官方搭建手册：[ V2Board 使用手册](https://docs.v2board.com/deploy/aapanel.html)\n\n```bash\ngit clone https://github.com/GZ1903/docker_v2board.git /usr/local/src/docker_v2board && cd /usr/local/src/docker_v2board && chmod +x docker_v2board.sh && ./docker_v2board.sh\n```\n\n#### 后端对接\n\n参考： [使用docker安装 · GitBook (xrayr-project.github.io)](https://xrayr-project.github.io/XrayR-doc/xrayr-xia-zai-he-an-zhuang/install/docker.html)\n\n### 搭建Telegram代理\n\n```bash\ndocker run --name s5 -d --restart=always -p 1111:1111 -e \"USERS=cloud:112233\" egregors/socks5-server\n```\n\n### 部署warp\n\n参考地址：[https://p3terx.com/archives/cloudflare-warp-configuration-script.html](https://p3terx.com/archives/cloudflare-warp-configuration-script.html)\n\n```bash\nbash <(curl -fsSL git.io/warp.sh) d\n```\n\n### 虚拟软路由\n\n#### [Hyper-V搭建openWrt](https://blog.yoitsu.moe/tech\\_misc/hyper\\_v\\_with\\_openwrt.html)\n\n**准备工作 - Hyper-V 管理器、映像和创建虚拟机**\n\n要使用 Hyper-V 的话，汝得有一个 Windows 8.1/10 专业版或者企业版， 或者 Windows Server 2012 以后的 Windows Server 才行。同时也要求汝的 CPU 支持必要的虚拟化技术。 （Intel VT-x 或者 AMD-V 什么的）可以通过 PowerShell 里的 systeminfo 命令确定是否可以开启 Hyper-V 。\n\n在满足了前置要求之后，可以这样启用 Hyper-V：\n\n```bash\n# 如果提示找不到命令的话，换以管理员身份运行的 PowerShell 窗口。\nEnable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All\n```\n\n或者用“启用或关闭 Windows 功能”也是可以的。\n\n**下载和转换 OpenWrt 映像**\n\n接下来到 OpenWrt 的网站上下载映像 （这时候最新的版本是 19.07，于是链接就是 [https://downloads.openwrt.org/releases/19.07.7/targets/x86/64/](https://downloads.openwrt.org/releases/19.07.7/targets/x86/64/) ）\n\n这里咱们选择包含有内核和 rootfs 的 combined 那俩， 区别在于 squashfs 那个安装好以后系统分区像在普通路由器一样是只读的，可以实现像是升级或者复位等功能。 不过咱大概会用检查点来实现这些，那就直接用 ext4 的好了。下载和解压以后汝大概就可以得到一个像是 openwrt-19.07.7-x86-64-combined-ext4.img 这样的文件了。\n\n但是 Hyper-V 只能用微软自己的 VHD 或者 VHDX 格式，所以还需要转换一下。 转换的方法有很多，咱这里给出咱的一个例子。\n\n创建一个虚拟磁盘。这里用了 diskpart 命令。如果汝更偏好用磁盘管理操作的话， 可以参考 [这篇文章](https://docs.microsoft.com/zh-cn/windows-server/storage/disk-management/manage-virtual-hard-disks)\n\n```bash\nMicrosoft DiskPart version 10.0.21332.1000\nCopyright (C) Microsoft Corporation.\nOn computer: DESKTOP-H6MANBV\n\n# 创建一个虚拟磁盘文件\n# create vdisk file=<汝要存放虚拟磁盘文件的位置> maximum=<它的最大大小，以 MiB 为单位> type=expandable\n# 假如汝有充足的硬盘空间的话，可以把上面的 type=expandable 改为 type=fixed 创建一个固定大小的虚拟磁盘。\n# 可以提高一些虚拟磁盘的性能。当然动态扩展对 OpenWrt 来说也够用就是了……\nDISKPART> create vdisk file=c:\\test.vhd maximum=8192 type=expandable\n    100 percent completed\nDiskPart successfully created the virtual disk file.\n\n# 选择刚才创建的虚拟磁盘\n# select vdisk file=<汝要存放虚拟磁盘文件的位置>\nDISKPART> select vdisk file=c:\\test.vhd\nDiskPart successfully selected the virtual disk file.\n\n# 挂载刚才选择的虚拟磁盘。\nDISKPART> attach vdisk\n    100 percent completed\nDiskPart successfully attached the virtual disk file.\n\n# 初始化虚拟磁盘为 MBR 分区表。\n# OpenWrt 官方编译的版本不支持 UEFI 启动，所以就用 MBR 了。\nDISKPART> convert mbr\nDiskPart successfully converted the selected disk to MBR format.\n\n# 在下一步操作完成之后卸载虚拟磁盘\nDISKPART> detach vdisk\nDiskPart successfully detached the virtual disk file.\n```\n\n接下来把这个映像写入虚拟磁盘就 OK 啦。（以及咱发现 Rufus 能把虚拟磁盘识别出来）\n\n### OpenWrt\n\n个人使用的编译版本地址\n\n> [https://netflixcn.com/miji/46.html](https://netflixcn.com/miji/46.html)\n\n密码：netflixcn.com\n\n### 编译openwrt\n\n使用github编译openwrt,可以参考该[教程](https://p3terx.com/archives/build-openwrt-with-github-actions.html)比较全面.\n","source":"_posts/network-agent.md","raw":"---\ntitle: network-agent\ndate: 2022-04-10 13:18:34\ntags: Proxy\ncategories: Proxy\ndescription: network-agent笔记.\n---\n\n## VPN\n\n### 搭建X-UI\n\n```bash\ndocker run -itd --network=host \\\n    -v $PWD/db/:/etc/x-ui/ \\\n    -v $PWD/cert/:/root/cert/ \\\n    --name x-ui --restart=unless-stopped \\\n    enwaiax/x-ui:latest\n```\n\n### 安装BBR\n\n```bash\nwget \"https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh\" && chmod +x tcp.sh && ./tcp.sh\n```\n\n### 搭建v2board\n\n#### docker搭建\n\ndocker搭建:   [GitHub](https://github.com/GZ1903/docker_v2board)\n\n```bash\ndocker run -d \\\n--name=v2board \\\n--privileged=true \\\n--restart always \\\n-v /root/v2board/nginx:/usr/share/nginx/html/v2board \\\n-v /root/v2board/data:/var/lib/mysql \\\n-p 80:80 \\\n-p 443:443 \\\ngz1903/v2board:1.6.0\n```\n\n| MySQL_Default_USER | ROOT                                    |\n| ------------------ | --------------------------------------- |\n| MySQL_Default_PASS | [v2board@qq.com](mailto:v2board@qq.com) |\n\n| V2Board_Admin_USER | [v2board@qq.com](mailto:v2board@qq.com) |\n| ------------------ | --------------------------------------- |\n| V2Board_Admin_PASS | [v2board@qq.com](mailto:v2board@qq.com) |\n\n##### 版本升级\n\n```shell\n#Interact\ndocker exec -it v2board /bin/bash\n#Get the new version of v2board\ngit clone https://github.com/v2board/v2board.git /usr/share/nginx/html/v2board/\n#Install\ncd /usr/share/nginx/html/v2board && sh /usr/share/nginx/html/v2board/init.sh\n#mysqlpass => v2board@qq.com \n#Give v2board permission\nchmod -R 777 /usr/share/nginx/html/v2board\n#Restart queue\nsupervisorctl restart v2board\n```\n\n#### DockerCompose搭建\n\n##### 使用 Docker 安装 V2Board\n\n##### 安装 Docker\n\n```\ncurl -fsSL https://get.docker.com | bash\ncurl -L \"https://github.com/docker/compose/releases/download/1.25.3/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\nchmod a+x /usr/local/bin/docker-compose\n# 创建个软链接，以后用 dc 命令来代替 docker-compose\nrm -rf which dc  # 若系统中存在 dc 则删除，这个 dc 就是个计算器，完全没有用\nln -s /usr/local/bin/docker-compose /usr/bin/dc\n```\n\n##### 克隆代码\n\n```\ngit clone https://github.com/v2board/v2board-docker.git\ncd v2board-docker/\ngit submodule update --init\necho '  branch = dev' >> .gitmodules\ngit submodule update --remote\n```\n\n修改'caddy.conf'\n第一行'http://你的域名 {'\n\n##### 启动环境\n\n```\ndc up -d\n```\n\n##### 安装配置 V2Board\n\n```\ndc exec www bash\nbash-5.0# wget https://getcomposer.org/download/2.5.1/composer.phar\nbash-5.0# php composer.phar install\nbash-5.0# php artisan v2board:install\n数据库地址： mysql\n数据库名：v2board\n数据库用户名：root\n数据库密码：v2boardisbest\n```\n\n#### 手动\n\n官方搭建手册：[ V2Board 使用手册](https://docs.v2board.com/deploy/aapanel.html)\n\n```bash\ngit clone https://github.com/GZ1903/docker_v2board.git /usr/local/src/docker_v2board && cd /usr/local/src/docker_v2board && chmod +x docker_v2board.sh && ./docker_v2board.sh\n```\n\n#### 后端对接\n\n参考： [使用docker安装 · GitBook (xrayr-project.github.io)](https://xrayr-project.github.io/XrayR-doc/xrayr-xia-zai-he-an-zhuang/install/docker.html)\n\n### 搭建Telegram代理\n\n```bash\ndocker run --name s5 -d --restart=always -p 1111:1111 -e \"USERS=cloud:112233\" egregors/socks5-server\n```\n\n### 部署warp\n\n参考地址：[https://p3terx.com/archives/cloudflare-warp-configuration-script.html](https://p3terx.com/archives/cloudflare-warp-configuration-script.html)\n\n```bash\nbash <(curl -fsSL git.io/warp.sh) d\n```\n\n### 虚拟软路由\n\n#### [Hyper-V搭建openWrt](https://blog.yoitsu.moe/tech\\_misc/hyper\\_v\\_with\\_openwrt.html)\n\n**准备工作 - Hyper-V 管理器、映像和创建虚拟机**\n\n要使用 Hyper-V 的话，汝得有一个 Windows 8.1/10 专业版或者企业版， 或者 Windows Server 2012 以后的 Windows Server 才行。同时也要求汝的 CPU 支持必要的虚拟化技术。 （Intel VT-x 或者 AMD-V 什么的）可以通过 PowerShell 里的 systeminfo 命令确定是否可以开启 Hyper-V 。\n\n在满足了前置要求之后，可以这样启用 Hyper-V：\n\n```bash\n# 如果提示找不到命令的话，换以管理员身份运行的 PowerShell 窗口。\nEnable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All\n```\n\n或者用“启用或关闭 Windows 功能”也是可以的。\n\n**下载和转换 OpenWrt 映像**\n\n接下来到 OpenWrt 的网站上下载映像 （这时候最新的版本是 19.07，于是链接就是 [https://downloads.openwrt.org/releases/19.07.7/targets/x86/64/](https://downloads.openwrt.org/releases/19.07.7/targets/x86/64/) ）\n\n这里咱们选择包含有内核和 rootfs 的 combined 那俩， 区别在于 squashfs 那个安装好以后系统分区像在普通路由器一样是只读的，可以实现像是升级或者复位等功能。 不过咱大概会用检查点来实现这些，那就直接用 ext4 的好了。下载和解压以后汝大概就可以得到一个像是 openwrt-19.07.7-x86-64-combined-ext4.img 这样的文件了。\n\n但是 Hyper-V 只能用微软自己的 VHD 或者 VHDX 格式，所以还需要转换一下。 转换的方法有很多，咱这里给出咱的一个例子。\n\n创建一个虚拟磁盘。这里用了 diskpart 命令。如果汝更偏好用磁盘管理操作的话， 可以参考 [这篇文章](https://docs.microsoft.com/zh-cn/windows-server/storage/disk-management/manage-virtual-hard-disks)\n\n```bash\nMicrosoft DiskPart version 10.0.21332.1000\nCopyright (C) Microsoft Corporation.\nOn computer: DESKTOP-H6MANBV\n\n# 创建一个虚拟磁盘文件\n# create vdisk file=<汝要存放虚拟磁盘文件的位置> maximum=<它的最大大小，以 MiB 为单位> type=expandable\n# 假如汝有充足的硬盘空间的话，可以把上面的 type=expandable 改为 type=fixed 创建一个固定大小的虚拟磁盘。\n# 可以提高一些虚拟磁盘的性能。当然动态扩展对 OpenWrt 来说也够用就是了……\nDISKPART> create vdisk file=c:\\test.vhd maximum=8192 type=expandable\n    100 percent completed\nDiskPart successfully created the virtual disk file.\n\n# 选择刚才创建的虚拟磁盘\n# select vdisk file=<汝要存放虚拟磁盘文件的位置>\nDISKPART> select vdisk file=c:\\test.vhd\nDiskPart successfully selected the virtual disk file.\n\n# 挂载刚才选择的虚拟磁盘。\nDISKPART> attach vdisk\n    100 percent completed\nDiskPart successfully attached the virtual disk file.\n\n# 初始化虚拟磁盘为 MBR 分区表。\n# OpenWrt 官方编译的版本不支持 UEFI 启动，所以就用 MBR 了。\nDISKPART> convert mbr\nDiskPart successfully converted the selected disk to MBR format.\n\n# 在下一步操作完成之后卸载虚拟磁盘\nDISKPART> detach vdisk\nDiskPart successfully detached the virtual disk file.\n```\n\n接下来把这个映像写入虚拟磁盘就 OK 啦。（以及咱发现 Rufus 能把虚拟磁盘识别出来）\n\n### OpenWrt\n\n个人使用的编译版本地址\n\n> [https://netflixcn.com/miji/46.html](https://netflixcn.com/miji/46.html)\n\n密码：netflixcn.com\n\n### 编译openwrt\n\n使用github编译openwrt,可以参考该[教程](https://p3terx.com/archives/build-openwrt-with-github-actions.html)比较全面.\n","slug":"network-agent","published":1,"updated":"2023-01-19T10:09:03.066Z","_id":"clcwycosr0010h0u2fun0303m","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"VPN\"><a href=\"#VPN\" class=\"headerlink\" title=\"VPN\"></a>VPN</h2><h3 id=\"搭建X-UI\"><a href=\"#搭建X-UI\" class=\"headerlink\" title=\"搭建X-UI\"></a>搭建X-UI</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -itd --network=host \\<br>    -v <span class=\"hljs-variable\">$PWD</span>/db/:/etc/x-ui/ \\<br>    -v <span class=\"hljs-variable\">$PWD</span>/cert/:/root/cert/ \\<br>    --name x-ui --restart=unless-stopped \\<br>    enwaiax/x-ui:latest<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装BBR\"><a href=\"#安装BBR\" class=\"headerlink\" title=\"安装BBR\"></a>安装BBR</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">wget <span class=\"hljs-string\">&quot;https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh&quot;</span> &amp;&amp; <span class=\"hljs-built_in\">chmod</span> +x tcp.sh &amp;&amp; ./tcp.sh<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"搭建v2board\"><a href=\"#搭建v2board\" class=\"headerlink\" title=\"搭建v2board\"></a>搭建v2board</h3><h4 id=\"docker搭建\"><a href=\"#docker搭建\" class=\"headerlink\" title=\"docker搭建\"></a>docker搭建</h4><p>docker搭建:   <a href=\"https://github.com/GZ1903/docker_v2board\">GitHub</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d \\<br>--name=v2board \\<br>--privileged=<span class=\"hljs-literal\">true</span> \\<br>--restart always \\<br>-v /root/v2board/nginx:/usr/share/nginx/html/v2board \\<br>-v /root/v2board/data:/var/lib/mysql \\<br>-p 80:80 \\<br>-p 443:443 \\<br>gz1903/v2board:1.6.0<br></code></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>MySQL_Default_USER</th>\n<th>ROOT</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>MySQL_Default_PASS</td>\n<td><a href=\"mailto:v2board@qq.com\">v2board@qq.com</a></td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>V2Board_Admin_USER</th>\n<th><a href=\"mailto:v2board@qq.com\">v2board@qq.com</a></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>V2Board_Admin_PASS</td>\n<td><a href=\"mailto:v2board@qq.com\">v2board@qq.com</a></td>\n</tr>\n</tbody></table>\n<h5 id=\"版本升级\"><a href=\"#版本升级\" class=\"headerlink\" title=\"版本升级\"></a>版本升级</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">Interact</span><br>docker exec -it v2board /bin/bash<br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">Get the new version of v2board</span><br>git clone https://github.com/v2board/v2board.git /usr/share/nginx/html/v2board/<br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">Install</span><br>cd /usr/share/nginx/html/v2board &amp;&amp; sh /usr/share/nginx/html/v2board/init.sh<br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">mysqlpass =&gt; v2board@qq.com</span> <br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">Give v2board permission</span><br>chmod -R 777 /usr/share/nginx/html/v2board<br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">Restart queue</span><br>supervisorctl restart v2board<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"DockerCompose搭建\"><a href=\"#DockerCompose搭建\" class=\"headerlink\" title=\"DockerCompose搭建\"></a>DockerCompose搭建</h4><h5 id=\"使用-Docker-安装-V2Board\"><a href=\"#使用-Docker-安装-V2Board\" class=\"headerlink\" title=\"使用 Docker 安装 V2Board\"></a>使用 Docker 安装 V2Board</h5><h5 id=\"安装-Docker\"><a href=\"#安装-Docker\" class=\"headerlink\" title=\"安装 Docker\"></a>安装 Docker</h5><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">curl -fsSL https:<span class=\"hljs-regexp\">//g</span>et.docker.com | bash<br>curl -L <span class=\"hljs-string\">&quot;https://github.com/docker/compose/releases/download/1.25.3/docker-compose-$(uname -s)-$(uname -m)&quot;</span> -o <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/bin/</span>docker-compose<br>chmod a+x <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/bin/</span>docker-compose<br><span class=\"hljs-comment\"># 创建个软链接，以后用 dc 命令来代替 docker-compose</span><br>rm -rf which dc  <span class=\"hljs-comment\"># 若系统中存在 dc 则删除，这个 dc 就是个计算器，完全没有用</span><br>ln -s <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/bin/</span>docker-compose <span class=\"hljs-regexp\">/usr/</span>bin/dc<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"克隆代码\"><a href=\"#克隆代码\" class=\"headerlink\" title=\"克隆代码\"></a>克隆代码</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> https://github.com/v2board/v2board-docker.git<br><span class=\"hljs-built_in\">cd</span> v2board-docker/<br>git submodule update --init<br><span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&#x27;  branch = dev&#x27;</span> &gt;&gt; .gitmodules<br>git submodule update --remote<br></code></pre></td></tr></table></figure>\n\n<p>修改’caddy.conf’<br>第一行’http://你的域名 {‘</p>\n<h5 id=\"启动环境\"><a href=\"#启动环境\" class=\"headerlink\" title=\"启动环境\"></a>启动环境</h5><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">dc up -d</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"安装配置-V2Board\"><a href=\"#安装配置-V2Board\" class=\"headerlink\" title=\"安装配置 V2Board\"></a>安装配置 V2Board</h5><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">dc <span class=\"hljs-built_in\">exec</span> www bash<br>bash<span class=\"hljs-number\">-5.0</span><span class=\"hljs-meta\"># wget https:<span class=\"hljs-comment\">//getcomposer.org/download/2.5.1/composer.phar</span></span><br>bash<span class=\"hljs-number\">-5.0</span><span class=\"hljs-meta\"># php composer.phar install</span><br>bash<span class=\"hljs-number\">-5.0</span><span class=\"hljs-meta\"># php artisan v2board:install</span><br>数据库地址： mysql<br>数据库名：v2board<br>数据库用户名：root<br>数据库密码：v2boardisbest<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"手动\"><a href=\"#手动\" class=\"headerlink\" title=\"手动\"></a>手动</h4><p>官方搭建手册：<a href=\"https://docs.v2board.com/deploy/aapanel.html\"> V2Board 使用手册</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> https://github.com/GZ1903/docker_v2board.git /usr/local/src/docker_v2board &amp;&amp; <span class=\"hljs-built_in\">cd</span> /usr/local/src/docker_v2board &amp;&amp; <span class=\"hljs-built_in\">chmod</span> +x docker_v2board.sh &amp;&amp; ./docker_v2board.sh<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"后端对接\"><a href=\"#后端对接\" class=\"headerlink\" title=\"后端对接\"></a>后端对接</h4><p>参考： <a href=\"https://xrayr-project.github.io/XrayR-doc/xrayr-xia-zai-he-an-zhuang/install/docker.html\">使用docker安装 · GitBook (xrayr-project.github.io)</a></p>\n<h3 id=\"搭建Telegram代理\"><a href=\"#搭建Telegram代理\" class=\"headerlink\" title=\"搭建Telegram代理\"></a>搭建Telegram代理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run --name s5 -d --restart=always -p 1111:1111 -e <span class=\"hljs-string\">&quot;USERS=cloud:112233&quot;</span> egregors/socks5-server<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"部署warp\"><a href=\"#部署warp\" class=\"headerlink\" title=\"部署warp\"></a>部署warp</h3><p>参考地址：<a href=\"https://p3terx.com/archives/cloudflare-warp-configuration-script.html\">https://p3terx.com/archives/cloudflare-warp-configuration-script.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">bash &lt;(curl -fsSL git.io/warp.sh) d<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"虚拟软路由\"><a href=\"#虚拟软路由\" class=\"headerlink\" title=\"虚拟软路由\"></a>虚拟软路由</h3><h4 id=\"Hyper-V搭建openWrt\"><a href=\"#Hyper-V搭建openWrt\" class=\"headerlink\" title=\"Hyper-V搭建openWrt\"></a><a href=\"https://blog.yoitsu.moe/tech_misc/hyper_v_with_openwrt.html\">Hyper-V搭建openWrt</a></h4><p><strong>准备工作 - Hyper-V 管理器、映像和创建虚拟机</strong></p>\n<p>要使用 Hyper-V 的话，汝得有一个 Windows 8.1/10 专业版或者企业版， 或者 Windows Server 2012 以后的 Windows Server 才行。同时也要求汝的 CPU 支持必要的虚拟化技术。 （Intel VT-x 或者 AMD-V 什么的）可以通过 PowerShell 里的 systeminfo 命令确定是否可以开启 Hyper-V 。</p>\n<p>在满足了前置要求之后，可以这样启用 Hyper-V：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 如果提示找不到命令的话，换以管理员身份运行的 PowerShell 窗口。</span><br>Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All<br></code></pre></td></tr></table></figure>\n\n<p>或者用“启用或关闭 Windows 功能”也是可以的。</p>\n<p><strong>下载和转换 OpenWrt 映像</strong></p>\n<p>接下来到 OpenWrt 的网站上下载映像 （这时候最新的版本是 19.07，于是链接就是 <a href=\"https://downloads.openwrt.org/releases/19.07.7/targets/x86/64/\">https://downloads.openwrt.org/releases/19.07.7/targets/x86/64/</a> ）</p>\n<p>这里咱们选择包含有内核和 rootfs 的 combined 那俩， 区别在于 squashfs 那个安装好以后系统分区像在普通路由器一样是只读的，可以实现像是升级或者复位等功能。 不过咱大概会用检查点来实现这些，那就直接用 ext4 的好了。下载和解压以后汝大概就可以得到一个像是 openwrt-19.07.7-x86-64-combined-ext4.img 这样的文件了。</p>\n<p>但是 Hyper-V 只能用微软自己的 VHD 或者 VHDX 格式，所以还需要转换一下。 转换的方法有很多，咱这里给出咱的一个例子。</p>\n<p>创建一个虚拟磁盘。这里用了 diskpart 命令。如果汝更偏好用磁盘管理操作的话， 可以参考 <a href=\"https://docs.microsoft.com/zh-cn/windows-server/storage/disk-management/manage-virtual-hard-disks\">这篇文章</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">Microsoft DiskPart version 10.0.21332.1000<br>Copyright (C) Microsoft Corporation.<br>On computer: DESKTOP-H6MANBV<br><br><span class=\"hljs-comment\"># 创建一个虚拟磁盘文件</span><br><span class=\"hljs-comment\"># create vdisk file=&lt;汝要存放虚拟磁盘文件的位置&gt; maximum=&lt;它的最大大小，以 MiB 为单位&gt; type=expandable</span><br><span class=\"hljs-comment\"># 假如汝有充足的硬盘空间的话，可以把上面的 type=expandable 改为 type=fixed 创建一个固定大小的虚拟磁盘。</span><br><span class=\"hljs-comment\"># 可以提高一些虚拟磁盘的性能。当然动态扩展对 OpenWrt 来说也够用就是了……</span><br>DISKPART&gt; create vdisk file=c:\\test.vhd maximum=8192 <span class=\"hljs-built_in\">type</span>=expandable<br>    100 percent completed<br>DiskPart successfully created the virtual disk file.<br><br><span class=\"hljs-comment\"># 选择刚才创建的虚拟磁盘</span><br><span class=\"hljs-comment\"># select vdisk file=&lt;汝要存放虚拟磁盘文件的位置&gt;</span><br>DISKPART&gt; select vdisk file=c:\\test.vhd<br>DiskPart successfully selected the virtual disk file.<br><br><span class=\"hljs-comment\"># 挂载刚才选择的虚拟磁盘。</span><br>DISKPART&gt; attach vdisk<br>    100 percent completed<br>DiskPart successfully attached the virtual disk file.<br><br><span class=\"hljs-comment\"># 初始化虚拟磁盘为 MBR 分区表。</span><br><span class=\"hljs-comment\"># OpenWrt 官方编译的版本不支持 UEFI 启动，所以就用 MBR 了。</span><br>DISKPART&gt; convert mbr<br>DiskPart successfully converted the selected disk to MBR format.<br><br><span class=\"hljs-comment\"># 在下一步操作完成之后卸载虚拟磁盘</span><br>DISKPART&gt; detach vdisk<br>DiskPart successfully detached the virtual disk file.<br></code></pre></td></tr></table></figure>\n\n<p>接下来把这个映像写入虚拟磁盘就 OK 啦。（以及咱发现 Rufus 能把虚拟磁盘识别出来）</p>\n<h3 id=\"OpenWrt\"><a href=\"#OpenWrt\" class=\"headerlink\" title=\"OpenWrt\"></a>OpenWrt</h3><p>个人使用的编译版本地址</p>\n<blockquote>\n<p><a href=\"https://netflixcn.com/miji/46.html\">https://netflixcn.com/miji/46.html</a></p>\n</blockquote>\n<p>密码：netflixcn.com</p>\n<h3 id=\"编译openwrt\"><a href=\"#编译openwrt\" class=\"headerlink\" title=\"编译openwrt\"></a>编译openwrt</h3><p>使用github编译openwrt,可以参考该<a href=\"https://p3terx.com/archives/build-openwrt-with-github-actions.html\">教程</a>比较全面.</p>\n","site":{"data":{}},"wordcount":4128,"excerpt":"","more":"<h2 id=\"VPN\"><a href=\"#VPN\" class=\"headerlink\" title=\"VPN\"></a>VPN</h2><h3 id=\"搭建X-UI\"><a href=\"#搭建X-UI\" class=\"headerlink\" title=\"搭建X-UI\"></a>搭建X-UI</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -itd --network=host \\<br>    -v <span class=\"hljs-variable\">$PWD</span>/db/:/etc/x-ui/ \\<br>    -v <span class=\"hljs-variable\">$PWD</span>/cert/:/root/cert/ \\<br>    --name x-ui --restart=unless-stopped \\<br>    enwaiax/x-ui:latest<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装BBR\"><a href=\"#安装BBR\" class=\"headerlink\" title=\"安装BBR\"></a>安装BBR</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">wget <span class=\"hljs-string\">&quot;https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh&quot;</span> &amp;&amp; <span class=\"hljs-built_in\">chmod</span> +x tcp.sh &amp;&amp; ./tcp.sh<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"搭建v2board\"><a href=\"#搭建v2board\" class=\"headerlink\" title=\"搭建v2board\"></a>搭建v2board</h3><h4 id=\"docker搭建\"><a href=\"#docker搭建\" class=\"headerlink\" title=\"docker搭建\"></a>docker搭建</h4><p>docker搭建:   <a href=\"https://github.com/GZ1903/docker_v2board\">GitHub</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -d \\<br>--name=v2board \\<br>--privileged=<span class=\"hljs-literal\">true</span> \\<br>--restart always \\<br>-v /root/v2board/nginx:/usr/share/nginx/html/v2board \\<br>-v /root/v2board/data:/var/lib/mysql \\<br>-p 80:80 \\<br>-p 443:443 \\<br>gz1903/v2board:1.6.0<br></code></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>MySQL_Default_USER</th>\n<th>ROOT</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>MySQL_Default_PASS</td>\n<td><a href=\"mailto:v2board@qq.com\">v2board@qq.com</a></td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>V2Board_Admin_USER</th>\n<th><a href=\"mailto:v2board@qq.com\">v2board@qq.com</a></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>V2Board_Admin_PASS</td>\n<td><a href=\"mailto:v2board@qq.com\">v2board@qq.com</a></td>\n</tr>\n</tbody></table>\n<h5 id=\"版本升级\"><a href=\"#版本升级\" class=\"headerlink\" title=\"版本升级\"></a>版本升级</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">Interact</span><br>docker exec -it v2board /bin/bash<br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">Get the new version of v2board</span><br>git clone https://github.com/v2board/v2board.git /usr/share/nginx/html/v2board/<br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">Install</span><br>cd /usr/share/nginx/html/v2board &amp;&amp; sh /usr/share/nginx/html/v2board/init.sh<br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">mysqlpass =&gt; v2board@qq.com</span> <br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">Give v2board permission</span><br>chmod -R 777 /usr/share/nginx/html/v2board<br><span class=\"hljs-meta prompt_\">#</span><span class=\"language-bash\">Restart queue</span><br>supervisorctl restart v2board<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"DockerCompose搭建\"><a href=\"#DockerCompose搭建\" class=\"headerlink\" title=\"DockerCompose搭建\"></a>DockerCompose搭建</h4><h5 id=\"使用-Docker-安装-V2Board\"><a href=\"#使用-Docker-安装-V2Board\" class=\"headerlink\" title=\"使用 Docker 安装 V2Board\"></a>使用 Docker 安装 V2Board</h5><h5 id=\"安装-Docker\"><a href=\"#安装-Docker\" class=\"headerlink\" title=\"安装 Docker\"></a>安装 Docker</h5><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">curl -fsSL https:<span class=\"hljs-regexp\">//g</span>et.docker.com | bash<br>curl -L <span class=\"hljs-string\">&quot;https://github.com/docker/compose/releases/download/1.25.3/docker-compose-$(uname -s)-$(uname -m)&quot;</span> -o <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/bin/</span>docker-compose<br>chmod a+x <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/bin/</span>docker-compose<br><span class=\"hljs-comment\"># 创建个软链接，以后用 dc 命令来代替 docker-compose</span><br>rm -rf which dc  <span class=\"hljs-comment\"># 若系统中存在 dc 则删除，这个 dc 就是个计算器，完全没有用</span><br>ln -s <span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/bin/</span>docker-compose <span class=\"hljs-regexp\">/usr/</span>bin/dc<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"克隆代码\"><a href=\"#克隆代码\" class=\"headerlink\" title=\"克隆代码\"></a>克隆代码</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> https://github.com/v2board/v2board-docker.git<br><span class=\"hljs-built_in\">cd</span> v2board-docker/<br>git submodule update --init<br><span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&#x27;  branch = dev&#x27;</span> &gt;&gt; .gitmodules<br>git submodule update --remote<br></code></pre></td></tr></table></figure>\n\n<p>修改’caddy.conf’<br>第一行’http://你的域名 {‘</p>\n<h5 id=\"启动环境\"><a href=\"#启动环境\" class=\"headerlink\" title=\"启动环境\"></a>启动环境</h5><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">dc up -d</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"安装配置-V2Board\"><a href=\"#安装配置-V2Board\" class=\"headerlink\" title=\"安装配置 V2Board\"></a>安装配置 V2Board</h5><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">dc <span class=\"hljs-built_in\">exec</span> www bash<br>bash<span class=\"hljs-number\">-5.0</span><span class=\"hljs-meta\"># wget https:<span class=\"hljs-comment\">//getcomposer.org/download/2.5.1/composer.phar</span></span><br>bash<span class=\"hljs-number\">-5.0</span><span class=\"hljs-meta\"># php composer.phar install</span><br>bash<span class=\"hljs-number\">-5.0</span><span class=\"hljs-meta\"># php artisan v2board:install</span><br>数据库地址： mysql<br>数据库名：v2board<br>数据库用户名：root<br>数据库密码：v2boardisbest<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"手动\"><a href=\"#手动\" class=\"headerlink\" title=\"手动\"></a>手动</h4><p>官方搭建手册：<a href=\"https://docs.v2board.com/deploy/aapanel.html\"> V2Board 使用手册</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> https://github.com/GZ1903/docker_v2board.git /usr/local/src/docker_v2board &amp;&amp; <span class=\"hljs-built_in\">cd</span> /usr/local/src/docker_v2board &amp;&amp; <span class=\"hljs-built_in\">chmod</span> +x docker_v2board.sh &amp;&amp; ./docker_v2board.sh<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"后端对接\"><a href=\"#后端对接\" class=\"headerlink\" title=\"后端对接\"></a>后端对接</h4><p>参考： <a href=\"https://xrayr-project.github.io/XrayR-doc/xrayr-xia-zai-he-an-zhuang/install/docker.html\">使用docker安装 · GitBook (xrayr-project.github.io)</a></p>\n<h3 id=\"搭建Telegram代理\"><a href=\"#搭建Telegram代理\" class=\"headerlink\" title=\"搭建Telegram代理\"></a>搭建Telegram代理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run --name s5 -d --restart=always -p 1111:1111 -e <span class=\"hljs-string\">&quot;USERS=cloud:112233&quot;</span> egregors/socks5-server<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"部署warp\"><a href=\"#部署warp\" class=\"headerlink\" title=\"部署warp\"></a>部署warp</h3><p>参考地址：<a href=\"https://p3terx.com/archives/cloudflare-warp-configuration-script.html\">https://p3terx.com/archives/cloudflare-warp-configuration-script.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">bash &lt;(curl -fsSL git.io/warp.sh) d<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"虚拟软路由\"><a href=\"#虚拟软路由\" class=\"headerlink\" title=\"虚拟软路由\"></a>虚拟软路由</h3><h4 id=\"Hyper-V搭建openWrt\"><a href=\"#Hyper-V搭建openWrt\" class=\"headerlink\" title=\"Hyper-V搭建openWrt\"></a><a href=\"https://blog.yoitsu.moe/tech_misc/hyper_v_with_openwrt.html\">Hyper-V搭建openWrt</a></h4><p><strong>准备工作 - Hyper-V 管理器、映像和创建虚拟机</strong></p>\n<p>要使用 Hyper-V 的话，汝得有一个 Windows 8.1/10 专业版或者企业版， 或者 Windows Server 2012 以后的 Windows Server 才行。同时也要求汝的 CPU 支持必要的虚拟化技术。 （Intel VT-x 或者 AMD-V 什么的）可以通过 PowerShell 里的 systeminfo 命令确定是否可以开启 Hyper-V 。</p>\n<p>在满足了前置要求之后，可以这样启用 Hyper-V：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 如果提示找不到命令的话，换以管理员身份运行的 PowerShell 窗口。</span><br>Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All<br></code></pre></td></tr></table></figure>\n\n<p>或者用“启用或关闭 Windows 功能”也是可以的。</p>\n<p><strong>下载和转换 OpenWrt 映像</strong></p>\n<p>接下来到 OpenWrt 的网站上下载映像 （这时候最新的版本是 19.07，于是链接就是 <a href=\"https://downloads.openwrt.org/releases/19.07.7/targets/x86/64/\">https://downloads.openwrt.org/releases/19.07.7/targets/x86/64/</a> ）</p>\n<p>这里咱们选择包含有内核和 rootfs 的 combined 那俩， 区别在于 squashfs 那个安装好以后系统分区像在普通路由器一样是只读的，可以实现像是升级或者复位等功能。 不过咱大概会用检查点来实现这些，那就直接用 ext4 的好了。下载和解压以后汝大概就可以得到一个像是 openwrt-19.07.7-x86-64-combined-ext4.img 这样的文件了。</p>\n<p>但是 Hyper-V 只能用微软自己的 VHD 或者 VHDX 格式，所以还需要转换一下。 转换的方法有很多，咱这里给出咱的一个例子。</p>\n<p>创建一个虚拟磁盘。这里用了 diskpart 命令。如果汝更偏好用磁盘管理操作的话， 可以参考 <a href=\"https://docs.microsoft.com/zh-cn/windows-server/storage/disk-management/manage-virtual-hard-disks\">这篇文章</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">Microsoft DiskPart version 10.0.21332.1000<br>Copyright (C) Microsoft Corporation.<br>On computer: DESKTOP-H6MANBV<br><br><span class=\"hljs-comment\"># 创建一个虚拟磁盘文件</span><br><span class=\"hljs-comment\"># create vdisk file=&lt;汝要存放虚拟磁盘文件的位置&gt; maximum=&lt;它的最大大小，以 MiB 为单位&gt; type=expandable</span><br><span class=\"hljs-comment\"># 假如汝有充足的硬盘空间的话，可以把上面的 type=expandable 改为 type=fixed 创建一个固定大小的虚拟磁盘。</span><br><span class=\"hljs-comment\"># 可以提高一些虚拟磁盘的性能。当然动态扩展对 OpenWrt 来说也够用就是了……</span><br>DISKPART&gt; create vdisk file=c:\\test.vhd maximum=8192 <span class=\"hljs-built_in\">type</span>=expandable<br>    100 percent completed<br>DiskPart successfully created the virtual disk file.<br><br><span class=\"hljs-comment\"># 选择刚才创建的虚拟磁盘</span><br><span class=\"hljs-comment\"># select vdisk file=&lt;汝要存放虚拟磁盘文件的位置&gt;</span><br>DISKPART&gt; select vdisk file=c:\\test.vhd<br>DiskPart successfully selected the virtual disk file.<br><br><span class=\"hljs-comment\"># 挂载刚才选择的虚拟磁盘。</span><br>DISKPART&gt; attach vdisk<br>    100 percent completed<br>DiskPart successfully attached the virtual disk file.<br><br><span class=\"hljs-comment\"># 初始化虚拟磁盘为 MBR 分区表。</span><br><span class=\"hljs-comment\"># OpenWrt 官方编译的版本不支持 UEFI 启动，所以就用 MBR 了。</span><br>DISKPART&gt; convert mbr<br>DiskPart successfully converted the selected disk to MBR format.<br><br><span class=\"hljs-comment\"># 在下一步操作完成之后卸载虚拟磁盘</span><br>DISKPART&gt; detach vdisk<br>DiskPart successfully detached the virtual disk file.<br></code></pre></td></tr></table></figure>\n\n<p>接下来把这个映像写入虚拟磁盘就 OK 啦。（以及咱发现 Rufus 能把虚拟磁盘识别出来）</p>\n<h3 id=\"OpenWrt\"><a href=\"#OpenWrt\" class=\"headerlink\" title=\"OpenWrt\"></a>OpenWrt</h3><p>个人使用的编译版本地址</p>\n<blockquote>\n<p><a href=\"https://netflixcn.com/miji/46.html\">https://netflixcn.com/miji/46.html</a></p>\n</blockquote>\n<p>密码：netflixcn.com</p>\n<h3 id=\"编译openwrt\"><a href=\"#编译openwrt\" class=\"headerlink\" title=\"编译openwrt\"></a>编译openwrt</h3><p>使用github编译openwrt,可以参考该<a href=\"https://p3terx.com/archives/build-openwrt-with-github-actions.html\">教程</a>比较全面.</p>\n"},{"title":"Npm笔记","date":"2022-04-10T05:18:34.000Z","description":"Npm笔记.","_content":"## NPM笔记\n\n#### 下载node.js\n\n> 官网网站 ： [https://nodejs.org/zh-cn/](https://nodejs.org/zh-cn/)\n\n#### 安装淘宝镜像(cnpm)\n\n```bash\nnpm install -g cnpm --registry=http://registry.npm.taobao.org\n```\n\n> 配置npm永久使用(换源)\n\n```bash\nnpm config set registry https://registry.npm.taobao.org\n```\n\n#### 查看源\n\n> ```\n> npm get registry\n> ```\n\n#### 修改回默认源\n\n> ```\n> npm config set registry https://registry.npmjs.org/\n> ```\n\n#### 安装webpack\n\n```bash\nnpm install webpack -g \n```\n\n#### 安装vue\n\n#### 默认版本\n\n```bash\nnpm install vue-cli -g\n```\n\n#### 3.\\*版本\n\n```bash\nnpm install @vue/cli -g\n```\n\n#### npm install chromedriver问题\n\n> npm install报错：chromedriver@2.27.2 install: node install.js\n\n1、如果执行过npm install，先删除 node\\_modules 文件夹，不然运行的时候可能会报错 2、执行下面的命令\n\n```bash\nnpm install chromedriver --chromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver\n```\n\n3、再执行 npm install 即可正常下载\n\n> 分析\n\n经分析发现，某些版本下，chromedriver 的 zip 文件 url 的响应是 302 跳转，而在 install.js 里使用的是 Node.js 内置的 http 对象的 get 方法无法处理 302 跳转的情况；而在另外一些情况下，则是因为 googleapis.com 被墙了，此时即使采用科学 上网的方法也仍然无法获取文件。\n\n#### node-sass\n\n镜像地址改为淘宝镜像\n\n> npm config set sass\\_binary\\_site=[https://npm.taobao.org/mirrors/node-sass](https://npm.taobao.org/mirrors/node-sass)\n\n#### Vue 发布\n\n> 使用npm run build 打包 会得到一个dist文件夹\n\n> nginx配置\n\n```bash\n#location / {\n        #    root  html/dark/dist/;\n        #    index index.html; # 主页\n        #}\n```\n","source":"_posts/npm.md","raw":"---\ntitle: Npm笔记\ndate: 2022-04-10 13:18:34\ntags: FrontEnd\ncategories: FrontEnd\ndescription: Npm笔记.\n---\n## NPM笔记\n\n#### 下载node.js\n\n> 官网网站 ： [https://nodejs.org/zh-cn/](https://nodejs.org/zh-cn/)\n\n#### 安装淘宝镜像(cnpm)\n\n```bash\nnpm install -g cnpm --registry=http://registry.npm.taobao.org\n```\n\n> 配置npm永久使用(换源)\n\n```bash\nnpm config set registry https://registry.npm.taobao.org\n```\n\n#### 查看源\n\n> ```\n> npm get registry\n> ```\n\n#### 修改回默认源\n\n> ```\n> npm config set registry https://registry.npmjs.org/\n> ```\n\n#### 安装webpack\n\n```bash\nnpm install webpack -g \n```\n\n#### 安装vue\n\n#### 默认版本\n\n```bash\nnpm install vue-cli -g\n```\n\n#### 3.\\*版本\n\n```bash\nnpm install @vue/cli -g\n```\n\n#### npm install chromedriver问题\n\n> npm install报错：chromedriver@2.27.2 install: node install.js\n\n1、如果执行过npm install，先删除 node\\_modules 文件夹，不然运行的时候可能会报错 2、执行下面的命令\n\n```bash\nnpm install chromedriver --chromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver\n```\n\n3、再执行 npm install 即可正常下载\n\n> 分析\n\n经分析发现，某些版本下，chromedriver 的 zip 文件 url 的响应是 302 跳转，而在 install.js 里使用的是 Node.js 内置的 http 对象的 get 方法无法处理 302 跳转的情况；而在另外一些情况下，则是因为 googleapis.com 被墙了，此时即使采用科学 上网的方法也仍然无法获取文件。\n\n#### node-sass\n\n镜像地址改为淘宝镜像\n\n> npm config set sass\\_binary\\_site=[https://npm.taobao.org/mirrors/node-sass](https://npm.taobao.org/mirrors/node-sass)\n\n#### Vue 发布\n\n> 使用npm run build 打包 会得到一个dist文件夹\n\n> nginx配置\n\n```bash\n#location / {\n        #    root  html/dark/dist/;\n        #    index index.html; # 主页\n        #}\n```\n","slug":"npm","published":1,"updated":"2022-12-22T12:22:40.152Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcwycoss0014h0u29o581lw0","content":"<h2 id=\"NPM笔记\"><a href=\"#NPM笔记\" class=\"headerlink\" title=\"NPM笔记\"></a>NPM笔记</h2><h4 id=\"下载node-js\"><a href=\"#下载node-js\" class=\"headerlink\" title=\"下载node.js\"></a>下载node.js</h4><blockquote>\n<p>官网网站 ： <a href=\"https://nodejs.org/zh-cn/\">https://nodejs.org/zh-cn/</a></p>\n</blockquote>\n<h4 id=\"安装淘宝镜像-cnpm\"><a href=\"#安装淘宝镜像-cnpm\" class=\"headerlink\" title=\"安装淘宝镜像(cnpm)\"></a>安装淘宝镜像(cnpm)</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install -g cnpm --registry=http://registry.npm.taobao.org<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>配置npm永久使用(换源)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm config <span class=\"hljs-built_in\">set</span> registry https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"查看源\"><a href=\"#查看源\" class=\"headerlink\" title=\"查看源\"></a>查看源</h4><blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">npm <span class=\"hljs-built_in\">get</span> registry<br></code></pre></td></tr></table></figure>\n</blockquote>\n<h4 id=\"修改回默认源\"><a href=\"#修改回默认源\" class=\"headerlink\" title=\"修改回默认源\"></a>修改回默认源</h4><blockquote>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arduino\">npm config set registry https:<span class=\"hljs-comment\">//registry.npmjs.org/</span><br></code></pre></td></tr></table></figure>\n</blockquote>\n<h4 id=\"安装webpack\"><a href=\"#安装webpack\" class=\"headerlink\" title=\"安装webpack\"></a>安装webpack</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install webpack -g <br></code></pre></td></tr></table></figure>\n\n<h4 id=\"安装vue\"><a href=\"#安装vue\" class=\"headerlink\" title=\"安装vue\"></a>安装vue</h4><h4 id=\"默认版本\"><a href=\"#默认版本\" class=\"headerlink\" title=\"默认版本\"></a>默认版本</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install vue-cli -g<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3-版本\"><a href=\"#3-版本\" class=\"headerlink\" title=\"3.*版本\"></a>3.*版本</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install @vue/cli -g<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"npm-install-chromedriver问题\"><a href=\"#npm-install-chromedriver问题\" class=\"headerlink\" title=\"npm install chromedriver问题\"></a>npm install chromedriver问题</h4><blockquote>\n<p>npm install报错：<a href=\"mailto:&#x63;&#x68;&#114;&#x6f;&#x6d;&#101;&#x64;&#114;&#x69;&#x76;&#x65;&#114;&#x40;&#x32;&#x2e;&#x32;&#x37;&#x2e;&#x32;\">&#x63;&#x68;&#114;&#x6f;&#x6d;&#101;&#x64;&#114;&#x69;&#x76;&#x65;&#114;&#x40;&#x32;&#x2e;&#x32;&#x37;&#x2e;&#x32;</a> install: node install.js</p>\n</blockquote>\n<p>1、如果执行过npm install，先删除 node_modules 文件夹，不然运行的时候可能会报错 2、执行下面的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install chromedriver --chromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver<br></code></pre></td></tr></table></figure>\n\n<p>3、再执行 npm install 即可正常下载</p>\n<blockquote>\n<p>分析</p>\n</blockquote>\n<p>经分析发现，某些版本下，chromedriver 的 zip 文件 url 的响应是 302 跳转，而在 install.js 里使用的是 Node.js 内置的 http 对象的 get 方法无法处理 302 跳转的情况；而在另外一些情况下，则是因为 googleapis.com 被墙了，此时即使采用科学 上网的方法也仍然无法获取文件。</p>\n<h4 id=\"node-sass\"><a href=\"#node-sass\" class=\"headerlink\" title=\"node-sass\"></a>node-sass</h4><p>镜像地址改为淘宝镜像</p>\n<blockquote>\n<p>npm config set sass_binary_site=<a href=\"https://npm.taobao.org/mirrors/node-sass\">https://npm.taobao.org/mirrors/node-sass</a></p>\n</blockquote>\n<h4 id=\"Vue-发布\"><a href=\"#Vue-发布\" class=\"headerlink\" title=\"Vue 发布\"></a>Vue 发布</h4><blockquote>\n<p>使用npm run build 打包 会得到一个dist文件夹</p>\n</blockquote>\n<blockquote>\n<p>nginx配置</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#location / &#123;</span><br>        <span class=\"hljs-comment\">#    root  html/dark/dist/;</span><br>        <span class=\"hljs-comment\">#    index index.html; # 主页</span><br>        <span class=\"hljs-comment\">#&#125;</span><br></code></pre></td></tr></table></figure>\n","site":{"data":{}},"wordcount":1022,"excerpt":"","more":"<h2 id=\"NPM笔记\"><a href=\"#NPM笔记\" class=\"headerlink\" title=\"NPM笔记\"></a>NPM笔记</h2><h4 id=\"下载node-js\"><a href=\"#下载node-js\" class=\"headerlink\" title=\"下载node.js\"></a>下载node.js</h4><blockquote>\n<p>官网网站 ： <a href=\"https://nodejs.org/zh-cn/\">https://nodejs.org/zh-cn/</a></p>\n</blockquote>\n<h4 id=\"安装淘宝镜像-cnpm\"><a href=\"#安装淘宝镜像-cnpm\" class=\"headerlink\" title=\"安装淘宝镜像(cnpm)\"></a>安装淘宝镜像(cnpm)</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install -g cnpm --registry=http://registry.npm.taobao.org<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>配置npm永久使用(换源)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm config <span class=\"hljs-built_in\">set</span> registry https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"查看源\"><a href=\"#查看源\" class=\"headerlink\" title=\"查看源\"></a>查看源</h4><blockquote>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">npm <span class=\"hljs-built_in\">get</span> registry<br></code></pre></td></tr></table></figure>\n</blockquote>\n<h4 id=\"修改回默认源\"><a href=\"#修改回默认源\" class=\"headerlink\" title=\"修改回默认源\"></a>修改回默认源</h4><blockquote>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arduino\">npm config set registry https:<span class=\"hljs-comment\">//registry.npmjs.org/</span><br></code></pre></td></tr></table></figure>\n</blockquote>\n<h4 id=\"安装webpack\"><a href=\"#安装webpack\" class=\"headerlink\" title=\"安装webpack\"></a>安装webpack</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install webpack -g <br></code></pre></td></tr></table></figure>\n\n<h4 id=\"安装vue\"><a href=\"#安装vue\" class=\"headerlink\" title=\"安装vue\"></a>安装vue</h4><h4 id=\"默认版本\"><a href=\"#默认版本\" class=\"headerlink\" title=\"默认版本\"></a>默认版本</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install vue-cli -g<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3-版本\"><a href=\"#3-版本\" class=\"headerlink\" title=\"3.*版本\"></a>3.*版本</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install @vue/cli -g<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"npm-install-chromedriver问题\"><a href=\"#npm-install-chromedriver问题\" class=\"headerlink\" title=\"npm install chromedriver问题\"></a>npm install chromedriver问题</h4><blockquote>\n<p>npm install报错：<a href=\"mailto:&#x63;&#x68;&#114;&#x6f;&#x6d;&#101;&#x64;&#114;&#x69;&#x76;&#x65;&#114;&#x40;&#x32;&#x2e;&#x32;&#x37;&#x2e;&#x32;\">&#x63;&#x68;&#114;&#x6f;&#x6d;&#101;&#x64;&#114;&#x69;&#x76;&#x65;&#114;&#x40;&#x32;&#x2e;&#x32;&#x37;&#x2e;&#x32;</a> install: node install.js</p>\n</blockquote>\n<p>1、如果执行过npm install，先删除 node_modules 文件夹，不然运行的时候可能会报错 2、执行下面的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install chromedriver --chromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver<br></code></pre></td></tr></table></figure>\n\n<p>3、再执行 npm install 即可正常下载</p>\n<blockquote>\n<p>分析</p>\n</blockquote>\n<p>经分析发现，某些版本下，chromedriver 的 zip 文件 url 的响应是 302 跳转，而在 install.js 里使用的是 Node.js 内置的 http 对象的 get 方法无法处理 302 跳转的情况；而在另外一些情况下，则是因为 googleapis.com 被墙了，此时即使采用科学 上网的方法也仍然无法获取文件。</p>\n<h4 id=\"node-sass\"><a href=\"#node-sass\" class=\"headerlink\" title=\"node-sass\"></a>node-sass</h4><p>镜像地址改为淘宝镜像</p>\n<blockquote>\n<p>npm config set sass_binary_site=<a href=\"https://npm.taobao.org/mirrors/node-sass\">https://npm.taobao.org/mirrors/node-sass</a></p>\n</blockquote>\n<h4 id=\"Vue-发布\"><a href=\"#Vue-发布\" class=\"headerlink\" title=\"Vue 发布\"></a>Vue 发布</h4><blockquote>\n<p>使用npm run build 打包 会得到一个dist文件夹</p>\n</blockquote>\n<blockquote>\n<p>nginx配置</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#location / &#123;</span><br>        <span class=\"hljs-comment\">#    root  html/dark/dist/;</span><br>        <span class=\"hljs-comment\">#    index index.html; # 主页</span><br>        <span class=\"hljs-comment\">#&#125;</span><br></code></pre></td></tr></table></figure>\n"},{"title":"sql笔记","date":"2022-04-10T05:18:34.000Z","description":"sql笔记.","_content":"\n## MYSQL\n\n### 创建用户\n\n% : 一般为IP地址\n\n``` sql\nCREATE USER '用户名称'@'%' IDENTIFIED BY '密码';\n```\n\n### 赋予权限\n\n``` sql\nGRANT SELECT, INSERT, UPDATE, REFERENCES, DELETE, CREATE, DROP, ALTER, INDEX, CREATE VIEW, SHOW VIEW ON `数据库名称`.* TO '用户名'@'IP';\n```\n\n### 查重\n\n``` sql\n-- 单字段（name）\n-- 查出所有有重复记录的所有记录\nselect * from user where `user`.`name` in\n     (select `user`.`name` from user group by name having count(`user`.`name`)>1);\n```\n\n``` sql\n-- 多字段（nick_name,password）\n-- 查出所有有重复记录的记录\nselect * from user where (nick_name,password) in\n     (select nick_name,password from user group by nick_name,password where having count(nick_name)>1);\n```\n\n### 去重\n\n``` sql\n-- 只可以查到单字段\nselect distinct `user`.`name` from `user`\n```\n\n### 修改密码\n\n> 8版本\n\n``` sql\nALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '你的密码'\n```\n\n### MySQL重置自增ID\n\n``` sql\nalter table 表名 drop id;\n\nalter table 表名 add id bigint primary key not null auto_increment first;\n```\n\n## PostgreSQL\n\n### id重新自增\n\n``` sql\nTRUNCATE TABLE 表名 RESTART IDENTITY CASCADE;\n```\n\n### 表id自增\n\n```sql\nCREATE SEQUENCE IF NOT EXISTS [t_table_id_seq];\n```\n\n### 强制删除现有连接\n\n```sql\nSELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = '[database]' AND pid <> pg_backend_pid();\n```\n\n### 删除数据库\n\n```sql\ndrop database [database];\n```\n\n## Cypher\n\n> 查询\n\n``` CQL\nMATCH (n) RETURN n LIMIT 25\n```\n\n> 删除图\n\n```CQL\nMATCH (n) DETACH DELETE n\n```\n\n> 创建\n\n```CQL\n--可以有多个lable\nCREATE (<node-name>:<label-name>)\n```\n\n> SET\n\n```CQL\n--给现有的lable添加属性\nmatch (n:Person) set n.name = 'ceshi' return n\n```\n\n> DELETE 会删除标签本身\n\n```CQL\n--删除节点或关系的属性 | 删除节点及相关节点和关系\nDELETE <node-name-list>\n--删除name为ceshi的数据   \nMATCH (n:Dept) WHERE n.name = \"ceshi\" DELETE n\n```\n\n> REMOVE 不会删除标签本身\n\n```CQL\n--删除节点或关系的标签 | 删除节点或关系的属性\n--类似于删除表中的列\nREMOVE <property-name-list>\n--删除name为ceshi的属性 \nMATCH (person { name:\"ceshi\" }) REMOVE person.name RETURN person\n```\n","source":"_posts/sql.md","raw":"---\ntitle: sql笔记\ndate: 2022-04-10 13:18:34\ntags: SQL\ncategories: SQL\ndescription: sql笔记.\n---\n\n## MYSQL\n\n### 创建用户\n\n% : 一般为IP地址\n\n``` sql\nCREATE USER '用户名称'@'%' IDENTIFIED BY '密码';\n```\n\n### 赋予权限\n\n``` sql\nGRANT SELECT, INSERT, UPDATE, REFERENCES, DELETE, CREATE, DROP, ALTER, INDEX, CREATE VIEW, SHOW VIEW ON `数据库名称`.* TO '用户名'@'IP';\n```\n\n### 查重\n\n``` sql\n-- 单字段（name）\n-- 查出所有有重复记录的所有记录\nselect * from user where `user`.`name` in\n     (select `user`.`name` from user group by name having count(`user`.`name`)>1);\n```\n\n``` sql\n-- 多字段（nick_name,password）\n-- 查出所有有重复记录的记录\nselect * from user where (nick_name,password) in\n     (select nick_name,password from user group by nick_name,password where having count(nick_name)>1);\n```\n\n### 去重\n\n``` sql\n-- 只可以查到单字段\nselect distinct `user`.`name` from `user`\n```\n\n### 修改密码\n\n> 8版本\n\n``` sql\nALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '你的密码'\n```\n\n### MySQL重置自增ID\n\n``` sql\nalter table 表名 drop id;\n\nalter table 表名 add id bigint primary key not null auto_increment first;\n```\n\n## PostgreSQL\n\n### id重新自增\n\n``` sql\nTRUNCATE TABLE 表名 RESTART IDENTITY CASCADE;\n```\n\n### 表id自增\n\n```sql\nCREATE SEQUENCE IF NOT EXISTS [t_table_id_seq];\n```\n\n### 强制删除现有连接\n\n```sql\nSELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = '[database]' AND pid <> pg_backend_pid();\n```\n\n### 删除数据库\n\n```sql\ndrop database [database];\n```\n\n## Cypher\n\n> 查询\n\n``` CQL\nMATCH (n) RETURN n LIMIT 25\n```\n\n> 删除图\n\n```CQL\nMATCH (n) DETACH DELETE n\n```\n\n> 创建\n\n```CQL\n--可以有多个lable\nCREATE (<node-name>:<label-name>)\n```\n\n> SET\n\n```CQL\n--给现有的lable添加属性\nmatch (n:Person) set n.name = 'ceshi' return n\n```\n\n> DELETE 会删除标签本身\n\n```CQL\n--删除节点或关系的属性 | 删除节点及相关节点和关系\nDELETE <node-name-list>\n--删除name为ceshi的数据   \nMATCH (n:Dept) WHERE n.name = \"ceshi\" DELETE n\n```\n\n> REMOVE 不会删除标签本身\n\n```CQL\n--删除节点或关系的标签 | 删除节点或关系的属性\n--类似于删除表中的列\nREMOVE <property-name-list>\n--删除name为ceshi的属性 \nMATCH (person { name:\"ceshi\" }) REMOVE person.name RETURN person\n```\n","slug":"sql","published":1,"updated":"2022-12-26T13:38:40.480Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcwycoss0016h0u27z9l731i","content":"<h2 id=\"MYSQL\"><a href=\"#MYSQL\" class=\"headerlink\" title=\"MYSQL\"></a>MYSQL</h2><h3 id=\"创建用户\"><a href=\"#创建用户\" class=\"headerlink\" title=\"创建用户\"></a>创建用户</h3><p>% : 一般为IP地址</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">&#x27;用户名称&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span> IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;密码&#x27;</span>;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"赋予权限\"><a href=\"#赋予权限\" class=\"headerlink\" title=\"赋予权限\"></a>赋予权限</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-keyword\">SELECT</span>, <span class=\"hljs-keyword\">INSERT</span>, <span class=\"hljs-keyword\">UPDATE</span>, <span class=\"hljs-keyword\">REFERENCES</span>, <span class=\"hljs-keyword\">DELETE</span>, <span class=\"hljs-keyword\">CREATE</span>, <span class=\"hljs-keyword\">DROP</span>, <span class=\"hljs-keyword\">ALTER</span>, INDEX, <span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">VIEW</span>, <span class=\"hljs-keyword\">SHOW</span> <span class=\"hljs-keyword\">VIEW</span> <span class=\"hljs-keyword\">ON</span> `数据库名称`.<span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">&#x27;用户名&#x27;</span>@<span class=\"hljs-string\">&#x27;IP&#x27;</span>;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查重\"><a href=\"#查重\" class=\"headerlink\" title=\"查重\"></a>查重</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 单字段（name）</span><br><span class=\"hljs-comment\">-- 查出所有有重复记录的所有记录</span><br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-keyword\">user</span> <span class=\"hljs-keyword\">where</span> `<span class=\"hljs-keyword\">user</span>`.`name` <span class=\"hljs-keyword\">in</span><br>     (<span class=\"hljs-keyword\">select</span> `<span class=\"hljs-keyword\">user</span>`.`name` <span class=\"hljs-keyword\">from</span> <span class=\"hljs-keyword\">user</span> <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> name <span class=\"hljs-keyword\">having</span> <span class=\"hljs-built_in\">count</span>(`<span class=\"hljs-keyword\">user</span>`.`name`)<span class=\"hljs-operator\">&gt;</span><span class=\"hljs-number\">1</span>);<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 多字段（nick_name,password）</span><br><span class=\"hljs-comment\">-- 查出所有有重复记录的记录</span><br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-keyword\">user</span> <span class=\"hljs-keyword\">where</span> (nick_name,password) <span class=\"hljs-keyword\">in</span><br>     (<span class=\"hljs-keyword\">select</span> nick_name,password <span class=\"hljs-keyword\">from</span> <span class=\"hljs-keyword\">user</span> <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> nick_name,password <span class=\"hljs-keyword\">where</span> <span class=\"hljs-keyword\">having</span> <span class=\"hljs-built_in\">count</span>(nick_name)<span class=\"hljs-operator\">&gt;</span><span class=\"hljs-number\">1</span>);<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"去重\"><a href=\"#去重\" class=\"headerlink\" title=\"去重\"></a>去重</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 只可以查到单字段</span><br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">distinct</span> `<span class=\"hljs-keyword\">user</span>`.`name` <span class=\"hljs-keyword\">from</span> `<span class=\"hljs-keyword\">user</span>`<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"修改密码\"><a href=\"#修改密码\" class=\"headerlink\" title=\"修改密码\"></a>修改密码</h3><blockquote>\n<p>8版本</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">&#x27;root&#x27;</span>@<span class=\"hljs-string\">&#x27;localhost&#x27;</span> IDENTIFIED <span class=\"hljs-keyword\">WITH</span> mysql_native_password <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;你的密码&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"MySQL重置自增ID\"><a href=\"#MySQL重置自增ID\" class=\"headerlink\" title=\"MySQL重置自增ID\"></a>MySQL重置自增ID</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> 表名 <span class=\"hljs-keyword\">drop</span> id;<br><br><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> 表名 <span class=\"hljs-keyword\">add</span> id <span class=\"hljs-type\">bigint</span> <span class=\"hljs-keyword\">primary</span> key <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">null</span> auto_increment <span class=\"hljs-keyword\">first</span>;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"PostgreSQL\"><a href=\"#PostgreSQL\" class=\"headerlink\" title=\"PostgreSQL\"></a>PostgreSQL</h2><h3 id=\"id重新自增\"><a href=\"#id重新自增\" class=\"headerlink\" title=\"id重新自增\"></a>id重新自增</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">TRUNCATE</span> <span class=\"hljs-keyword\">TABLE</span> 表名 RESTART <span class=\"hljs-keyword\">IDENTITY</span> CASCADE;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"表id自增\"><a href=\"#表id自增\" class=\"headerlink\" title=\"表id自增\"></a>表id自增</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">CREATE</span> SEQUENCE IF <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">EXISTS</span> [t_table_id_seq];<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"强制删除现有连接\"><a href=\"#强制删除现有连接\" class=\"headerlink\" title=\"强制删除现有连接\"></a>强制删除现有连接</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">SELECT</span> pg_terminate_backend(pg_stat_activity.pid) <span class=\"hljs-keyword\">FROM</span> pg_stat_activity <span class=\"hljs-keyword\">WHERE</span> datname <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;[database]&#x27;</span> <span class=\"hljs-keyword\">AND</span> pid <span class=\"hljs-operator\">&lt;&gt;</span> pg_backend_pid();<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"删除数据库\"><a href=\"#删除数据库\" class=\"headerlink\" title=\"删除数据库\"></a>删除数据库</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">drop</span> database [database];<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Cypher\"><a href=\"#Cypher\" class=\"headerlink\" title=\"Cypher\"></a>Cypher</h2><blockquote>\n<p>查询</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs CQL\">MATCH (n) RETURN n LIMIT 25<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>删除图</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs CQL\">MATCH (n) DETACH DELETE n<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>创建</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs CQL\">--可以有多个lable<br>CREATE (&lt;node-name&gt;:&lt;label-name&gt;)<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>SET</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs CQL\">--给现有的lable添加属性<br>match (n:Person) set n.name = &#x27;ceshi&#x27; return n<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>DELETE 会删除标签本身</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs CQL\">--删除节点或关系的属性 | 删除节点及相关节点和关系<br>DELETE &lt;node-name-list&gt;<br>--删除name为ceshi的数据   <br>MATCH (n:Dept) WHERE n.name = &quot;ceshi&quot; DELETE n<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>REMOVE 不会删除标签本身</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs CQL\">--删除节点或关系的标签 | 删除节点或关系的属性<br>--类似于删除表中的列<br>REMOVE &lt;property-name-list&gt;<br>--删除name为ceshi的属性 <br>MATCH (person &#123; name:&quot;ceshi&quot; &#125;) REMOVE person.name RETURN person<br></code></pre></td></tr></table></figure>\n","site":{"data":{}},"wordcount":1565,"excerpt":"","more":"<h2 id=\"MYSQL\"><a href=\"#MYSQL\" class=\"headerlink\" title=\"MYSQL\"></a>MYSQL</h2><h3 id=\"创建用户\"><a href=\"#创建用户\" class=\"headerlink\" title=\"创建用户\"></a>创建用户</h3><p>% : 一般为IP地址</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">&#x27;用户名称&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span> IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;密码&#x27;</span>;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"赋予权限\"><a href=\"#赋予权限\" class=\"headerlink\" title=\"赋予权限\"></a>赋予权限</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-keyword\">SELECT</span>, <span class=\"hljs-keyword\">INSERT</span>, <span class=\"hljs-keyword\">UPDATE</span>, <span class=\"hljs-keyword\">REFERENCES</span>, <span class=\"hljs-keyword\">DELETE</span>, <span class=\"hljs-keyword\">CREATE</span>, <span class=\"hljs-keyword\">DROP</span>, <span class=\"hljs-keyword\">ALTER</span>, INDEX, <span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">VIEW</span>, <span class=\"hljs-keyword\">SHOW</span> <span class=\"hljs-keyword\">VIEW</span> <span class=\"hljs-keyword\">ON</span> `数据库名称`.<span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">&#x27;用户名&#x27;</span>@<span class=\"hljs-string\">&#x27;IP&#x27;</span>;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查重\"><a href=\"#查重\" class=\"headerlink\" title=\"查重\"></a>查重</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 单字段（name）</span><br><span class=\"hljs-comment\">-- 查出所有有重复记录的所有记录</span><br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-keyword\">user</span> <span class=\"hljs-keyword\">where</span> `<span class=\"hljs-keyword\">user</span>`.`name` <span class=\"hljs-keyword\">in</span><br>     (<span class=\"hljs-keyword\">select</span> `<span class=\"hljs-keyword\">user</span>`.`name` <span class=\"hljs-keyword\">from</span> <span class=\"hljs-keyword\">user</span> <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> name <span class=\"hljs-keyword\">having</span> <span class=\"hljs-built_in\">count</span>(`<span class=\"hljs-keyword\">user</span>`.`name`)<span class=\"hljs-operator\">&gt;</span><span class=\"hljs-number\">1</span>);<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 多字段（nick_name,password）</span><br><span class=\"hljs-comment\">-- 查出所有有重复记录的记录</span><br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-keyword\">user</span> <span class=\"hljs-keyword\">where</span> (nick_name,password) <span class=\"hljs-keyword\">in</span><br>     (<span class=\"hljs-keyword\">select</span> nick_name,password <span class=\"hljs-keyword\">from</span> <span class=\"hljs-keyword\">user</span> <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> nick_name,password <span class=\"hljs-keyword\">where</span> <span class=\"hljs-keyword\">having</span> <span class=\"hljs-built_in\">count</span>(nick_name)<span class=\"hljs-operator\">&gt;</span><span class=\"hljs-number\">1</span>);<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"去重\"><a href=\"#去重\" class=\"headerlink\" title=\"去重\"></a>去重</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- 只可以查到单字段</span><br><span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">distinct</span> `<span class=\"hljs-keyword\">user</span>`.`name` <span class=\"hljs-keyword\">from</span> `<span class=\"hljs-keyword\">user</span>`<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"修改密码\"><a href=\"#修改密码\" class=\"headerlink\" title=\"修改密码\"></a>修改密码</h3><blockquote>\n<p>8版本</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">ALTER</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">&#x27;root&#x27;</span>@<span class=\"hljs-string\">&#x27;localhost&#x27;</span> IDENTIFIED <span class=\"hljs-keyword\">WITH</span> mysql_native_password <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;你的密码&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"MySQL重置自增ID\"><a href=\"#MySQL重置自增ID\" class=\"headerlink\" title=\"MySQL重置自增ID\"></a>MySQL重置自增ID</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> 表名 <span class=\"hljs-keyword\">drop</span> id;<br><br><span class=\"hljs-keyword\">alter</span> <span class=\"hljs-keyword\">table</span> 表名 <span class=\"hljs-keyword\">add</span> id <span class=\"hljs-type\">bigint</span> <span class=\"hljs-keyword\">primary</span> key <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">null</span> auto_increment <span class=\"hljs-keyword\">first</span>;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"PostgreSQL\"><a href=\"#PostgreSQL\" class=\"headerlink\" title=\"PostgreSQL\"></a>PostgreSQL</h2><h3 id=\"id重新自增\"><a href=\"#id重新自增\" class=\"headerlink\" title=\"id重新自增\"></a>id重新自增</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">TRUNCATE</span> <span class=\"hljs-keyword\">TABLE</span> 表名 RESTART <span class=\"hljs-keyword\">IDENTITY</span> CASCADE;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"表id自增\"><a href=\"#表id自增\" class=\"headerlink\" title=\"表id自增\"></a>表id自增</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">CREATE</span> SEQUENCE IF <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-keyword\">EXISTS</span> [t_table_id_seq];<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"强制删除现有连接\"><a href=\"#强制删除现有连接\" class=\"headerlink\" title=\"强制删除现有连接\"></a>强制删除现有连接</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">SELECT</span> pg_terminate_backend(pg_stat_activity.pid) <span class=\"hljs-keyword\">FROM</span> pg_stat_activity <span class=\"hljs-keyword\">WHERE</span> datname <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;[database]&#x27;</span> <span class=\"hljs-keyword\">AND</span> pid <span class=\"hljs-operator\">&lt;&gt;</span> pg_backend_pid();<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"删除数据库\"><a href=\"#删除数据库\" class=\"headerlink\" title=\"删除数据库\"></a>删除数据库</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">drop</span> database [database];<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Cypher\"><a href=\"#Cypher\" class=\"headerlink\" title=\"Cypher\"></a>Cypher</h2><blockquote>\n<p>查询</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs CQL\">MATCH (n) RETURN n LIMIT 25<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>删除图</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs CQL\">MATCH (n) DETACH DELETE n<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>创建</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs CQL\">--可以有多个lable<br>CREATE (&lt;node-name&gt;:&lt;label-name&gt;)<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>SET</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs CQL\">--给现有的lable添加属性<br>match (n:Person) set n.name = &#x27;ceshi&#x27; return n<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>DELETE 会删除标签本身</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs CQL\">--删除节点或关系的属性 | 删除节点及相关节点和关系<br>DELETE &lt;node-name-list&gt;<br>--删除name为ceshi的数据   <br>MATCH (n:Dept) WHERE n.name = &quot;ceshi&quot; DELETE n<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>REMOVE 不会删除标签本身</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs CQL\">--删除节点或关系的标签 | 删除节点或关系的属性<br>--类似于删除表中的列<br>REMOVE &lt;property-name-list&gt;<br>--删除name为ceshi的属性 <br>MATCH (person &#123; name:&quot;ceshi&quot; &#125;) REMOVE person.name RETURN person<br></code></pre></td></tr></table></figure>\n"},{"title":"ssl","date":"2022-04-16T06:49:22.000Z","description":"申请ssl证书","_content":"\n## 申请免费ssl证书\n\nGitHub 仓库地址:  [GitHub](https://github.com/acmesh-official/acme.sh)\n\n中文文档：[说明 · acmesh-official/acme.sh Wiki (github.com)](https://github.com/acmesh-official/acme.sh/wiki/说明)\n\n### 安装acme\n\n```bash\ncurl https://get.acme.sh | sh -s email=my@example.com\n```\n\nOR:\n\n```bash\nwget -O -  https://get.acme.sh | sh -s email=my@example.com\n```\n\n### 安装socat\n\n```bash\nyum -y install socat\n```\n\n### 添加别名\n\n```bash\nalias acme.sh=~/.acme.sh/acme.sh\n```\n\n### 注册账号\n\n```bash\nacme.sh --register-account -m my@example.com\n```\n\n### 打开防火墙80端口\n\n```bash\nfirewall-cmd --zone=public --add-port=80/tcp --permanent && firewall-cmd --reload\n```\n\n### 申请证书\n\n####  ZeroSSL\n\n```bash\nacme.sh --set-default-ca --server zerossl --issue -d my@example.com  --standalone -k ec-256\n```\n\n#### letsencrypt\n\n```bash\nacme.sh --set-default-ca --server letsencrypt --issue -d my@example.com  --standalone -k ec-256\n```\n\n#### Buypass\n\n```bash\nacme.sh --set-default-ca --server buypass --issue -d my@example.com  --standalone -k ec-256\n```\n\n### 更新证书\n\n目前证书在 60 天以后会自动更新, 你无需任何操作. 今后有可能会缩短这个时间, 不过都是自动的, 你不用关心.\n\n请确保 cronjob 正确安装, 看起来是类似这样的:\n\n```bash\ncrontab  -l\n\n56 * * * * \"/root/.acme.sh\"/acme.sh --cron --home \"/root/.acme.sh\" > /dev/null\n```\n\n### 自签证书\n\n#### 生成私钥\n\n```bash\nopenssl ecparam -genkey -name prime256v1 -out ca.key\n```\n\n#### 生成证书\n\n```bash\nopenssl req -new -x509 -days 36500 -key ca.key -out ca.crt  -subj \"/CN=[aa.com]\"\n```\n\n### 使用docker运行acme\n\n#### 运行docker容器\n\n执行以下命令运行acme程序，该命令使用腾讯云作为域名服务商，获取[DNSPod Token](https://console.dnspod.cn/account/token/token)地址.\n\n```bash\ndocker run  -itd  -v \"/root/acme\":/acme.sh  -e DP_Key=\"[DNSPod Token]\" -e DP_Id=\"[id]\" --net=host --name=acme.sh neilpang/acme.sh daemon\n```\n\n#### 选择SSL服务商\n\n```bash\ndocker exec acme.sh --set-default-ca --server letsencrypt\n```\n\n#### 注册账户\n\n```bash\ndocker exec acme.sh --register-account -m qazwsxcc@gmail.com\n```\n\n#### 申请泛域名证书\n\n```bash\ndocker exec acme.sh --issue --dns dns_dp -d [example.com] -d [*.example.com]\n```\n\n#### 安装证书\n\n```bash\ndocker exec acme.sh --install-cert -d senhao.top \\\n--key-file       /acme.sh/senhao.top/senhao.top.key  \\\n--fullchain-file /acme.sh/senhao.top/fullchain.cer\n```\n\n### 本机运行acme\n\n```bash\n#安装acme\ncurl https://get.acme.sh | sh -s email=br5cyrqxt@tempmail.cn\n\n#设置别名\nalias acme.sh=~/.acme.sh/acme.sh\n\n#配置SSL服务商\nacme.sh --set-default-ca --server letsencrypt\n\n#注册账户\nacme.sh --register-account -m br5cyrqxt@tempmail.cn\n\n#配置dns\nexport DP_Id=\"123123\"\nexport DP_Key=\"123123123\"\n\n#创建证书\nacme.sh --issue --dns dns_dp -d *.senhao.top -d senhao.top -w /home/acme/senhao\n\n#查看证书\nacme.sh --list\n\n#删除指定证书\nacme.sh --remove -d senhao.top\n```\n\n#### 安装证书\n\n```bash\nacme.sh --install-cert -d example.com \\\n--key-file       /path/to/keyfile/in/nginx/key.pem  \\\n--fullchain-file /path/to/fullchain/nginx/cert.pem \\\n--reloadcmd     \"service nginx force-reload\"\n```\n\n#### 自动更新\n\n```bash\ncrontab  -l\n\n56 * * * * \"/root/.acme.sh\"/acme.sh --cron --home \"/root/.acme.sh\" > /dev/null\n```\n\n\n\n","source":"_posts/ssl.md","raw":"---\ntitle: ssl\ndate: 2022-04-16 14:49:22\ntags: Linux\ncategories: Linux\ndescription: 申请ssl证书\n---\n\n## 申请免费ssl证书\n\nGitHub 仓库地址:  [GitHub](https://github.com/acmesh-official/acme.sh)\n\n中文文档：[说明 · acmesh-official/acme.sh Wiki (github.com)](https://github.com/acmesh-official/acme.sh/wiki/说明)\n\n### 安装acme\n\n```bash\ncurl https://get.acme.sh | sh -s email=my@example.com\n```\n\nOR:\n\n```bash\nwget -O -  https://get.acme.sh | sh -s email=my@example.com\n```\n\n### 安装socat\n\n```bash\nyum -y install socat\n```\n\n### 添加别名\n\n```bash\nalias acme.sh=~/.acme.sh/acme.sh\n```\n\n### 注册账号\n\n```bash\nacme.sh --register-account -m my@example.com\n```\n\n### 打开防火墙80端口\n\n```bash\nfirewall-cmd --zone=public --add-port=80/tcp --permanent && firewall-cmd --reload\n```\n\n### 申请证书\n\n####  ZeroSSL\n\n```bash\nacme.sh --set-default-ca --server zerossl --issue -d my@example.com  --standalone -k ec-256\n```\n\n#### letsencrypt\n\n```bash\nacme.sh --set-default-ca --server letsencrypt --issue -d my@example.com  --standalone -k ec-256\n```\n\n#### Buypass\n\n```bash\nacme.sh --set-default-ca --server buypass --issue -d my@example.com  --standalone -k ec-256\n```\n\n### 更新证书\n\n目前证书在 60 天以后会自动更新, 你无需任何操作. 今后有可能会缩短这个时间, 不过都是自动的, 你不用关心.\n\n请确保 cronjob 正确安装, 看起来是类似这样的:\n\n```bash\ncrontab  -l\n\n56 * * * * \"/root/.acme.sh\"/acme.sh --cron --home \"/root/.acme.sh\" > /dev/null\n```\n\n### 自签证书\n\n#### 生成私钥\n\n```bash\nopenssl ecparam -genkey -name prime256v1 -out ca.key\n```\n\n#### 生成证书\n\n```bash\nopenssl req -new -x509 -days 36500 -key ca.key -out ca.crt  -subj \"/CN=[aa.com]\"\n```\n\n### 使用docker运行acme\n\n#### 运行docker容器\n\n执行以下命令运行acme程序，该命令使用腾讯云作为域名服务商，获取[DNSPod Token](https://console.dnspod.cn/account/token/token)地址.\n\n```bash\ndocker run  -itd  -v \"/root/acme\":/acme.sh  -e DP_Key=\"[DNSPod Token]\" -e DP_Id=\"[id]\" --net=host --name=acme.sh neilpang/acme.sh daemon\n```\n\n#### 选择SSL服务商\n\n```bash\ndocker exec acme.sh --set-default-ca --server letsencrypt\n```\n\n#### 注册账户\n\n```bash\ndocker exec acme.sh --register-account -m qazwsxcc@gmail.com\n```\n\n#### 申请泛域名证书\n\n```bash\ndocker exec acme.sh --issue --dns dns_dp -d [example.com] -d [*.example.com]\n```\n\n#### 安装证书\n\n```bash\ndocker exec acme.sh --install-cert -d senhao.top \\\n--key-file       /acme.sh/senhao.top/senhao.top.key  \\\n--fullchain-file /acme.sh/senhao.top/fullchain.cer\n```\n\n### 本机运行acme\n\n```bash\n#安装acme\ncurl https://get.acme.sh | sh -s email=br5cyrqxt@tempmail.cn\n\n#设置别名\nalias acme.sh=~/.acme.sh/acme.sh\n\n#配置SSL服务商\nacme.sh --set-default-ca --server letsencrypt\n\n#注册账户\nacme.sh --register-account -m br5cyrqxt@tempmail.cn\n\n#配置dns\nexport DP_Id=\"123123\"\nexport DP_Key=\"123123123\"\n\n#创建证书\nacme.sh --issue --dns dns_dp -d *.senhao.top -d senhao.top -w /home/acme/senhao\n\n#查看证书\nacme.sh --list\n\n#删除指定证书\nacme.sh --remove -d senhao.top\n```\n\n#### 安装证书\n\n```bash\nacme.sh --install-cert -d example.com \\\n--key-file       /path/to/keyfile/in/nginx/key.pem  \\\n--fullchain-file /path/to/fullchain/nginx/cert.pem \\\n--reloadcmd     \"service nginx force-reload\"\n```\n\n#### 自动更新\n\n```bash\ncrontab  -l\n\n56 * * * * \"/root/.acme.sh\"/acme.sh --cron --home \"/root/.acme.sh\" > /dev/null\n```\n\n\n\n","slug":"ssl","published":1,"updated":"2023-01-20T03:19:29.911Z","_id":"clcwycost0018h0u2b0k9fmse","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"申请免费ssl证书\"><a href=\"#申请免费ssl证书\" class=\"headerlink\" title=\"申请免费ssl证书\"></a>申请免费ssl证书</h2><p>GitHub 仓库地址:  <a href=\"https://github.com/acmesh-official/acme.sh\">GitHub</a></p>\n<p>中文文档：<a href=\"https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E\">说明 · acmesh-official/acme.sh Wiki (github.com)</a></p>\n<h3 id=\"安装acme\"><a href=\"#安装acme\" class=\"headerlink\" title=\"安装acme\"></a>安装acme</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\">curl https://get.acme.sh | sh -s email=my@example.com<br></code></pre></td></tr></table></figure>\n\n<p>OR:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">wget -O -  https://get.acme.sh | sh -s email=my@example.com<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装socat\"><a href=\"#安装socat\" class=\"headerlink\" title=\"安装socat\"></a>安装socat</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">yum -y install socat<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加别名\"><a href=\"#添加别名\" class=\"headerlink\" title=\"添加别名\"></a>添加别名</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">alias</span> acme.sh=~/.acme.sh/acme.sh<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"注册账号\"><a href=\"#注册账号\" class=\"headerlink\" title=\"注册账号\"></a>注册账号</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">acme.sh --register-account -m my@example.com<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"打开防火墙80端口\"><a href=\"#打开防火墙80端口\" class=\"headerlink\" title=\"打开防火墙80端口\"></a>打开防火墙80端口</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">firewall-cmd --zone=public --add-port=80/tcp --permanent &amp;&amp; firewall-cmd --reload<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"申请证书\"><a href=\"#申请证书\" class=\"headerlink\" title=\"申请证书\"></a>申请证书</h3><h4 id=\"ZeroSSL\"><a href=\"#ZeroSSL\" class=\"headerlink\" title=\"ZeroSSL\"></a>ZeroSSL</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">acme.sh --set-default-ca --server zerossl --issue -d my@example.com  --standalone -k ec-256<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"letsencrypt\"><a href=\"#letsencrypt\" class=\"headerlink\" title=\"letsencrypt\"></a>letsencrypt</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">acme.sh --set-default-ca --server letsencrypt --issue -d my@example.com  --standalone -k ec-256<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Buypass\"><a href=\"#Buypass\" class=\"headerlink\" title=\"Buypass\"></a>Buypass</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">acme.sh --set-default-ca --server buypass --issue -d my@example.com  --standalone -k ec-256<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"更新证书\"><a href=\"#更新证书\" class=\"headerlink\" title=\"更新证书\"></a>更新证书</h3><p>目前证书在 60 天以后会自动更新, 你无需任何操作. 今后有可能会缩短这个时间, 不过都是自动的, 你不用关心.</p>\n<p>请确保 cronjob 正确安装, 看起来是类似这样的:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">crontab  -l<br><br>56 * * * * <span class=\"hljs-string\">&quot;/root/.acme.sh&quot;</span>/acme.sh --cron --home <span class=\"hljs-string\">&quot;/root/.acme.sh&quot;</span> &gt; /dev/null<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"自签证书\"><a href=\"#自签证书\" class=\"headerlink\" title=\"自签证书\"></a>自签证书</h3><h4 id=\"生成私钥\"><a href=\"#生成私钥\" class=\"headerlink\" title=\"生成私钥\"></a>生成私钥</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">openssl ecparam -genkey -name prime256v1 -out ca.key<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"生成证书\"><a href=\"#生成证书\" class=\"headerlink\" title=\"生成证书\"></a>生成证书</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">openssl req -new -x509 -days 36500 -key ca.key -out ca.crt  -subj <span class=\"hljs-string\">&quot;/CN=[aa.com]&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"使用docker运行acme\"><a href=\"#使用docker运行acme\" class=\"headerlink\" title=\"使用docker运行acme\"></a>使用docker运行acme</h3><h4 id=\"运行docker容器\"><a href=\"#运行docker容器\" class=\"headerlink\" title=\"运行docker容器\"></a>运行docker容器</h4><p>执行以下命令运行acme程序，该命令使用腾讯云作为域名服务商，获取<a href=\"https://console.dnspod.cn/account/token/token\">DNSPod Token</a>地址.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run  -itd  -v <span class=\"hljs-string\">&quot;/root/acme&quot;</span>:/acme.sh  -e DP_Key=<span class=\"hljs-string\">&quot;[DNSPod Token]&quot;</span> -e DP_Id=<span class=\"hljs-string\">&quot;[id]&quot;</span> --net=host --name=acme.sh neilpang/acme.sh daemon<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"选择SSL服务商\"><a href=\"#选择SSL服务商\" class=\"headerlink\" title=\"选择SSL服务商\"></a>选择SSL服务商</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> acme.sh --set-default-ca --server letsencrypt<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"注册账户\"><a href=\"#注册账户\" class=\"headerlink\" title=\"注册账户\"></a>注册账户</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> acme.sh --register-account -m qazwsxcc@gmail.com<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"申请泛域名证书\"><a href=\"#申请泛域名证书\" class=\"headerlink\" title=\"申请泛域名证书\"></a>申请泛域名证书</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> acme.sh --issue --dns dns_dp -d [example.com] -d [*.example.com]<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"安装证书\"><a href=\"#安装证书\" class=\"headerlink\" title=\"安装证书\"></a>安装证书</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> acme.sh --install-cert -d senhao.top \\<br>--key-file       /acme.sh/senhao.top/senhao.top.key  \\<br>--fullchain-file /acme.sh/senhao.top/fullchain.cer<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"本机运行acme\"><a href=\"#本机运行acme\" class=\"headerlink\" title=\"本机运行acme\"></a>本机运行acme</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#安装acme</span><br>curl https://get.acme.sh | sh -s email=br5cyrqxt@tempmail.cn<br><br><span class=\"hljs-comment\">#设置别名</span><br><span class=\"hljs-built_in\">alias</span> acme.sh=~/.acme.sh/acme.sh<br><br><span class=\"hljs-comment\">#配置SSL服务商</span><br>acme.sh --set-default-ca --server letsencrypt<br><br><span class=\"hljs-comment\">#注册账户</span><br>acme.sh --register-account -m br5cyrqxt@tempmail.cn<br><br><span class=\"hljs-comment\">#配置dns</span><br><span class=\"hljs-built_in\">export</span> DP_Id=<span class=\"hljs-string\">&quot;123123&quot;</span><br><span class=\"hljs-built_in\">export</span> DP_Key=<span class=\"hljs-string\">&quot;123123123&quot;</span><br><br><span class=\"hljs-comment\">#创建证书</span><br>acme.sh --issue --dns dns_dp -d *.senhao.top -d senhao.top -w /home/acme/senhao<br><br><span class=\"hljs-comment\">#查看证书</span><br>acme.sh --list<br><br><span class=\"hljs-comment\">#删除指定证书</span><br>acme.sh --remove -d senhao.top<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"安装证书-1\"><a href=\"#安装证书-1\" class=\"headerlink\" title=\"安装证书\"></a>安装证书</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">acme.sh --install-cert -d example.com \\<br>--key-file       /path/to/keyfile/in/nginx/key.pem  \\<br>--fullchain-file /path/to/fullchain/nginx/cert.pem \\<br>--reloadcmd     <span class=\"hljs-string\">&quot;service nginx force-reload&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"自动更新\"><a href=\"#自动更新\" class=\"headerlink\" title=\"自动更新\"></a>自动更新</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">crontab  -l<br><br>56 * * * * <span class=\"hljs-string\">&quot;/root/.acme.sh&quot;</span>/acme.sh --cron --home <span class=\"hljs-string\">&quot;/root/.acme.sh&quot;</span> &gt; /dev/null<br></code></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"wordcount":2283,"excerpt":"","more":"<h2 id=\"申请免费ssl证书\"><a href=\"#申请免费ssl证书\" class=\"headerlink\" title=\"申请免费ssl证书\"></a>申请免费ssl证书</h2><p>GitHub 仓库地址:  <a href=\"https://github.com/acmesh-official/acme.sh\">GitHub</a></p>\n<p>中文文档：<a href=\"https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E\">说明 · acmesh-official/acme.sh Wiki (github.com)</a></p>\n<h3 id=\"安装acme\"><a href=\"#安装acme\" class=\"headerlink\" title=\"安装acme\"></a>安装acme</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">curl https://get.acme.sh | sh -s email=my@example.com<br></code></pre></td></tr></table></figure>\n\n<p>OR:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">wget -O -  https://get.acme.sh | sh -s email=my@example.com<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装socat\"><a href=\"#安装socat\" class=\"headerlink\" title=\"安装socat\"></a>安装socat</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">yum -y install socat<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加别名\"><a href=\"#添加别名\" class=\"headerlink\" title=\"添加别名\"></a>添加别名</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">alias</span> acme.sh=~/.acme.sh/acme.sh<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"注册账号\"><a href=\"#注册账号\" class=\"headerlink\" title=\"注册账号\"></a>注册账号</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">acme.sh --register-account -m my@example.com<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"打开防火墙80端口\"><a href=\"#打开防火墙80端口\" class=\"headerlink\" title=\"打开防火墙80端口\"></a>打开防火墙80端口</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">firewall-cmd --zone=public --add-port=80/tcp --permanent &amp;&amp; firewall-cmd --reload<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"申请证书\"><a href=\"#申请证书\" class=\"headerlink\" title=\"申请证书\"></a>申请证书</h3><h4 id=\"ZeroSSL\"><a href=\"#ZeroSSL\" class=\"headerlink\" title=\"ZeroSSL\"></a>ZeroSSL</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">acme.sh --set-default-ca --server zerossl --issue -d my@example.com  --standalone -k ec-256<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"letsencrypt\"><a href=\"#letsencrypt\" class=\"headerlink\" title=\"letsencrypt\"></a>letsencrypt</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">acme.sh --set-default-ca --server letsencrypt --issue -d my@example.com  --standalone -k ec-256<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Buypass\"><a href=\"#Buypass\" class=\"headerlink\" title=\"Buypass\"></a>Buypass</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">acme.sh --set-default-ca --server buypass --issue -d my@example.com  --standalone -k ec-256<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"更新证书\"><a href=\"#更新证书\" class=\"headerlink\" title=\"更新证书\"></a>更新证书</h3><p>目前证书在 60 天以后会自动更新, 你无需任何操作. 今后有可能会缩短这个时间, 不过都是自动的, 你不用关心.</p>\n<p>请确保 cronjob 正确安装, 看起来是类似这样的:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">crontab  -l<br><br>56 * * * * <span class=\"hljs-string\">&quot;/root/.acme.sh&quot;</span>/acme.sh --cron --home <span class=\"hljs-string\">&quot;/root/.acme.sh&quot;</span> &gt; /dev/null<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"自签证书\"><a href=\"#自签证书\" class=\"headerlink\" title=\"自签证书\"></a>自签证书</h3><h4 id=\"生成私钥\"><a href=\"#生成私钥\" class=\"headerlink\" title=\"生成私钥\"></a>生成私钥</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">openssl ecparam -genkey -name prime256v1 -out ca.key<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"生成证书\"><a href=\"#生成证书\" class=\"headerlink\" title=\"生成证书\"></a>生成证书</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">openssl req -new -x509 -days 36500 -key ca.key -out ca.crt  -subj <span class=\"hljs-string\">&quot;/CN=[aa.com]&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"使用docker运行acme\"><a href=\"#使用docker运行acme\" class=\"headerlink\" title=\"使用docker运行acme\"></a>使用docker运行acme</h3><h4 id=\"运行docker容器\"><a href=\"#运行docker容器\" class=\"headerlink\" title=\"运行docker容器\"></a>运行docker容器</h4><p>执行以下命令运行acme程序，该命令使用腾讯云作为域名服务商，获取<a href=\"https://console.dnspod.cn/account/token/token\">DNSPod Token</a>地址.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run  -itd  -v <span class=\"hljs-string\">&quot;/root/acme&quot;</span>:/acme.sh  -e DP_Key=<span class=\"hljs-string\">&quot;[DNSPod Token]&quot;</span> -e DP_Id=<span class=\"hljs-string\">&quot;[id]&quot;</span> --net=host --name=acme.sh neilpang/acme.sh daemon<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"选择SSL服务商\"><a href=\"#选择SSL服务商\" class=\"headerlink\" title=\"选择SSL服务商\"></a>选择SSL服务商</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> acme.sh --set-default-ca --server letsencrypt<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"注册账户\"><a href=\"#注册账户\" class=\"headerlink\" title=\"注册账户\"></a>注册账户</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> acme.sh --register-account -m qazwsxcc@gmail.com<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"申请泛域名证书\"><a href=\"#申请泛域名证书\" class=\"headerlink\" title=\"申请泛域名证书\"></a>申请泛域名证书</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> acme.sh --issue --dns dns_dp -d [example.com] -d [*.example.com]<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"安装证书\"><a href=\"#安装证书\" class=\"headerlink\" title=\"安装证书\"></a>安装证书</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> acme.sh --install-cert -d senhao.top \\<br>--key-file       /acme.sh/senhao.top/senhao.top.key  \\<br>--fullchain-file /acme.sh/senhao.top/fullchain.cer<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"本机运行acme\"><a href=\"#本机运行acme\" class=\"headerlink\" title=\"本机运行acme\"></a>本机运行acme</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#安装acme</span><br>curl https://get.acme.sh | sh -s email=br5cyrqxt@tempmail.cn<br><br><span class=\"hljs-comment\">#设置别名</span><br><span class=\"hljs-built_in\">alias</span> acme.sh=~/.acme.sh/acme.sh<br><br><span class=\"hljs-comment\">#配置SSL服务商</span><br>acme.sh --set-default-ca --server letsencrypt<br><br><span class=\"hljs-comment\">#注册账户</span><br>acme.sh --register-account -m br5cyrqxt@tempmail.cn<br><br><span class=\"hljs-comment\">#配置dns</span><br><span class=\"hljs-built_in\">export</span> DP_Id=<span class=\"hljs-string\">&quot;123123&quot;</span><br><span class=\"hljs-built_in\">export</span> DP_Key=<span class=\"hljs-string\">&quot;123123123&quot;</span><br><br><span class=\"hljs-comment\">#创建证书</span><br>acme.sh --issue --dns dns_dp -d *.senhao.top -d senhao.top -w /home/acme/senhao<br><br><span class=\"hljs-comment\">#查看证书</span><br>acme.sh --list<br><br><span class=\"hljs-comment\">#删除指定证书</span><br>acme.sh --remove -d senhao.top<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"安装证书-1\"><a href=\"#安装证书-1\" class=\"headerlink\" title=\"安装证书\"></a>安装证书</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">acme.sh --install-cert -d example.com \\<br>--key-file       /path/to/keyfile/in/nginx/key.pem  \\<br>--fullchain-file /path/to/fullchain/nginx/cert.pem \\<br>--reloadcmd     <span class=\"hljs-string\">&quot;service nginx force-reload&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"自动更新\"><a href=\"#自动更新\" class=\"headerlink\" title=\"自动更新\"></a>自动更新</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">crontab  -l<br><br>56 * * * * <span class=\"hljs-string\">&quot;/root/.acme.sh&quot;</span>/acme.sh --cron --home <span class=\"hljs-string\">&quot;/root/.acme.sh&quot;</span> &gt; /dev/null<br></code></pre></td></tr></table></figure>\n\n\n\n"},{"title":"windows笔记","date":"2022-09-10T04:58:05.000Z","description":"windows笔记.","_content":"\n## 激活及配置\n\n### 查看当前Windows激活信息\n\n> slmgr.vbs -dli\n\n> slmgr.vbs -dlv\n\n### 查看Windows永久激活\n\n> slmgr.vbs -xpr\n\n### Windows密钥注册表地址\n\n> 计算机\\HKEY\\_LOCAL\\_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SoftwareProtectionPlatform\n\n### Windows11右击菜单恢复到Windows10\n\n> ·运行“regedit”，开启注册表编辑器，定位到“HKEY\\_CURRENT\\_USER\\SOFTWARE\\CLASSES\\CLSID”；\n>\n> 　　·接着，右键点击“CLSID”键值，新建一个名为{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}的项；\n>\n> 　　·右键点击新创建的项，新建一个名为InprocServer32的项，按下回车键保存；\n>\n> 　　·最后选择新创建的项，然后双击右侧窗格中的默认条目，什么内容都不需要输入，按下回车键。\n>\n> 　　保存注册表后，重启explorer.exe，即可看到右键菜单恢复成旧样式了。\n>\n> 　　如果想要恢复成为Win11的设计，那么删掉InprocServer32的项就可以了。\n\n### 联想Edge由你的组织管理\n\n> HKEY\\_LOCAL\\_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Edge\n>\n> 把其中的SmartScreenEnabled和SmartScreenPuaEnabled两项删除后将edge浏览器关闭重新打开\n\n### Windows卸载密钥\n\n> slmgr.vbs /upk\n\n### 安装新密钥\n\n> slmgr /ipk \\[新密钥]\n\n### 查看office相关信息\n\n> 进入office目录\n>\n> cd \"C:\\Program Files\\Microsoft Office\\Office16\"\n>\n> 查看已安装的密钥：\n>\n> cscript ospp.vbs /dstatus\n>\n> 卸载密钥：（将命令中的XXXXX改为上一步查到的后五位字符）\n>\n> cscript \"C:\\Program Files\\Microsoft Office\\Office16\\ospp.vbs\" /unpkey:XXXXX\n\n### 桌面菜单注册表\n\n> 计算机\\HKEY\\_CLASSES\\_ROOT\\Directory\\Background\\shell\n\n### 桌面菜单修改到右边\n\n```bash\nshell:::{80F3F1D5-FECA-45F3-BC32-752C152E456E}\n```\n\n### powershell cmdlet、函数、脚本文件或可运行程序的名称错误处理\n\n```bash\nSet-ExecutionPolicy Unrestricted\n```\n\n### 追踪ip节点\n\n``` bash\ntracert -d \\[ip]\n```\n\n### Windows 运行程序图标丢失解决\n\n``` bash\n#使用cmd命令窗执行一下命令\ntaskkill /im explorer.exe /f\n\ncd /d %userprofile%\\appdata\\local\n\ndel iconcache.db /a\n\nstart explorer.exe\n\nexit\n```\n\n### 取消右击AMD Radeon Software\n\n```bash\n#注册表\nHKEY_CLASSES_ROOT\\Directory\\Background\\shellex\\ContextMenuHandlers\n#删除ACE文件夹\n```\n\n## 脚本\n\n### git提交脚本\n\n把脚本放在需要提交的git仓库下\n\n``` bash\n@echo off\n \ntitle GIT一键提交\ncolor 3\necho 当前目录是：%cd%\necho;\n \necho 开始添加变更：git add .\ngit add .\necho;\n \nset /p declation=输入提交的commit信息:\ngit commit -m \"%declation%\"\necho;\n \necho 将变更情况提交到远程自己分支：git push origin master\ngit push origin master\necho;\n \necho 执行完毕！\necho;\n \npause\n```\n\n### zookeeper启动脚本\n\n把路径修改为自己zk的地址\n\n``` bash\ntitle zookeeper\nf:\ncd F:\\TechnicalPackage\\apache-zookeeper-3.5.9-bin\\bin\nzkServer.cmd\n\npause\n```\n\n## 查看端口占用\n\n### 查找端口\n\n``` bash\nnetstat -aon|findstr 8080\n```\n\n### 查找pid进程\n\n``` bash\ntasklist|findstr 2524\n```\n\n### 结束进程\n\n``` bash\nkill 2524\n```\n\n## Hyper-V\n\n### 导入\n\n```bash\nImport-VM -Path 'F:\\backup\\centos\\Virtual Machines\\F5AC5B5C-76A4-429F-AD24-379FD660DDC7.vmcx' -Copy -GenerateNewId -VhdDestinationPath 'C:\\Hyper-V\\centos' -VirtualMachinePath 'C:\\Hyper-V\\centos'\n```\n\n## 安装mysql\n\n### 下载\n\n> [https://dev.mysql.com/downloads/mysql/](https://dev.mysql.com/downloads/mysql/)\n\n在MySQL目录下创建my.ini文件\n\n> 适用8版本\n\n``` bash\n[mysqld]\n# 设置3306端口\nport=3306\n# 设置mysql的安装目录\nbasedir=F:\\TechnicalPackage\\mysql-8.0.25-winx64\n# 设置mysql数据库的数据的存放目录\ndatadir=F:\\TechnicalPackage\\mysql-8.0.25-winx64\\Data\n# 允许最大连接数\nmax_connections=200\n# 允许连接失败的次数。\nmax_connect_errors=10\n# 服务端使用的字符集默认为utf8mb4\ncharacter-set-server=utf8mb4\n# 创建新表时将使用的默认存储引擎\ndefault-storage-engine=INNODB\n# 默认使用“mysql_native_password”插件认证\n#mysql_native_password\ndefault_authentication_plugin=mysql_native_password\n[mysql]\n# 设置mysql客户端默认字符集\ndefault-character-set=utf8mb4\n#开启binlog\nserver_id=1918\nlog_bin = mysql-bin\nbinlog_format = ROW\n[client]\n# 设置mysql客户端连接服务端时默认使用的端口\nport=3306\ndefault-character-set=utf8mb4\n```\n\n> 适用5版本\n\n``` bash\n[mysqld]\n##skip-grant-tables=1\nport = 3306\nbasedir=E:\\TechnicalPackage\\mysql-5.7.30-winx64\ndatadir=E:\\TechnicalPackage\\mysql-5.7.30-winx64\\data\nmax_connections=200\ncharacter-set-server=utf8\ndefault-storage-engine=INNODB\nexplicit_defaults_for_timestamp=1\n\n[mysql]\ndefault-character-set=utf8\n```\n\n### 初始化\n\n第一次安装时会有默认密码，安装完成后修改密码\n\n``` bash\nmysqld --initialize --console\n```\n\n### 安装服务\n\n``` bash\nmysqld --install\n```\n\n### 启动服务\n\n``` bash\nnet start mysql\n```\n\n## 安装PostGreSQL\n\n### 下载\n\n> [https://www.enterprisedb.com/download-postgresql-binaries](https://www.enterprisedb.com/download-postgresql-binaries)\n\n### 初始化\n\nF:\\TechnicalPackage\\pgsql\\data 为你postgresql的路径\n\n``` bash\ninitdb.exe -U postgres -A password -E utf8 -W -D F:\\TechnicalPackage\\pgsql\\data\n```\n\n### 启动(如注册Windows服务这一步不用运行)\n\n``` bash\npg_ctl -D ^\"F^:^\\TechnicalPackage^\\pgsql^\\data^\" -l logfile start\n```\n\n### 注册服务\n\n``` bash\npg_ctl register -N PostgreSQL -D \"F:/TechnicalPackage/pgsql/data\"\n```\n\n### 启动服务\n\n``` bash\nnet start PostgreSQL \n```\n\n## 安装Redis\n\n### 下载redis\n\n> [https://github.com/tporadowski/redis/releases](https://github.com/tporadowski/redis/releases)\n\n### 安装服务\n\n``` bash\nredis-server.exe --service-install redis.windows.conf --loglevel verbose\n```\n\n### 取消安装\n\n``` bash\nredis-server --service-uninstall\n```\n\n## 安装MongoDB\n\n### 下载\n\n**注：推荐使用msi文件安装，二进制安装会出现问题**\n\n> 下载地址： [https://www.mongodb.com/download-center#communit](https://www.mongodb.com/download-center#community)\n\n## 安装Neo4J\n\n> **需要Java环境**\n\n### 下载\n\n> [https://neo4j.com/download-center/#community](https://neo4j.com/download-center/#community)****\n\n### **通过控制台启动Neo4j程序**&#x20;\n\n``` bash\nneo4j.bat console\n```\n\n### **安装为Windows服务**\n\n``` bash\n#安装\nneo4j install-service\n#卸载\nneo4j uninstall-service\n```\n\n### **其他命令**\n\n``` bash\n#启动\nneo4j start\n#停止\nneo4j stop\n#重启\nneo4j restart\n#查看状态\nneo4j status\n```\n\n### **neo4j.conf**\n\n``` bash\n#Configure the Neo4j Browser to time out logged in users after this idle period. Setting this to 0 indicates no limit.\n#Valid units are: 'ns', 'μs', 'ms', 's', 'm', 'h' and 'd'; default unit is 's'\n#添加会话过期\nbrowser.credential_timeout=1000\n```\n","source":"_posts/windows笔记.md","raw":"---\ntitle: windows笔记\ndate: 2022-09-10 12:58:05\ntags: Windows\ncategories: Windows\ndescription: windows笔记.\n---\n\n## 激活及配置\n\n### 查看当前Windows激活信息\n\n> slmgr.vbs -dli\n\n> slmgr.vbs -dlv\n\n### 查看Windows永久激活\n\n> slmgr.vbs -xpr\n\n### Windows密钥注册表地址\n\n> 计算机\\HKEY\\_LOCAL\\_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SoftwareProtectionPlatform\n\n### Windows11右击菜单恢复到Windows10\n\n> ·运行“regedit”，开启注册表编辑器，定位到“HKEY\\_CURRENT\\_USER\\SOFTWARE\\CLASSES\\CLSID”；\n>\n> 　　·接着，右键点击“CLSID”键值，新建一个名为{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}的项；\n>\n> 　　·右键点击新创建的项，新建一个名为InprocServer32的项，按下回车键保存；\n>\n> 　　·最后选择新创建的项，然后双击右侧窗格中的默认条目，什么内容都不需要输入，按下回车键。\n>\n> 　　保存注册表后，重启explorer.exe，即可看到右键菜单恢复成旧样式了。\n>\n> 　　如果想要恢复成为Win11的设计，那么删掉InprocServer32的项就可以了。\n\n### 联想Edge由你的组织管理\n\n> HKEY\\_LOCAL\\_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Edge\n>\n> 把其中的SmartScreenEnabled和SmartScreenPuaEnabled两项删除后将edge浏览器关闭重新打开\n\n### Windows卸载密钥\n\n> slmgr.vbs /upk\n\n### 安装新密钥\n\n> slmgr /ipk \\[新密钥]\n\n### 查看office相关信息\n\n> 进入office目录\n>\n> cd \"C:\\Program Files\\Microsoft Office\\Office16\"\n>\n> 查看已安装的密钥：\n>\n> cscript ospp.vbs /dstatus\n>\n> 卸载密钥：（将命令中的XXXXX改为上一步查到的后五位字符）\n>\n> cscript \"C:\\Program Files\\Microsoft Office\\Office16\\ospp.vbs\" /unpkey:XXXXX\n\n### 桌面菜单注册表\n\n> 计算机\\HKEY\\_CLASSES\\_ROOT\\Directory\\Background\\shell\n\n### 桌面菜单修改到右边\n\n```bash\nshell:::{80F3F1D5-FECA-45F3-BC32-752C152E456E}\n```\n\n### powershell cmdlet、函数、脚本文件或可运行程序的名称错误处理\n\n```bash\nSet-ExecutionPolicy Unrestricted\n```\n\n### 追踪ip节点\n\n``` bash\ntracert -d \\[ip]\n```\n\n### Windows 运行程序图标丢失解决\n\n``` bash\n#使用cmd命令窗执行一下命令\ntaskkill /im explorer.exe /f\n\ncd /d %userprofile%\\appdata\\local\n\ndel iconcache.db /a\n\nstart explorer.exe\n\nexit\n```\n\n### 取消右击AMD Radeon Software\n\n```bash\n#注册表\nHKEY_CLASSES_ROOT\\Directory\\Background\\shellex\\ContextMenuHandlers\n#删除ACE文件夹\n```\n\n## 脚本\n\n### git提交脚本\n\n把脚本放在需要提交的git仓库下\n\n``` bash\n@echo off\n \ntitle GIT一键提交\ncolor 3\necho 当前目录是：%cd%\necho;\n \necho 开始添加变更：git add .\ngit add .\necho;\n \nset /p declation=输入提交的commit信息:\ngit commit -m \"%declation%\"\necho;\n \necho 将变更情况提交到远程自己分支：git push origin master\ngit push origin master\necho;\n \necho 执行完毕！\necho;\n \npause\n```\n\n### zookeeper启动脚本\n\n把路径修改为自己zk的地址\n\n``` bash\ntitle zookeeper\nf:\ncd F:\\TechnicalPackage\\apache-zookeeper-3.5.9-bin\\bin\nzkServer.cmd\n\npause\n```\n\n## 查看端口占用\n\n### 查找端口\n\n``` bash\nnetstat -aon|findstr 8080\n```\n\n### 查找pid进程\n\n``` bash\ntasklist|findstr 2524\n```\n\n### 结束进程\n\n``` bash\nkill 2524\n```\n\n## Hyper-V\n\n### 导入\n\n```bash\nImport-VM -Path 'F:\\backup\\centos\\Virtual Machines\\F5AC5B5C-76A4-429F-AD24-379FD660DDC7.vmcx' -Copy -GenerateNewId -VhdDestinationPath 'C:\\Hyper-V\\centos' -VirtualMachinePath 'C:\\Hyper-V\\centos'\n```\n\n## 安装mysql\n\n### 下载\n\n> [https://dev.mysql.com/downloads/mysql/](https://dev.mysql.com/downloads/mysql/)\n\n在MySQL目录下创建my.ini文件\n\n> 适用8版本\n\n``` bash\n[mysqld]\n# 设置3306端口\nport=3306\n# 设置mysql的安装目录\nbasedir=F:\\TechnicalPackage\\mysql-8.0.25-winx64\n# 设置mysql数据库的数据的存放目录\ndatadir=F:\\TechnicalPackage\\mysql-8.0.25-winx64\\Data\n# 允许最大连接数\nmax_connections=200\n# 允许连接失败的次数。\nmax_connect_errors=10\n# 服务端使用的字符集默认为utf8mb4\ncharacter-set-server=utf8mb4\n# 创建新表时将使用的默认存储引擎\ndefault-storage-engine=INNODB\n# 默认使用“mysql_native_password”插件认证\n#mysql_native_password\ndefault_authentication_plugin=mysql_native_password\n[mysql]\n# 设置mysql客户端默认字符集\ndefault-character-set=utf8mb4\n#开启binlog\nserver_id=1918\nlog_bin = mysql-bin\nbinlog_format = ROW\n[client]\n# 设置mysql客户端连接服务端时默认使用的端口\nport=3306\ndefault-character-set=utf8mb4\n```\n\n> 适用5版本\n\n``` bash\n[mysqld]\n##skip-grant-tables=1\nport = 3306\nbasedir=E:\\TechnicalPackage\\mysql-5.7.30-winx64\ndatadir=E:\\TechnicalPackage\\mysql-5.7.30-winx64\\data\nmax_connections=200\ncharacter-set-server=utf8\ndefault-storage-engine=INNODB\nexplicit_defaults_for_timestamp=1\n\n[mysql]\ndefault-character-set=utf8\n```\n\n### 初始化\n\n第一次安装时会有默认密码，安装完成后修改密码\n\n``` bash\nmysqld --initialize --console\n```\n\n### 安装服务\n\n``` bash\nmysqld --install\n```\n\n### 启动服务\n\n``` bash\nnet start mysql\n```\n\n## 安装PostGreSQL\n\n### 下载\n\n> [https://www.enterprisedb.com/download-postgresql-binaries](https://www.enterprisedb.com/download-postgresql-binaries)\n\n### 初始化\n\nF:\\TechnicalPackage\\pgsql\\data 为你postgresql的路径\n\n``` bash\ninitdb.exe -U postgres -A password -E utf8 -W -D F:\\TechnicalPackage\\pgsql\\data\n```\n\n### 启动(如注册Windows服务这一步不用运行)\n\n``` bash\npg_ctl -D ^\"F^:^\\TechnicalPackage^\\pgsql^\\data^\" -l logfile start\n```\n\n### 注册服务\n\n``` bash\npg_ctl register -N PostgreSQL -D \"F:/TechnicalPackage/pgsql/data\"\n```\n\n### 启动服务\n\n``` bash\nnet start PostgreSQL \n```\n\n## 安装Redis\n\n### 下载redis\n\n> [https://github.com/tporadowski/redis/releases](https://github.com/tporadowski/redis/releases)\n\n### 安装服务\n\n``` bash\nredis-server.exe --service-install redis.windows.conf --loglevel verbose\n```\n\n### 取消安装\n\n``` bash\nredis-server --service-uninstall\n```\n\n## 安装MongoDB\n\n### 下载\n\n**注：推荐使用msi文件安装，二进制安装会出现问题**\n\n> 下载地址： [https://www.mongodb.com/download-center#communit](https://www.mongodb.com/download-center#community)\n\n## 安装Neo4J\n\n> **需要Java环境**\n\n### 下载\n\n> [https://neo4j.com/download-center/#community](https://neo4j.com/download-center/#community)****\n\n### **通过控制台启动Neo4j程序**&#x20;\n\n``` bash\nneo4j.bat console\n```\n\n### **安装为Windows服务**\n\n``` bash\n#安装\nneo4j install-service\n#卸载\nneo4j uninstall-service\n```\n\n### **其他命令**\n\n``` bash\n#启动\nneo4j start\n#停止\nneo4j stop\n#重启\nneo4j restart\n#查看状态\nneo4j status\n```\n\n### **neo4j.conf**\n\n``` bash\n#Configure the Neo4j Browser to time out logged in users after this idle period. Setting this to 0 indicates no limit.\n#Valid units are: 'ns', 'μs', 'ms', 's', 'm', 'h' and 'd'; default unit is 's'\n#添加会话过期\nbrowser.credential_timeout=1000\n```\n","slug":"windows笔记","published":1,"updated":"2022-12-22T12:23:54.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcwycosu001ch0u29ujncpda","content":"<h2 id=\"激活及配置\"><a href=\"#激活及配置\" class=\"headerlink\" title=\"激活及配置\"></a>激活及配置</h2><h3 id=\"查看当前Windows激活信息\"><a href=\"#查看当前Windows激活信息\" class=\"headerlink\" title=\"查看当前Windows激活信息\"></a>查看当前Windows激活信息</h3><blockquote>\n<p>slmgr.vbs -dli</p>\n</blockquote>\n<blockquote>\n<p>slmgr.vbs -dlv</p>\n</blockquote>\n<h3 id=\"查看Windows永久激活\"><a href=\"#查看Windows永久激活\" class=\"headerlink\" title=\"查看Windows永久激活\"></a>查看Windows永久激活</h3><blockquote>\n<p>slmgr.vbs -xpr</p>\n</blockquote>\n<h3 id=\"Windows密钥注册表地址\"><a href=\"#Windows密钥注册表地址\" class=\"headerlink\" title=\"Windows密钥注册表地址\"></a>Windows密钥注册表地址</h3><blockquote>\n<p>计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SoftwareProtectionPlatform</p>\n</blockquote>\n<h3 id=\"Windows11右击菜单恢复到Windows10\"><a href=\"#Windows11右击菜单恢复到Windows10\" class=\"headerlink\" title=\"Windows11右击菜单恢复到Windows10\"></a>Windows11右击菜单恢复到Windows10</h3><blockquote>\n<p>·运行“regedit”，开启注册表编辑器，定位到“HKEY_CURRENT_USER\\SOFTWARE\\CLASSES\\CLSID”；</p>\n<p>　　·接着，右键点击“CLSID”键值，新建一个名为{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}的项；</p>\n<p>　　·右键点击新创建的项，新建一个名为InprocServer32的项，按下回车键保存；</p>\n<p>　　·最后选择新创建的项，然后双击右侧窗格中的默认条目，什么内容都不需要输入，按下回车键。</p>\n<p>　　保存注册表后，重启explorer.exe，即可看到右键菜单恢复成旧样式了。</p>\n<p>　　如果想要恢复成为Win11的设计，那么删掉InprocServer32的项就可以了。</p>\n</blockquote>\n<h3 id=\"联想Edge由你的组织管理\"><a href=\"#联想Edge由你的组织管理\" class=\"headerlink\" title=\"联想Edge由你的组织管理\"></a>联想Edge由你的组织管理</h3><blockquote>\n<p>HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Edge</p>\n<p>把其中的SmartScreenEnabled和SmartScreenPuaEnabled两项删除后将edge浏览器关闭重新打开</p>\n</blockquote>\n<h3 id=\"Windows卸载密钥\"><a href=\"#Windows卸载密钥\" class=\"headerlink\" title=\"Windows卸载密钥\"></a>Windows卸载密钥</h3><blockquote>\n<p>slmgr.vbs /upk</p>\n</blockquote>\n<h3 id=\"安装新密钥\"><a href=\"#安装新密钥\" class=\"headerlink\" title=\"安装新密钥\"></a>安装新密钥</h3><blockquote>\n<p>slmgr /ipk [新密钥]</p>\n</blockquote>\n<h3 id=\"查看office相关信息\"><a href=\"#查看office相关信息\" class=\"headerlink\" title=\"查看office相关信息\"></a>查看office相关信息</h3><blockquote>\n<p>进入office目录</p>\n<p>cd “C:\\Program Files\\Microsoft Office\\Office16”</p>\n<p>查看已安装的密钥：</p>\n<p>cscript ospp.vbs /dstatus</p>\n<p>卸载密钥：（将命令中的XXXXX改为上一步查到的后五位字符）</p>\n<p>cscript “C:\\Program Files\\Microsoft Office\\Office16\\ospp.vbs” /unpkey:XXXXX</p>\n</blockquote>\n<h3 id=\"桌面菜单注册表\"><a href=\"#桌面菜单注册表\" class=\"headerlink\" title=\"桌面菜单注册表\"></a>桌面菜单注册表</h3><blockquote>\n<p>计算机\\HKEY_CLASSES_ROOT\\Directory\\Background\\shell</p>\n</blockquote>\n<h3 id=\"桌面菜单修改到右边\"><a href=\"#桌面菜单修改到右边\" class=\"headerlink\" title=\"桌面菜单修改到右边\"></a>桌面菜单修改到右边</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\">shell:::&#123;80F3F1D5-FECA-45F3-BC32-752C152E456E&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"powershell-cmdlet、函数、脚本文件或可运行程序的名称错误处理\"><a href=\"#powershell-cmdlet、函数、脚本文件或可运行程序的名称错误处理\" class=\"headerlink\" title=\"powershell cmdlet、函数、脚本文件或可运行程序的名称错误处理\"></a>powershell cmdlet、函数、脚本文件或可运行程序的名称错误处理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">Set-ExecutionPolicy Unrestricted<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"追踪ip节点\"><a href=\"#追踪ip节点\" class=\"headerlink\" title=\"追踪ip节点\"></a>追踪ip节点</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">tracert -d \\[ip]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Windows-运行程序图标丢失解决\"><a href=\"#Windows-运行程序图标丢失解决\" class=\"headerlink\" title=\"Windows 运行程序图标丢失解决\"></a>Windows 运行程序图标丢失解决</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#使用cmd命令窗执行一下命令</span><br>taskkill /im explorer.exe /f<br><br><span class=\"hljs-built_in\">cd</span> /d %userprofile%\\appdata\\<span class=\"hljs-built_in\">local</span><br><br>del iconcache.db /a<br><br>start explorer.exe<br><br><span class=\"hljs-built_in\">exit</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"取消右击AMD-Radeon-Software\"><a href=\"#取消右击AMD-Radeon-Software\" class=\"headerlink\" title=\"取消右击AMD Radeon Software\"></a>取消右击AMD Radeon Software</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#注册表</span><br>HKEY_CLASSES_ROOT\\Directory\\Background\\shellex\\ContextMenuHandlers<br><span class=\"hljs-comment\">#删除ACE文件夹</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h2><h3 id=\"git提交脚本\"><a href=\"#git提交脚本\" class=\"headerlink\" title=\"git提交脚本\"></a>git提交脚本</h3><p>把脚本放在需要提交的git仓库下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">@<span class=\"hljs-built_in\">echo</span> off<br> <br>title GIT一键提交<br>color 3<br><span class=\"hljs-built_in\">echo</span> 当前目录是：%<span class=\"hljs-built_in\">cd</span>%<br><span class=\"hljs-built_in\">echo</span>;<br> <br><span class=\"hljs-built_in\">echo</span> 开始添加变更：git add .<br>git add .<br><span class=\"hljs-built_in\">echo</span>;<br> <br><span class=\"hljs-built_in\">set</span> /p declation=输入提交的commit信息:<br>git commit -m <span class=\"hljs-string\">&quot;%declation%&quot;</span><br><span class=\"hljs-built_in\">echo</span>;<br> <br><span class=\"hljs-built_in\">echo</span> 将变更情况提交到远程自己分支：git push origin master<br>git push origin master<br><span class=\"hljs-built_in\">echo</span>;<br> <br><span class=\"hljs-built_in\">echo</span> 执行完毕！<br><span class=\"hljs-built_in\">echo</span>;<br> <br>pause<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"zookeeper启动脚本\"><a href=\"#zookeeper启动脚本\" class=\"headerlink\" title=\"zookeeper启动脚本\"></a>zookeeper启动脚本</h3><p>把路径修改为自己zk的地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">title zookeeper<br>f:<br><span class=\"hljs-built_in\">cd</span> F:\\TechnicalPackage\\apache-zookeeper-3.5.9-bin\\bin<br>zkServer.cmd<br><br>pause<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"查看端口占用\"><a href=\"#查看端口占用\" class=\"headerlink\" title=\"查看端口占用\"></a>查看端口占用</h2><h3 id=\"查找端口\"><a href=\"#查找端口\" class=\"headerlink\" title=\"查找端口\"></a>查找端口</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -aon|findstr 8080<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查找pid进程\"><a href=\"#查找pid进程\" class=\"headerlink\" title=\"查找pid进程\"></a>查找pid进程</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">tasklist|findstr 2524<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"结束进程\"><a href=\"#结束进程\" class=\"headerlink\" title=\"结束进程\"></a>结束进程</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">kill</span> 2524<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Hyper-V\"><a href=\"#Hyper-V\" class=\"headerlink\" title=\"Hyper-V\"></a>Hyper-V</h2><h3 id=\"导入\"><a href=\"#导入\" class=\"headerlink\" title=\"导入\"></a>导入</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">Import-VM -Path <span class=\"hljs-string\">&#x27;F:\\backup\\centos\\Virtual Machines\\F5AC5B5C-76A4-429F-AD24-379FD660DDC7.vmcx&#x27;</span> -Copy -GenerateNewId -VhdDestinationPath <span class=\"hljs-string\">&#x27;C:\\Hyper-V\\centos&#x27;</span> -VirtualMachinePath <span class=\"hljs-string\">&#x27;C:\\Hyper-V\\centos&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装mysql\"><a href=\"#安装mysql\" class=\"headerlink\" title=\"安装mysql\"></a>安装mysql</h2><h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><blockquote>\n<p><a href=\"https://dev.mysql.com/downloads/mysql/\">https://dev.mysql.com/downloads/mysql/</a></p>\n</blockquote>\n<p>在MySQL目录下创建my.ini文件</p>\n<blockquote>\n<p>适用8版本</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">[mysqld]<br><span class=\"hljs-comment\"># 设置3306端口</span><br>port=3306<br><span class=\"hljs-comment\"># 设置mysql的安装目录</span><br>basedir=F:\\TechnicalPackage\\mysql-8.0.25-winx64<br><span class=\"hljs-comment\"># 设置mysql数据库的数据的存放目录</span><br>datadir=F:\\TechnicalPackage\\mysql-8.0.25-winx64\\Data<br><span class=\"hljs-comment\"># 允许最大连接数</span><br>max_connections=200<br><span class=\"hljs-comment\"># 允许连接失败的次数。</span><br>max_connect_errors=10<br><span class=\"hljs-comment\"># 服务端使用的字符集默认为utf8mb4</span><br>character-set-server=utf8mb4<br><span class=\"hljs-comment\"># 创建新表时将使用的默认存储引擎</span><br>default-storage-engine=INNODB<br><span class=\"hljs-comment\"># 默认使用“mysql_native_password”插件认证</span><br><span class=\"hljs-comment\">#mysql_native_password</span><br>default_authentication_plugin=mysql_native_password<br>[mysql]<br><span class=\"hljs-comment\"># 设置mysql客户端默认字符集</span><br>default-character-set=utf8mb4<br><span class=\"hljs-comment\">#开启binlog</span><br>server_id=1918<br>log_bin = mysql-bin<br>binlog_format = ROW<br>[client]<br><span class=\"hljs-comment\"># 设置mysql客户端连接服务端时默认使用的端口</span><br>port=3306<br>default-character-set=utf8mb4<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>适用5版本</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">[mysqld]<br><span class=\"hljs-comment\">##skip-grant-tables=1</span><br>port = 3306<br>basedir=E:\\TechnicalPackage\\mysql-5.7.30-winx64<br>datadir=E:\\TechnicalPackage\\mysql-5.7.30-winx64\\data<br>max_connections=200<br>character-set-server=utf8<br>default-storage-engine=INNODB<br>explicit_defaults_for_timestamp=1<br><br>[mysql]<br>default-character-set=utf8<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h3><p>第一次安装时会有默认密码，安装完成后修改密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mysqld --initialize --console<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装服务\"><a href=\"#安装服务\" class=\"headerlink\" title=\"安装服务\"></a>安装服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mysqld --install<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">net start mysql<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装PostGreSQL\"><a href=\"#安装PostGreSQL\" class=\"headerlink\" title=\"安装PostGreSQL\"></a>安装PostGreSQL</h2><h3 id=\"下载-1\"><a href=\"#下载-1\" class=\"headerlink\" title=\"下载\"></a>下载</h3><blockquote>\n<p><a href=\"https://www.enterprisedb.com/download-postgresql-binaries\">https://www.enterprisedb.com/download-postgresql-binaries</a></p>\n</blockquote>\n<h3 id=\"初始化-1\"><a href=\"#初始化-1\" class=\"headerlink\" title=\"初始化\"></a>初始化</h3><p>F:\\TechnicalPackage\\pgsql\\data 为你postgresql的路径</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">initdb.exe -U postgres -A password -E utf8 -W -D F:\\TechnicalPackage\\pgsql\\data<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动-如注册Windows服务这一步不用运行\"><a href=\"#启动-如注册Windows服务这一步不用运行\" class=\"headerlink\" title=\"启动(如注册Windows服务这一步不用运行)\"></a>启动(如注册Windows服务这一步不用运行)</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pg_ctl -D ^<span class=\"hljs-string\">&quot;F^:^\\TechnicalPackage^\\pgsql^\\data^&quot;</span> -l logfile start<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"注册服务\"><a href=\"#注册服务\" class=\"headerlink\" title=\"注册服务\"></a>注册服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pg_ctl register -N PostgreSQL -D <span class=\"hljs-string\">&quot;F:/TechnicalPackage/pgsql/data&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动服务-1\"><a href=\"#启动服务-1\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">net start PostgreSQL <br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装Redis\"><a href=\"#安装Redis\" class=\"headerlink\" title=\"安装Redis\"></a>安装Redis</h2><h3 id=\"下载redis\"><a href=\"#下载redis\" class=\"headerlink\" title=\"下载redis\"></a>下载redis</h3><blockquote>\n<p><a href=\"https://github.com/tporadowski/redis/releases\">https://github.com/tporadowski/redis/releases</a></p>\n</blockquote>\n<h3 id=\"安装服务-1\"><a href=\"#安装服务-1\" class=\"headerlink\" title=\"安装服务\"></a>安装服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">redis-server.exe --service-install redis.windows.conf --loglevel verbose<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"取消安装\"><a href=\"#取消安装\" class=\"headerlink\" title=\"取消安装\"></a>取消安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">redis-server --service-uninstall<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装MongoDB\"><a href=\"#安装MongoDB\" class=\"headerlink\" title=\"安装MongoDB\"></a>安装MongoDB</h2><h3 id=\"下载-2\"><a href=\"#下载-2\" class=\"headerlink\" title=\"下载\"></a>下载</h3><p><strong>注：推荐使用msi文件安装，二进制安装会出现问题</strong></p>\n<blockquote>\n<p>下载地址： <a href=\"https://www.mongodb.com/download-center#community\">https://www.mongodb.com/download-center#communit</a></p>\n</blockquote>\n<h2 id=\"安装Neo4J\"><a href=\"#安装Neo4J\" class=\"headerlink\" title=\"安装Neo4J\"></a>安装Neo4J</h2><blockquote>\n<p><strong>需要Java环境</strong></p>\n</blockquote>\n<h3 id=\"下载-3\"><a href=\"#下载-3\" class=\"headerlink\" title=\"下载\"></a>下载</h3><blockquote>\n<p><a href=\"https://neo4j.com/download-center/#community\">https://neo4j.com/download-center/#community</a>****</p>\n</blockquote>\n<h3 id=\"通过控制台启动Neo4j程序-x20\"><a href=\"#通过控制台启动Neo4j程序-x20\" class=\"headerlink\" title=\"通过控制台启动Neo4j程序&#x20;\"></a><strong>通过控制台启动Neo4j程序</strong>&#x20;</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">neo4j.bat console<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装为Windows服务\"><a href=\"#安装为Windows服务\" class=\"headerlink\" title=\"安装为Windows服务\"></a><strong>安装为Windows服务</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#安装</span><br>neo4j install-service<br><span class=\"hljs-comment\">#卸载</span><br>neo4j uninstall-service<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a><strong>其他命令</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#启动</span><br>neo4j start<br><span class=\"hljs-comment\">#停止</span><br>neo4j stop<br><span class=\"hljs-comment\">#重启</span><br>neo4j restart<br><span class=\"hljs-comment\">#查看状态</span><br>neo4j status<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"neo4j-conf\"><a href=\"#neo4j-conf\" class=\"headerlink\" title=\"neo4j.conf\"></a><strong>neo4j.conf</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#Configure the Neo4j Browser to time out logged in users after this idle period. Setting this to 0 indicates no limit.</span><br><span class=\"hljs-comment\">#Valid units are: &#x27;ns&#x27;, &#x27;μs&#x27;, &#x27;ms&#x27;, &#x27;s&#x27;, &#x27;m&#x27;, &#x27;h&#x27; and &#x27;d&#x27;; default unit is &#x27;s&#x27;</span><br><span class=\"hljs-comment\">#添加会话过期</span><br>browser.credential_timeout=1000<br></code></pre></td></tr></table></figure>\n","site":{"data":{}},"wordcount":4291,"excerpt":"","more":"<h2 id=\"激活及配置\"><a href=\"#激活及配置\" class=\"headerlink\" title=\"激活及配置\"></a>激活及配置</h2><h3 id=\"查看当前Windows激活信息\"><a href=\"#查看当前Windows激活信息\" class=\"headerlink\" title=\"查看当前Windows激活信息\"></a>查看当前Windows激活信息</h3><blockquote>\n<p>slmgr.vbs -dli</p>\n</blockquote>\n<blockquote>\n<p>slmgr.vbs -dlv</p>\n</blockquote>\n<h3 id=\"查看Windows永久激活\"><a href=\"#查看Windows永久激活\" class=\"headerlink\" title=\"查看Windows永久激活\"></a>查看Windows永久激活</h3><blockquote>\n<p>slmgr.vbs -xpr</p>\n</blockquote>\n<h3 id=\"Windows密钥注册表地址\"><a href=\"#Windows密钥注册表地址\" class=\"headerlink\" title=\"Windows密钥注册表地址\"></a>Windows密钥注册表地址</h3><blockquote>\n<p>计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SoftwareProtectionPlatform</p>\n</blockquote>\n<h3 id=\"Windows11右击菜单恢复到Windows10\"><a href=\"#Windows11右击菜单恢复到Windows10\" class=\"headerlink\" title=\"Windows11右击菜单恢复到Windows10\"></a>Windows11右击菜单恢复到Windows10</h3><blockquote>\n<p>·运行“regedit”，开启注册表编辑器，定位到“HKEY_CURRENT_USER\\SOFTWARE\\CLASSES\\CLSID”；</p>\n<p>　　·接着，右键点击“CLSID”键值，新建一个名为{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}的项；</p>\n<p>　　·右键点击新创建的项，新建一个名为InprocServer32的项，按下回车键保存；</p>\n<p>　　·最后选择新创建的项，然后双击右侧窗格中的默认条目，什么内容都不需要输入，按下回车键。</p>\n<p>　　保存注册表后，重启explorer.exe，即可看到右键菜单恢复成旧样式了。</p>\n<p>　　如果想要恢复成为Win11的设计，那么删掉InprocServer32的项就可以了。</p>\n</blockquote>\n<h3 id=\"联想Edge由你的组织管理\"><a href=\"#联想Edge由你的组织管理\" class=\"headerlink\" title=\"联想Edge由你的组织管理\"></a>联想Edge由你的组织管理</h3><blockquote>\n<p>HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Edge</p>\n<p>把其中的SmartScreenEnabled和SmartScreenPuaEnabled两项删除后将edge浏览器关闭重新打开</p>\n</blockquote>\n<h3 id=\"Windows卸载密钥\"><a href=\"#Windows卸载密钥\" class=\"headerlink\" title=\"Windows卸载密钥\"></a>Windows卸载密钥</h3><blockquote>\n<p>slmgr.vbs /upk</p>\n</blockquote>\n<h3 id=\"安装新密钥\"><a href=\"#安装新密钥\" class=\"headerlink\" title=\"安装新密钥\"></a>安装新密钥</h3><blockquote>\n<p>slmgr /ipk [新密钥]</p>\n</blockquote>\n<h3 id=\"查看office相关信息\"><a href=\"#查看office相关信息\" class=\"headerlink\" title=\"查看office相关信息\"></a>查看office相关信息</h3><blockquote>\n<p>进入office目录</p>\n<p>cd “C:\\Program Files\\Microsoft Office\\Office16”</p>\n<p>查看已安装的密钥：</p>\n<p>cscript ospp.vbs /dstatus</p>\n<p>卸载密钥：（将命令中的XXXXX改为上一步查到的后五位字符）</p>\n<p>cscript “C:\\Program Files\\Microsoft Office\\Office16\\ospp.vbs” /unpkey:XXXXX</p>\n</blockquote>\n<h3 id=\"桌面菜单注册表\"><a href=\"#桌面菜单注册表\" class=\"headerlink\" title=\"桌面菜单注册表\"></a>桌面菜单注册表</h3><blockquote>\n<p>计算机\\HKEY_CLASSES_ROOT\\Directory\\Background\\shell</p>\n</blockquote>\n<h3 id=\"桌面菜单修改到右边\"><a href=\"#桌面菜单修改到右边\" class=\"headerlink\" title=\"桌面菜单修改到右边\"></a>桌面菜单修改到右边</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">shell:::&#123;80F3F1D5-FECA-45F3-BC32-752C152E456E&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"powershell-cmdlet、函数、脚本文件或可运行程序的名称错误处理\"><a href=\"#powershell-cmdlet、函数、脚本文件或可运行程序的名称错误处理\" class=\"headerlink\" title=\"powershell cmdlet、函数、脚本文件或可运行程序的名称错误处理\"></a>powershell cmdlet、函数、脚本文件或可运行程序的名称错误处理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">Set-ExecutionPolicy Unrestricted<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"追踪ip节点\"><a href=\"#追踪ip节点\" class=\"headerlink\" title=\"追踪ip节点\"></a>追踪ip节点</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">tracert -d \\[ip]<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Windows-运行程序图标丢失解决\"><a href=\"#Windows-运行程序图标丢失解决\" class=\"headerlink\" title=\"Windows 运行程序图标丢失解决\"></a>Windows 运行程序图标丢失解决</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#使用cmd命令窗执行一下命令</span><br>taskkill /im explorer.exe /f<br><br><span class=\"hljs-built_in\">cd</span> /d %userprofile%\\appdata\\<span class=\"hljs-built_in\">local</span><br><br>del iconcache.db /a<br><br>start explorer.exe<br><br><span class=\"hljs-built_in\">exit</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"取消右击AMD-Radeon-Software\"><a href=\"#取消右击AMD-Radeon-Software\" class=\"headerlink\" title=\"取消右击AMD Radeon Software\"></a>取消右击AMD Radeon Software</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#注册表</span><br>HKEY_CLASSES_ROOT\\Directory\\Background\\shellex\\ContextMenuHandlers<br><span class=\"hljs-comment\">#删除ACE文件夹</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h2><h3 id=\"git提交脚本\"><a href=\"#git提交脚本\" class=\"headerlink\" title=\"git提交脚本\"></a>git提交脚本</h3><p>把脚本放在需要提交的git仓库下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">@<span class=\"hljs-built_in\">echo</span> off<br> <br>title GIT一键提交<br>color 3<br><span class=\"hljs-built_in\">echo</span> 当前目录是：%<span class=\"hljs-built_in\">cd</span>%<br><span class=\"hljs-built_in\">echo</span>;<br> <br><span class=\"hljs-built_in\">echo</span> 开始添加变更：git add .<br>git add .<br><span class=\"hljs-built_in\">echo</span>;<br> <br><span class=\"hljs-built_in\">set</span> /p declation=输入提交的commit信息:<br>git commit -m <span class=\"hljs-string\">&quot;%declation%&quot;</span><br><span class=\"hljs-built_in\">echo</span>;<br> <br><span class=\"hljs-built_in\">echo</span> 将变更情况提交到远程自己分支：git push origin master<br>git push origin master<br><span class=\"hljs-built_in\">echo</span>;<br> <br><span class=\"hljs-built_in\">echo</span> 执行完毕！<br><span class=\"hljs-built_in\">echo</span>;<br> <br>pause<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"zookeeper启动脚本\"><a href=\"#zookeeper启动脚本\" class=\"headerlink\" title=\"zookeeper启动脚本\"></a>zookeeper启动脚本</h3><p>把路径修改为自己zk的地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">title zookeeper<br>f:<br><span class=\"hljs-built_in\">cd</span> F:\\TechnicalPackage\\apache-zookeeper-3.5.9-bin\\bin<br>zkServer.cmd<br><br>pause<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"查看端口占用\"><a href=\"#查看端口占用\" class=\"headerlink\" title=\"查看端口占用\"></a>查看端口占用</h2><h3 id=\"查找端口\"><a href=\"#查找端口\" class=\"headerlink\" title=\"查找端口\"></a>查找端口</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">netstat -aon|findstr 8080<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"查找pid进程\"><a href=\"#查找pid进程\" class=\"headerlink\" title=\"查找pid进程\"></a>查找pid进程</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">tasklist|findstr 2524<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"结束进程\"><a href=\"#结束进程\" class=\"headerlink\" title=\"结束进程\"></a>结束进程</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">kill</span> 2524<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Hyper-V\"><a href=\"#Hyper-V\" class=\"headerlink\" title=\"Hyper-V\"></a>Hyper-V</h2><h3 id=\"导入\"><a href=\"#导入\" class=\"headerlink\" title=\"导入\"></a>导入</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">Import-VM -Path <span class=\"hljs-string\">&#x27;F:\\backup\\centos\\Virtual Machines\\F5AC5B5C-76A4-429F-AD24-379FD660DDC7.vmcx&#x27;</span> -Copy -GenerateNewId -VhdDestinationPath <span class=\"hljs-string\">&#x27;C:\\Hyper-V\\centos&#x27;</span> -VirtualMachinePath <span class=\"hljs-string\">&#x27;C:\\Hyper-V\\centos&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装mysql\"><a href=\"#安装mysql\" class=\"headerlink\" title=\"安装mysql\"></a>安装mysql</h2><h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><blockquote>\n<p><a href=\"https://dev.mysql.com/downloads/mysql/\">https://dev.mysql.com/downloads/mysql/</a></p>\n</blockquote>\n<p>在MySQL目录下创建my.ini文件</p>\n<blockquote>\n<p>适用8版本</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">[mysqld]<br><span class=\"hljs-comment\"># 设置3306端口</span><br>port=3306<br><span class=\"hljs-comment\"># 设置mysql的安装目录</span><br>basedir=F:\\TechnicalPackage\\mysql-8.0.25-winx64<br><span class=\"hljs-comment\"># 设置mysql数据库的数据的存放目录</span><br>datadir=F:\\TechnicalPackage\\mysql-8.0.25-winx64\\Data<br><span class=\"hljs-comment\"># 允许最大连接数</span><br>max_connections=200<br><span class=\"hljs-comment\"># 允许连接失败的次数。</span><br>max_connect_errors=10<br><span class=\"hljs-comment\"># 服务端使用的字符集默认为utf8mb4</span><br>character-set-server=utf8mb4<br><span class=\"hljs-comment\"># 创建新表时将使用的默认存储引擎</span><br>default-storage-engine=INNODB<br><span class=\"hljs-comment\"># 默认使用“mysql_native_password”插件认证</span><br><span class=\"hljs-comment\">#mysql_native_password</span><br>default_authentication_plugin=mysql_native_password<br>[mysql]<br><span class=\"hljs-comment\"># 设置mysql客户端默认字符集</span><br>default-character-set=utf8mb4<br><span class=\"hljs-comment\">#开启binlog</span><br>server_id=1918<br>log_bin = mysql-bin<br>binlog_format = ROW<br>[client]<br><span class=\"hljs-comment\"># 设置mysql客户端连接服务端时默认使用的端口</span><br>port=3306<br>default-character-set=utf8mb4<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>适用5版本</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">[mysqld]<br><span class=\"hljs-comment\">##skip-grant-tables=1</span><br>port = 3306<br>basedir=E:\\TechnicalPackage\\mysql-5.7.30-winx64<br>datadir=E:\\TechnicalPackage\\mysql-5.7.30-winx64\\data<br>max_connections=200<br>character-set-server=utf8<br>default-storage-engine=INNODB<br>explicit_defaults_for_timestamp=1<br><br>[mysql]<br>default-character-set=utf8<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h3><p>第一次安装时会有默认密码，安装完成后修改密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mysqld --initialize --console<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装服务\"><a href=\"#安装服务\" class=\"headerlink\" title=\"安装服务\"></a>安装服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">mysqld --install<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">net start mysql<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装PostGreSQL\"><a href=\"#安装PostGreSQL\" class=\"headerlink\" title=\"安装PostGreSQL\"></a>安装PostGreSQL</h2><h3 id=\"下载-1\"><a href=\"#下载-1\" class=\"headerlink\" title=\"下载\"></a>下载</h3><blockquote>\n<p><a href=\"https://www.enterprisedb.com/download-postgresql-binaries\">https://www.enterprisedb.com/download-postgresql-binaries</a></p>\n</blockquote>\n<h3 id=\"初始化-1\"><a href=\"#初始化-1\" class=\"headerlink\" title=\"初始化\"></a>初始化</h3><p>F:\\TechnicalPackage\\pgsql\\data 为你postgresql的路径</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">initdb.exe -U postgres -A password -E utf8 -W -D F:\\TechnicalPackage\\pgsql\\data<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动-如注册Windows服务这一步不用运行\"><a href=\"#启动-如注册Windows服务这一步不用运行\" class=\"headerlink\" title=\"启动(如注册Windows服务这一步不用运行)\"></a>启动(如注册Windows服务这一步不用运行)</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pg_ctl -D ^<span class=\"hljs-string\">&quot;F^:^\\TechnicalPackage^\\pgsql^\\data^&quot;</span> -l logfile start<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"注册服务\"><a href=\"#注册服务\" class=\"headerlink\" title=\"注册服务\"></a>注册服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pg_ctl register -N PostgreSQL -D <span class=\"hljs-string\">&quot;F:/TechnicalPackage/pgsql/data&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"启动服务-1\"><a href=\"#启动服务-1\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">net start PostgreSQL <br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装Redis\"><a href=\"#安装Redis\" class=\"headerlink\" title=\"安装Redis\"></a>安装Redis</h2><h3 id=\"下载redis\"><a href=\"#下载redis\" class=\"headerlink\" title=\"下载redis\"></a>下载redis</h3><blockquote>\n<p><a href=\"https://github.com/tporadowski/redis/releases\">https://github.com/tporadowski/redis/releases</a></p>\n</blockquote>\n<h3 id=\"安装服务-1\"><a href=\"#安装服务-1\" class=\"headerlink\" title=\"安装服务\"></a>安装服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">redis-server.exe --service-install redis.windows.conf --loglevel verbose<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"取消安装\"><a href=\"#取消安装\" class=\"headerlink\" title=\"取消安装\"></a>取消安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">redis-server --service-uninstall<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"安装MongoDB\"><a href=\"#安装MongoDB\" class=\"headerlink\" title=\"安装MongoDB\"></a>安装MongoDB</h2><h3 id=\"下载-2\"><a href=\"#下载-2\" class=\"headerlink\" title=\"下载\"></a>下载</h3><p><strong>注：推荐使用msi文件安装，二进制安装会出现问题</strong></p>\n<blockquote>\n<p>下载地址： <a href=\"https://www.mongodb.com/download-center#community\">https://www.mongodb.com/download-center#communit</a></p>\n</blockquote>\n<h2 id=\"安装Neo4J\"><a href=\"#安装Neo4J\" class=\"headerlink\" title=\"安装Neo4J\"></a>安装Neo4J</h2><blockquote>\n<p><strong>需要Java环境</strong></p>\n</blockquote>\n<h3 id=\"下载-3\"><a href=\"#下载-3\" class=\"headerlink\" title=\"下载\"></a>下载</h3><blockquote>\n<p><a href=\"https://neo4j.com/download-center/#community\">https://neo4j.com/download-center/#community</a>****</p>\n</blockquote>\n<h3 id=\"通过控制台启动Neo4j程序-x20\"><a href=\"#通过控制台启动Neo4j程序-x20\" class=\"headerlink\" title=\"通过控制台启动Neo4j程序&#x20;\"></a><strong>通过控制台启动Neo4j程序</strong>&#x20;</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">neo4j.bat console<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装为Windows服务\"><a href=\"#安装为Windows服务\" class=\"headerlink\" title=\"安装为Windows服务\"></a><strong>安装为Windows服务</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#安装</span><br>neo4j install-service<br><span class=\"hljs-comment\">#卸载</span><br>neo4j uninstall-service<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a><strong>其他命令</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#启动</span><br>neo4j start<br><span class=\"hljs-comment\">#停止</span><br>neo4j stop<br><span class=\"hljs-comment\">#重启</span><br>neo4j restart<br><span class=\"hljs-comment\">#查看状态</span><br>neo4j status<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"neo4j-conf\"><a href=\"#neo4j-conf\" class=\"headerlink\" title=\"neo4j.conf\"></a><strong>neo4j.conf</strong></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\">#Configure the Neo4j Browser to time out logged in users after this idle period. Setting this to 0 indicates no limit.</span><br><span class=\"hljs-comment\">#Valid units are: &#x27;ns&#x27;, &#x27;μs&#x27;, &#x27;ms&#x27;, &#x27;s&#x27;, &#x27;m&#x27;, &#x27;h&#x27; and &#x27;d&#x27;; default unit is &#x27;s&#x27;</span><br><span class=\"hljs-comment\">#添加会话过期</span><br>browser.credential_timeout=1000<br></code></pre></td></tr></table></figure>\n"},{"title":"使用青龙薅羊毛搭建教程","date":"2022-04-21T05:18:34.000Z","description":"搭建青龙获取京豆，薅羊毛.","_content":"\n## 安装\n\n### 基于docker进行安装\n\n```bash\ndocker run -dit \\\n-v $PWD/ql/config:/ql/config \\\n-v $PWD/ql/log:/ql/log \\\n-v $PWD/ql/db:/ql/db \\\n-p 5700:5700 \\\n--name qinglong \\\n--hostname qinglong \\\n--restart always \\\nwhyour/qinglong:latest\n```\n\n执行命令后，在浏览器访问`ip:5700`\n\n## 初始化环境\n\n### 进入容器\n\n```bash\ndocker exec -it qinglong bash\n```\n\n### 安装依赖命令\n\n```bash\ncurl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/shufflewzc/QLDependency/main/Shell/QLOneKeyDependency.sh | sh\n```\n\n### 添加依赖\n\n在页面点击 `依赖管理`的右上角`添加依赖`. 对以下分类进行添加\n\n#### nodeJs\n\n```bash\ncrypto-js\nprettytable\ndotenv\njsdom\ndate-fns\ntough-cookie\ntslib\nws@7.4.3\nts-md5\njsdom -g\njieba\nfs\nform-data\njson5\nglobal-agent\npng-js\n@types/node\nrequire\ntypescript\njs-base64\naxios\n```\n\n#### Python3\n\n```bash\nrequests\ncanvas  \nping3\njieba\naiohttp\n```\n\n#### Linux\n\n```bash\nbizCode\nbizMsg  \nlxml\n```\n\n## 使用\n\n### 添加定时任务\n\n```bash\n# 定时 秒 分 时 天 月 周\n*/4 * * * *\n# 命令\nql repo https://ghproxy.com/https://github.com/shufflewzc/faker2.git \"jd_|jx_|gua_|jddj_|getJDCookie\" \"activity|backUp\" \"^jd[^_]|USER|utils|ZooFaker_Necklace.js|JDJRValidator_Pure|sign_graphics_validate\" \"main\"\n\nql repo https://ghproxy.com/https://github.com/KingRan/KR.git \"jd_|jx_|jdCookie\" \"activity|backUp\" \"^jd[^_]|USER|utils|function|sign|sendNotify|ql|JDJR\"\n```\n\n### 添加环境变量\n\nchrome browser go to ` https://m.jd.com` get cookies: `xx_key` and `xx_pin` , go to the dashboard add envirment `JD_COOKIE`, value is `xx_key=xxx;xx_pin=xxx`\n\n## 参考\n\nhttps://github.com/zhangguanzhang/docker-compose/tree/master/qinglong\n\nhttps://www.dujin.org/18884.html\n\n\n\n\n\n","source":"_posts/使用ql薅羊毛.md","raw":"---\ntitle: 使用青龙薅羊毛搭建教程\ndate: 2022-04-21 13:18:34\ntags: docker\ncategories: docker\ndescription: 搭建青龙获取京豆，薅羊毛.\n---\n\n## 安装\n\n### 基于docker进行安装\n\n```bash\ndocker run -dit \\\n-v $PWD/ql/config:/ql/config \\\n-v $PWD/ql/log:/ql/log \\\n-v $PWD/ql/db:/ql/db \\\n-p 5700:5700 \\\n--name qinglong \\\n--hostname qinglong \\\n--restart always \\\nwhyour/qinglong:latest\n```\n\n执行命令后，在浏览器访问`ip:5700`\n\n## 初始化环境\n\n### 进入容器\n\n```bash\ndocker exec -it qinglong bash\n```\n\n### 安装依赖命令\n\n```bash\ncurl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/shufflewzc/QLDependency/main/Shell/QLOneKeyDependency.sh | sh\n```\n\n### 添加依赖\n\n在页面点击 `依赖管理`的右上角`添加依赖`. 对以下分类进行添加\n\n#### nodeJs\n\n```bash\ncrypto-js\nprettytable\ndotenv\njsdom\ndate-fns\ntough-cookie\ntslib\nws@7.4.3\nts-md5\njsdom -g\njieba\nfs\nform-data\njson5\nglobal-agent\npng-js\n@types/node\nrequire\ntypescript\njs-base64\naxios\n```\n\n#### Python3\n\n```bash\nrequests\ncanvas  \nping3\njieba\naiohttp\n```\n\n#### Linux\n\n```bash\nbizCode\nbizMsg  \nlxml\n```\n\n## 使用\n\n### 添加定时任务\n\n```bash\n# 定时 秒 分 时 天 月 周\n*/4 * * * *\n# 命令\nql repo https://ghproxy.com/https://github.com/shufflewzc/faker2.git \"jd_|jx_|gua_|jddj_|getJDCookie\" \"activity|backUp\" \"^jd[^_]|USER|utils|ZooFaker_Necklace.js|JDJRValidator_Pure|sign_graphics_validate\" \"main\"\n\nql repo https://ghproxy.com/https://github.com/KingRan/KR.git \"jd_|jx_|jdCookie\" \"activity|backUp\" \"^jd[^_]|USER|utils|function|sign|sendNotify|ql|JDJR\"\n```\n\n### 添加环境变量\n\nchrome browser go to ` https://m.jd.com` get cookies: `xx_key` and `xx_pin` , go to the dashboard add envirment `JD_COOKIE`, value is `xx_key=xxx;xx_pin=xxx`\n\n## 参考\n\nhttps://github.com/zhangguanzhang/docker-compose/tree/master/qinglong\n\nhttps://www.dujin.org/18884.html\n\n\n\n\n\n","slug":"使用ql薅羊毛","published":1,"updated":"2022-12-29T14:20:06.951Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcwycosv001eh0u2euty9lem","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"基于docker进行安装\"><a href=\"#基于docker进行安装\" class=\"headerlink\" title=\"基于docker进行安装\"></a>基于docker进行安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -dit \\<br>-v <span class=\"hljs-variable\">$PWD</span>/ql/config:/ql/config \\<br>-v <span class=\"hljs-variable\">$PWD</span>/ql/log:/ql/log \\<br>-v <span class=\"hljs-variable\">$PWD</span>/ql/db:/ql/db \\<br>-p 5700:5700 \\<br>--name qinglong \\<br>--hostname qinglong \\<br>--restart always \\<br>whyour/qinglong:latest<br></code></pre></td></tr></table></figure>\n\n<p>执行命令后，在浏览器访问<code>ip:5700</code></p>\n<h2 id=\"初始化环境\"><a href=\"#初始化环境\" class=\"headerlink\" title=\"初始化环境\"></a>初始化环境</h2><h3 id=\"进入容器\"><a href=\"#进入容器\" class=\"headerlink\" title=\"进入容器\"></a>进入容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> -it qinglong bash<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装依赖命令\"><a href=\"#安装依赖命令\" class=\"headerlink\" title=\"安装依赖命令\"></a>安装依赖命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/shufflewzc/QLDependency/main/Shell/QLOneKeyDependency.sh | sh<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h3><p>在页面点击 <code>依赖管理</code>的右上角<code>添加依赖</code>. 对以下分类进行添加</p>\n<h4 id=\"nodeJs\"><a href=\"#nodeJs\" class=\"headerlink\" title=\"nodeJs\"></a>nodeJs</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">crypto-js<br>prettytable<br>dotenv<br>jsdom<br>date-fns<br>tough-cookie<br>tslib<br>ws@7.4.3<br>ts-md5<br>jsdom -g<br>jieba<br>fs<br>form-data<br>json5<br>global-agent<br>png-js<br>@types/node<br>require<br>typescript<br>js-base64<br>axios<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Python3\"><a href=\"#Python3\" class=\"headerlink\" title=\"Python3\"></a>Python3</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">requests<br>canvas  <br>ping3<br>jieba<br>aiohttp<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">bizCode<br>bizMsg  <br>lxml<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"添加定时任务\"><a href=\"#添加定时任务\" class=\"headerlink\" title=\"添加定时任务\"></a>添加定时任务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 定时 秒 分 时 天 月 周</span><br>*/4 * * * *<br><span class=\"hljs-comment\"># 命令</span><br>ql repo https://ghproxy.com/https://github.com/shufflewzc/faker2.git <span class=\"hljs-string\">&quot;jd_|jx_|gua_|jddj_|getJDCookie&quot;</span> <span class=\"hljs-string\">&quot;activity|backUp&quot;</span> <span class=\"hljs-string\">&quot;^jd[^_]|USER|utils|ZooFaker_Necklace.js|JDJRValidator_Pure|sign_graphics_validate&quot;</span> <span class=\"hljs-string\">&quot;main&quot;</span><br><br>ql repo https://ghproxy.com/https://github.com/KingRan/KR.git <span class=\"hljs-string\">&quot;jd_|jx_|jdCookie&quot;</span> <span class=\"hljs-string\">&quot;activity|backUp&quot;</span> <span class=\"hljs-string\">&quot;^jd[^_]|USER|utils|function|sign|sendNotify|ql|JDJR&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加环境变量\"><a href=\"#添加环境变量\" class=\"headerlink\" title=\"添加环境变量\"></a>添加环境变量</h3><p>chrome browser go to <code> https://m.jd.com</code> get cookies: <code>xx_key</code> and <code>xx_pin</code> , go to the dashboard add envirment <code>JD_COOKIE</code>, value is <code>xx_key=xxx;xx_pin=xxx</code></p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://github.com/zhangguanzhang/docker-compose/tree/master/qinglong\">https://github.com/zhangguanzhang/docker-compose/tree/master/qinglong</a></p>\n<p><a href=\"https://www.dujin.org/18884.html\">https://www.dujin.org/18884.html</a></p>\n","site":{"data":{}},"wordcount":1359,"excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"基于docker进行安装\"><a href=\"#基于docker进行安装\" class=\"headerlink\" title=\"基于docker进行安装\"></a>基于docker进行安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker run -dit \\<br>-v <span class=\"hljs-variable\">$PWD</span>/ql/config:/ql/config \\<br>-v <span class=\"hljs-variable\">$PWD</span>/ql/log:/ql/log \\<br>-v <span class=\"hljs-variable\">$PWD</span>/ql/db:/ql/db \\<br>-p 5700:5700 \\<br>--name qinglong \\<br>--hostname qinglong \\<br>--restart always \\<br>whyour/qinglong:latest<br></code></pre></td></tr></table></figure>\n\n<p>执行命令后，在浏览器访问<code>ip:5700</code></p>\n<h2 id=\"初始化环境\"><a href=\"#初始化环境\" class=\"headerlink\" title=\"初始化环境\"></a>初始化环境</h2><h3 id=\"进入容器\"><a href=\"#进入容器\" class=\"headerlink\" title=\"进入容器\"></a>进入容器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker <span class=\"hljs-built_in\">exec</span> -it qinglong bash<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装依赖命令\"><a href=\"#安装依赖命令\" class=\"headerlink\" title=\"安装依赖命令\"></a>安装依赖命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/shufflewzc/QLDependency/main/Shell/QLOneKeyDependency.sh | sh<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h3><p>在页面点击 <code>依赖管理</code>的右上角<code>添加依赖</code>. 对以下分类进行添加</p>\n<h4 id=\"nodeJs\"><a href=\"#nodeJs\" class=\"headerlink\" title=\"nodeJs\"></a>nodeJs</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">crypto-js<br>prettytable<br>dotenv<br>jsdom<br>date-fns<br>tough-cookie<br>tslib<br>ws@7.4.3<br>ts-md5<br>jsdom -g<br>jieba<br>fs<br>form-data<br>json5<br>global-agent<br>png-js<br>@types/node<br>require<br>typescript<br>js-base64<br>axios<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Python3\"><a href=\"#Python3\" class=\"headerlink\" title=\"Python3\"></a>Python3</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">requests<br>canvas  <br>ping3<br>jieba<br>aiohttp<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">bizCode<br>bizMsg  <br>lxml<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"添加定时任务\"><a href=\"#添加定时任务\" class=\"headerlink\" title=\"添加定时任务\"></a>添加定时任务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 定时 秒 分 时 天 月 周</span><br>*/4 * * * *<br><span class=\"hljs-comment\"># 命令</span><br>ql repo https://ghproxy.com/https://github.com/shufflewzc/faker2.git <span class=\"hljs-string\">&quot;jd_|jx_|gua_|jddj_|getJDCookie&quot;</span> <span class=\"hljs-string\">&quot;activity|backUp&quot;</span> <span class=\"hljs-string\">&quot;^jd[^_]|USER|utils|ZooFaker_Necklace.js|JDJRValidator_Pure|sign_graphics_validate&quot;</span> <span class=\"hljs-string\">&quot;main&quot;</span><br><br>ql repo https://ghproxy.com/https://github.com/KingRan/KR.git <span class=\"hljs-string\">&quot;jd_|jx_|jdCookie&quot;</span> <span class=\"hljs-string\">&quot;activity|backUp&quot;</span> <span class=\"hljs-string\">&quot;^jd[^_]|USER|utils|function|sign|sendNotify|ql|JDJR&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加环境变量\"><a href=\"#添加环境变量\" class=\"headerlink\" title=\"添加环境变量\"></a>添加环境变量</h3><p>chrome browser go to <code> https://m.jd.com</code> get cookies: <code>xx_key</code> and <code>xx_pin</code> , go to the dashboard add envirment <code>JD_COOKIE</code>, value is <code>xx_key=xxx;xx_pin=xxx</code></p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://github.com/zhangguanzhang/docker-compose/tree/master/qinglong\">https://github.com/zhangguanzhang/docker-compose/tree/master/qinglong</a></p>\n<p><a href=\"https://www.dujin.org/18884.html\">https://www.dujin.org/18884.html</a></p>\n"},{"title":"Kubernetes Ingress","date":"2023-01-18T14:42:06.000Z","description":"kubernetes安装机使用ingress","_content":"\n# Kubernetes Ingress\n\n## 安装ingress\n\n### 部署实例\n\n```bash\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.5.1/deploy/static/provider/cloud/deploy.yaml\n```\n\n官方quick start: [NGINX Ingress Controller](https://kubernetes.github.io/ingress-nginx/deploy/#quick-start)\n\n参考Kubernetes对应的Ingress版本进行安装\n\n| Ingress-NGINX version | k8s supported version        | Alpine Version | Nginx Version |\n| --------------------- | ---------------------------- | -------------- | ------------- |\n| v1.5.1                | 1.25, 1.24, 1.23             | 3.16.2         | 1.21.6        |\n| v1.4.0                | 1.25, 1.24, 1.23, 1.22       | 3.16.2         | 1.19.10†      |\n| v1.3.1                | 1.24, 1.23, 1.22, 1.21, 1.20 | 3.16.2         | 1.19.10†      |\n| v1.3.0                | 1.24, 1.23, 1.22, 1.21, 1.20 | 3.16.0         | 1.19.10†      |\n| v1.2.1                | 1.23, 1.22, 1.21, 1.20, 1.19 | 3.14.6         | 1.19.10†      |\n| v1.1.3                | 1.23, 1.22, 1.21, 1.20, 1.19 | 3.14.4         | 1.19.10†      |\n| v1.1.2                | 1.23, 1.22, 1.21, 1.20, 1.19 | 3.14.2         | 1.19.9†       |\n| v1.1.1                | 1.23, 1.22, 1.21, 1.20, 1.19 | 3.14.2         | 1.19.9†       |\n| v1.1.0                | 1.22, 1.21, 1.20, 1.19       | 3.14.2         | 1.19.9†       |\n| v1.0.5                | 1.22, 1.21, 1.20, 1.19       | 3.14.2         | 1.19.9†       |\n| v1.0.4                | 1.22, 1.21, 1.20, 1.19       | 3.14.2         | 1.19.9†       |\n| v1.0.3                | 1.22, 1.21, 1.20, 1.19       | 3.14.2         | 1.19.9†       |\n| v1.0.2                | 1.22, 1.21, 1.20, 1.19       | 3.14.2         | 1.19.9†       |\n| v1.0.1                | 1.22, 1.21, 1.20, 1.19       | 3.14.2         | 1.19.9†       |\n| v1.0.0                | 1.22, 1.21, 1.20, 1.19       | 3.13.5         | 1.20.1        |\n\n由于没有LoadBalancer类型的负载，所有需要修改为NodePort类型，修改deployment服务为主机网络.\n\n```yaml\napiVersion: v1\nkind: Namespace\nmetadata:\n  labels:\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n  name: ingress-nginx\n---\napiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx\n  namespace: ingress-nginx\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission\n  namespace: ingress-nginx\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx\n  namespace: ingress-nginx\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - namespaces\n  verbs:\n  - get\n- apiGroups:\n  - \"\"\n  resources:\n  - configmaps\n  - pods\n  - secrets\n  - endpoints\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - services\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingresses\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingresses/status\n  verbs:\n  - update\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingressclasses\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resourceNames:\n  - ingress-controller-leader\n  resources:\n  - configmaps\n  verbs:\n  - get\n  - update\n- apiGroups:\n  - \"\"\n  resources:\n  - configmaps\n  verbs:\n  - create\n- apiGroups:\n  - coordination.k8s.io\n  resourceNames:\n  - ingress-controller-leader\n  resources:\n  - leases\n  verbs:\n  - get\n  - update\n- apiGroups:\n  - coordination.k8s.io\n  resources:\n  - leases\n  verbs:\n  - create\n- apiGroups:\n  - \"\"\n  resources:\n  - events\n  verbs:\n  - create\n  - patch\n- apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - list\n  - watch\n  - get\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission\n  namespace: ingress-nginx\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - secrets\n  verbs:\n  - get\n  - create\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - configmaps\n  - endpoints\n  - nodes\n  - pods\n  - secrets\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - coordination.k8s.io\n  resources:\n  - leases\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n- apiGroups:\n  - \"\"\n  resources:\n  - services\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingresses\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - events\n  verbs:\n  - create\n  - patch\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingresses/status\n  verbs:\n  - update\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingressclasses\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - list\n  - watch\n  - get\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission\nrules:\n- apiGroups:\n  - admissionregistration.k8s.io\n  resources:\n  - validatingwebhookconfigurations\n  verbs:\n  - get\n  - update\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx\n  namespace: ingress-nginx\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: ingress-nginx\nsubjects:\n- kind: ServiceAccount\n  name: ingress-nginx\n  namespace: ingress-nginx\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission\n  namespace: ingress-nginx\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: ingress-nginx-admission\nsubjects:\n- kind: ServiceAccount\n  name: ingress-nginx-admission\n  namespace: ingress-nginx\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  labels:\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: ingress-nginx\nsubjects:\n- kind: ServiceAccount\n  name: ingress-nginx\n  namespace: ingress-nginx\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: ingress-nginx-admission\nsubjects:\n- kind: ServiceAccount\n  name: ingress-nginx-admission\n  namespace: ingress-nginx\n---\napiVersion: v1\ndata:\n  allow-snippet-annotations: \"true\"\nkind: ConfigMap\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-controller\n  namespace: ingress-nginx\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-controller\n  namespace: ingress-nginx\nspec:\n  externalTrafficPolicy: Local\n  ipFamilies:\n  - IPv4\n  ipFamilyPolicy: SingleStack\n  ports:\n  - appProtocol: http\n    name: http\n    port: 80\n    protocol: TCP\n    targetPort: http\n  - appProtocol: https\n    name: https\n    port: 443\n    protocol: TCP\n    targetPort: https\n  selector:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n  type: NodePort\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-controller-admission\n  namespace: ingress-nginx\nspec:\n  ports:\n  - appProtocol: https\n    name: https-webhook\n    port: 443\n    targetPort: webhook\n  selector:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n  type: ClusterIP\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-controller\n  namespace: ingress-nginx\nspec:\n  minReadySeconds: 0\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app.kubernetes.io/component: controller\n      app.kubernetes.io/instance: ingress-nginx\n      app.kubernetes.io/name: ingress-nginx\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/component: controller\n        app.kubernetes.io/instance: ingress-nginx\n        app.kubernetes.io/name: ingress-nginx\n    spec:\n      hostNetwork: true\n      containers:\n      - args:\n        - /nginx-ingress-controller\n        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller\n        - --election-id=ingress-controller-leader\n        - --controller-class=k8s.io/ingress-nginx\n        - --ingress-class=nginx\n        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller\n        - --validating-webhook=:8443\n        - --validating-webhook-certificate=/usr/local/certificates/cert\n        - --validating-webhook-key=/usr/local/certificates/key\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: LD_PRELOAD\n          value: /usr/local/lib/libmimalloc.so\n        image: registry.k8s.io/ingress-nginx/controller:v1.4.0\n        imagePullPolicy: IfNotPresent\n        lifecycle:\n          preStop:\n            exec:\n              command:\n              - /wait-shutdown\n        livenessProbe:\n          failureThreshold: 5\n          httpGet:\n            path: /healthz\n            port: 10254\n            scheme: HTTP\n          initialDelaySeconds: 10\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 1\n        name: controller\n        ports:\n        - containerPort: 80\n          name: http\n          protocol: TCP\n        - containerPort: 443\n          name: https\n          protocol: TCP\n        - containerPort: 8443\n          name: webhook\n          protocol: TCP\n        readinessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /healthz\n            port: 10254\n            scheme: HTTP\n          initialDelaySeconds: 10\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 1\n        resources:\n          requests:\n            cpu: 100m\n            memory: 90Mi\n        securityContext:\n          allowPrivilegeEscalation: true\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - ALL\n          runAsUser: 101\n        volumeMounts:\n        - mountPath: /usr/local/certificates/\n          name: webhook-cert\n          readOnly: true\n      dnsPolicy: ClusterFirst\n      nodeSelector:\n        kubernetes.io/os: linux\n      serviceAccountName: ingress-nginx\n      terminationGracePeriodSeconds: 300\n      volumes:\n      - name: webhook-cert\n        secret:\n          secretName: ingress-nginx-admission\n---\napiVersion: batch/v1\nkind: Job\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission-create\n  namespace: ingress-nginx\nspec:\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/component: admission-webhook\n        app.kubernetes.io/instance: ingress-nginx\n        app.kubernetes.io/name: ingress-nginx\n        app.kubernetes.io/part-of: ingress-nginx\n        app.kubernetes.io/version: 1.4.0\n      name: ingress-nginx-admission-create\n    spec:\n      containers:\n      - args:\n        - create\n        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc\n        - --namespace=$(POD_NAMESPACE)\n        - --secret-name=ingress-nginx-admission\n        env:\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343\n        imagePullPolicy: IfNotPresent\n        name: create\n        securityContext:\n          allowPrivilegeEscalation: false\n      nodeSelector:\n        kubernetes.io/os: linux\n      restartPolicy: OnFailure\n      securityContext:\n        fsGroup: 2000\n        runAsNonRoot: true\n        runAsUser: 2000\n      serviceAccountName: ingress-nginx-admission\n---\napiVersion: batch/v1\nkind: Job\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission-patch\n  namespace: ingress-nginx\nspec:\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/component: admission-webhook\n        app.kubernetes.io/instance: ingress-nginx\n        app.kubernetes.io/name: ingress-nginx\n        app.kubernetes.io/part-of: ingress-nginx\n        app.kubernetes.io/version: 1.4.0\n      name: ingress-nginx-admission-patch\n    spec:\n      containers:\n      - args:\n        - patch\n        - --webhook-name=ingress-nginx-admission\n        - --namespace=$(POD_NAMESPACE)\n        - --patch-mutating=false\n        - --secret-name=ingress-nginx-admission\n        - --patch-failure-policy=Fail\n        env:\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343\n        imagePullPolicy: IfNotPresent\n        name: patch\n        securityContext:\n          allowPrivilegeEscalation: false\n      nodeSelector:\n        kubernetes.io/os: linux\n      restartPolicy: OnFailure\n      securityContext:\n        fsGroup: 2000\n        runAsNonRoot: true\n        runAsUser: 2000\n      serviceAccountName: ingress-nginx-admission\n---\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: nginx\nspec:\n  controller: k8s.io/ingress-nginx\n---\napiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission\nwebhooks:\n- admissionReviewVersions:\n  - v1\n  clientConfig:\n    service:\n      name: ingress-nginx-controller-admission\n      namespace: ingress-nginx\n      path: /networking/v1/ingresses\n  failurePolicy: Fail\n  matchPolicy: Equivalent\n  name: validate.nginx.ingress.kubernetes.io\n  rules:\n  - apiGroups:\n    - networking.k8s.io\n    apiVersions:\n    - v1\n    operations:\n    - CREATE\n    - UPDATE\n    resources:\n    - ingresses\n  sideEffects: None\n\n```\n\n## 使用Ingress\n\n### 代理一个服务\n\n```bash\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: hexo-ingress-https\n  namespace: senna-server\n  annotations:\n    kubernetes.io/ingress.class: \"nginx\"\nspec:\n  tls:\n    - hosts:\n      - www.senhao.top\n      - senhao.top\n      #使用tls\n      secretName: tls-secret\n  rules:\n    - host: senhao.top\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: hexo\n                port:\n                  number: 80\n    - host: www.senhao.top\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: hexo\n                port:\n                  number: 80\n```\n\n### 安装tls\n\n```bash\nkubectl create secret tls tls-secret \\\n    --namespace senna-server \\\n    --key tls.key \\\n    --cert tls.crt\n```\n\n","source":"_posts/Kubernetes Ingress.md","raw":"---\ntitle: Kubernetes Ingress\ndate: 2023-01-18 22:42:06\ntags: kubernetes\ncategories: kubernetes\ndescription: kubernetes安装机使用ingress\n---\n\n# Kubernetes Ingress\n\n## 安装ingress\n\n### 部署实例\n\n```bash\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.5.1/deploy/static/provider/cloud/deploy.yaml\n```\n\n官方quick start: [NGINX Ingress Controller](https://kubernetes.github.io/ingress-nginx/deploy/#quick-start)\n\n参考Kubernetes对应的Ingress版本进行安装\n\n| Ingress-NGINX version | k8s supported version        | Alpine Version | Nginx Version |\n| --------------------- | ---------------------------- | -------------- | ------------- |\n| v1.5.1                | 1.25, 1.24, 1.23             | 3.16.2         | 1.21.6        |\n| v1.4.0                | 1.25, 1.24, 1.23, 1.22       | 3.16.2         | 1.19.10†      |\n| v1.3.1                | 1.24, 1.23, 1.22, 1.21, 1.20 | 3.16.2         | 1.19.10†      |\n| v1.3.0                | 1.24, 1.23, 1.22, 1.21, 1.20 | 3.16.0         | 1.19.10†      |\n| v1.2.1                | 1.23, 1.22, 1.21, 1.20, 1.19 | 3.14.6         | 1.19.10†      |\n| v1.1.3                | 1.23, 1.22, 1.21, 1.20, 1.19 | 3.14.4         | 1.19.10†      |\n| v1.1.2                | 1.23, 1.22, 1.21, 1.20, 1.19 | 3.14.2         | 1.19.9†       |\n| v1.1.1                | 1.23, 1.22, 1.21, 1.20, 1.19 | 3.14.2         | 1.19.9†       |\n| v1.1.0                | 1.22, 1.21, 1.20, 1.19       | 3.14.2         | 1.19.9†       |\n| v1.0.5                | 1.22, 1.21, 1.20, 1.19       | 3.14.2         | 1.19.9†       |\n| v1.0.4                | 1.22, 1.21, 1.20, 1.19       | 3.14.2         | 1.19.9†       |\n| v1.0.3                | 1.22, 1.21, 1.20, 1.19       | 3.14.2         | 1.19.9†       |\n| v1.0.2                | 1.22, 1.21, 1.20, 1.19       | 3.14.2         | 1.19.9†       |\n| v1.0.1                | 1.22, 1.21, 1.20, 1.19       | 3.14.2         | 1.19.9†       |\n| v1.0.0                | 1.22, 1.21, 1.20, 1.19       | 3.13.5         | 1.20.1        |\n\n由于没有LoadBalancer类型的负载，所有需要修改为NodePort类型，修改deployment服务为主机网络.\n\n```yaml\napiVersion: v1\nkind: Namespace\nmetadata:\n  labels:\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n  name: ingress-nginx\n---\napiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx\n  namespace: ingress-nginx\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission\n  namespace: ingress-nginx\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx\n  namespace: ingress-nginx\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - namespaces\n  verbs:\n  - get\n- apiGroups:\n  - \"\"\n  resources:\n  - configmaps\n  - pods\n  - secrets\n  - endpoints\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - services\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingresses\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingresses/status\n  verbs:\n  - update\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingressclasses\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resourceNames:\n  - ingress-controller-leader\n  resources:\n  - configmaps\n  verbs:\n  - get\n  - update\n- apiGroups:\n  - \"\"\n  resources:\n  - configmaps\n  verbs:\n  - create\n- apiGroups:\n  - coordination.k8s.io\n  resourceNames:\n  - ingress-controller-leader\n  resources:\n  - leases\n  verbs:\n  - get\n  - update\n- apiGroups:\n  - coordination.k8s.io\n  resources:\n  - leases\n  verbs:\n  - create\n- apiGroups:\n  - \"\"\n  resources:\n  - events\n  verbs:\n  - create\n  - patch\n- apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - list\n  - watch\n  - get\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission\n  namespace: ingress-nginx\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - secrets\n  verbs:\n  - get\n  - create\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - configmaps\n  - endpoints\n  - nodes\n  - pods\n  - secrets\n  - namespaces\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - coordination.k8s.io\n  resources:\n  - leases\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - get\n- apiGroups:\n  - \"\"\n  resources:\n  - services\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingresses\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - events\n  verbs:\n  - create\n  - patch\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingresses/status\n  verbs:\n  - update\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingressclasses\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - list\n  - watch\n  - get\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission\nrules:\n- apiGroups:\n  - admissionregistration.k8s.io\n  resources:\n  - validatingwebhookconfigurations\n  verbs:\n  - get\n  - update\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx\n  namespace: ingress-nginx\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: ingress-nginx\nsubjects:\n- kind: ServiceAccount\n  name: ingress-nginx\n  namespace: ingress-nginx\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission\n  namespace: ingress-nginx\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: ingress-nginx-admission\nsubjects:\n- kind: ServiceAccount\n  name: ingress-nginx-admission\n  namespace: ingress-nginx\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  labels:\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: ingress-nginx\nsubjects:\n- kind: ServiceAccount\n  name: ingress-nginx\n  namespace: ingress-nginx\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: ingress-nginx-admission\nsubjects:\n- kind: ServiceAccount\n  name: ingress-nginx-admission\n  namespace: ingress-nginx\n---\napiVersion: v1\ndata:\n  allow-snippet-annotations: \"true\"\nkind: ConfigMap\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-controller\n  namespace: ingress-nginx\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-controller\n  namespace: ingress-nginx\nspec:\n  externalTrafficPolicy: Local\n  ipFamilies:\n  - IPv4\n  ipFamilyPolicy: SingleStack\n  ports:\n  - appProtocol: http\n    name: http\n    port: 80\n    protocol: TCP\n    targetPort: http\n  - appProtocol: https\n    name: https\n    port: 443\n    protocol: TCP\n    targetPort: https\n  selector:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n  type: NodePort\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-controller-admission\n  namespace: ingress-nginx\nspec:\n  ports:\n  - appProtocol: https\n    name: https-webhook\n    port: 443\n    targetPort: webhook\n  selector:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n  type: ClusterIP\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-controller\n  namespace: ingress-nginx\nspec:\n  minReadySeconds: 0\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app.kubernetes.io/component: controller\n      app.kubernetes.io/instance: ingress-nginx\n      app.kubernetes.io/name: ingress-nginx\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/component: controller\n        app.kubernetes.io/instance: ingress-nginx\n        app.kubernetes.io/name: ingress-nginx\n    spec:\n      hostNetwork: true\n      containers:\n      - args:\n        - /nginx-ingress-controller\n        - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller\n        - --election-id=ingress-controller-leader\n        - --controller-class=k8s.io/ingress-nginx\n        - --ingress-class=nginx\n        - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller\n        - --validating-webhook=:8443\n        - --validating-webhook-certificate=/usr/local/certificates/cert\n        - --validating-webhook-key=/usr/local/certificates/key\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: LD_PRELOAD\n          value: /usr/local/lib/libmimalloc.so\n        image: registry.k8s.io/ingress-nginx/controller:v1.4.0\n        imagePullPolicy: IfNotPresent\n        lifecycle:\n          preStop:\n            exec:\n              command:\n              - /wait-shutdown\n        livenessProbe:\n          failureThreshold: 5\n          httpGet:\n            path: /healthz\n            port: 10254\n            scheme: HTTP\n          initialDelaySeconds: 10\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 1\n        name: controller\n        ports:\n        - containerPort: 80\n          name: http\n          protocol: TCP\n        - containerPort: 443\n          name: https\n          protocol: TCP\n        - containerPort: 8443\n          name: webhook\n          protocol: TCP\n        readinessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /healthz\n            port: 10254\n            scheme: HTTP\n          initialDelaySeconds: 10\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 1\n        resources:\n          requests:\n            cpu: 100m\n            memory: 90Mi\n        securityContext:\n          allowPrivilegeEscalation: true\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - ALL\n          runAsUser: 101\n        volumeMounts:\n        - mountPath: /usr/local/certificates/\n          name: webhook-cert\n          readOnly: true\n      dnsPolicy: ClusterFirst\n      nodeSelector:\n        kubernetes.io/os: linux\n      serviceAccountName: ingress-nginx\n      terminationGracePeriodSeconds: 300\n      volumes:\n      - name: webhook-cert\n        secret:\n          secretName: ingress-nginx-admission\n---\napiVersion: batch/v1\nkind: Job\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission-create\n  namespace: ingress-nginx\nspec:\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/component: admission-webhook\n        app.kubernetes.io/instance: ingress-nginx\n        app.kubernetes.io/name: ingress-nginx\n        app.kubernetes.io/part-of: ingress-nginx\n        app.kubernetes.io/version: 1.4.0\n      name: ingress-nginx-admission-create\n    spec:\n      containers:\n      - args:\n        - create\n        - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc\n        - --namespace=$(POD_NAMESPACE)\n        - --secret-name=ingress-nginx-admission\n        env:\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343\n        imagePullPolicy: IfNotPresent\n        name: create\n        securityContext:\n          allowPrivilegeEscalation: false\n      nodeSelector:\n        kubernetes.io/os: linux\n      restartPolicy: OnFailure\n      securityContext:\n        fsGroup: 2000\n        runAsNonRoot: true\n        runAsUser: 2000\n      serviceAccountName: ingress-nginx-admission\n---\napiVersion: batch/v1\nkind: Job\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission-patch\n  namespace: ingress-nginx\nspec:\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/component: admission-webhook\n        app.kubernetes.io/instance: ingress-nginx\n        app.kubernetes.io/name: ingress-nginx\n        app.kubernetes.io/part-of: ingress-nginx\n        app.kubernetes.io/version: 1.4.0\n      name: ingress-nginx-admission-patch\n    spec:\n      containers:\n      - args:\n        - patch\n        - --webhook-name=ingress-nginx-admission\n        - --namespace=$(POD_NAMESPACE)\n        - --patch-mutating=false\n        - --secret-name=ingress-nginx-admission\n        - --patch-failure-policy=Fail\n        env:\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343\n        imagePullPolicy: IfNotPresent\n        name: patch\n        securityContext:\n          allowPrivilegeEscalation: false\n      nodeSelector:\n        kubernetes.io/os: linux\n      restartPolicy: OnFailure\n      securityContext:\n        fsGroup: 2000\n        runAsNonRoot: true\n        runAsUser: 2000\n      serviceAccountName: ingress-nginx-admission\n---\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  labels:\n    app.kubernetes.io/component: controller\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: nginx\nspec:\n  controller: k8s.io/ingress-nginx\n---\napiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nmetadata:\n  labels:\n    app.kubernetes.io/component: admission-webhook\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/part-of: ingress-nginx\n    app.kubernetes.io/version: 1.4.0\n  name: ingress-nginx-admission\nwebhooks:\n- admissionReviewVersions:\n  - v1\n  clientConfig:\n    service:\n      name: ingress-nginx-controller-admission\n      namespace: ingress-nginx\n      path: /networking/v1/ingresses\n  failurePolicy: Fail\n  matchPolicy: Equivalent\n  name: validate.nginx.ingress.kubernetes.io\n  rules:\n  - apiGroups:\n    - networking.k8s.io\n    apiVersions:\n    - v1\n    operations:\n    - CREATE\n    - UPDATE\n    resources:\n    - ingresses\n  sideEffects: None\n\n```\n\n## 使用Ingress\n\n### 代理一个服务\n\n```bash\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: hexo-ingress-https\n  namespace: senna-server\n  annotations:\n    kubernetes.io/ingress.class: \"nginx\"\nspec:\n  tls:\n    - hosts:\n      - www.senhao.top\n      - senhao.top\n      #使用tls\n      secretName: tls-secret\n  rules:\n    - host: senhao.top\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: hexo\n                port:\n                  number: 80\n    - host: www.senhao.top\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: hexo\n                port:\n                  number: 80\n```\n\n### 安装tls\n\n```bash\nkubectl create secret tls tls-secret \\\n    --namespace senna-server \\\n    --key tls.key \\\n    --cert tls.crt\n```\n\n","slug":"Kubernetes Ingress","published":1,"updated":"2023-01-18T15:02:55.019Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld3yejr7000084u2dwy49344","content":"<h1 id=\"Kubernetes-Ingress\"><a href=\"#Kubernetes-Ingress\" class=\"headerlink\" title=\"Kubernetes Ingress\"></a>Kubernetes Ingress</h1><h2 id=\"安装ingress\"><a href=\"#安装ingress\" class=\"headerlink\" title=\"安装ingress\"></a>安装ingress</h2><h3 id=\"部署实例\"><a href=\"#部署实例\" class=\"headerlink\" title=\"部署实例\"></a>部署实例</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><div class=\"code-wrapper\"><pre><span class=\"line\">1</span><br></pre></div></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.5.1/deploy/static/provider/cloud/deploy.yaml<br></code></pre></td></tr></table></figure>\n\n<p>官方quick start: <a href=\"https://kubernetes.github.io/ingress-nginx/deploy/#quick-start\">NGINX Ingress Controller</a></p>\n<p>参考Kubernetes对应的Ingress版本进行安装</p>\n<table>\n<thead>\n<tr>\n<th>Ingress-NGINX version</th>\n<th>k8s supported version</th>\n<th>Alpine Version</th>\n<th>Nginx Version</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>v1.5.1</td>\n<td>1.25, 1.24, 1.23</td>\n<td>3.16.2</td>\n<td>1.21.6</td>\n</tr>\n<tr>\n<td>v1.4.0</td>\n<td>1.25, 1.24, 1.23, 1.22</td>\n<td>3.16.2</td>\n<td>1.19.10†</td>\n</tr>\n<tr>\n<td>v1.3.1</td>\n<td>1.24, 1.23, 1.22, 1.21, 1.20</td>\n<td>3.16.2</td>\n<td>1.19.10†</td>\n</tr>\n<tr>\n<td>v1.3.0</td>\n<td>1.24, 1.23, 1.22, 1.21, 1.20</td>\n<td>3.16.0</td>\n<td>1.19.10†</td>\n</tr>\n<tr>\n<td>v1.2.1</td>\n<td>1.23, 1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.6</td>\n<td>1.19.10†</td>\n</tr>\n<tr>\n<td>v1.1.3</td>\n<td>1.23, 1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.4</td>\n<td>1.19.10†</td>\n</tr>\n<tr>\n<td>v1.1.2</td>\n<td>1.23, 1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.1.1</td>\n<td>1.23, 1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.1.0</td>\n<td>1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.0.5</td>\n<td>1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.0.4</td>\n<td>1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.0.3</td>\n<td>1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.0.2</td>\n<td>1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.0.1</td>\n<td>1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.0.0</td>\n<td>1.22, 1.21, 1.20, 1.19</td>\n<td>3.13.5</td>\n<td>1.20.1</td>\n</tr>\n</tbody></table>\n<p>由于没有LoadBalancer类型的负载，所有需要修改为NodePort类型，修改deployment服务为主机网络.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Namespace</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">automountServiceAccountToken:</span> <span class=\"hljs-literal\">true</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ServiceAccount</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ServiceAccount</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Role</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">rules:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">namespaces</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">configmaps</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">pods</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">secrets</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">endpoints</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">services</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">networking.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingresses</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">networking.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingresses/status</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">update</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">networking.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingressclasses</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resourceNames:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingress-controller-leader</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">configmaps</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">update</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">configmaps</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">create</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">coordination.k8s.io</span><br>  <span class=\"hljs-attr\">resourceNames:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingress-controller-leader</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">leases</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">update</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">coordination.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">leases</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">create</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">events</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">create</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">patch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">discovery.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">endpointslices</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Role</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">rules:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">secrets</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">create</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterRole</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">rules:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">configmaps</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">endpoints</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">nodes</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">pods</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">secrets</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">namespaces</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">coordination.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">leases</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">nodes</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">services</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">networking.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingresses</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">events</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">create</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">patch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">networking.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingresses/status</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">update</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">networking.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingressclasses</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">discovery.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">endpointslices</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterRole</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-attr\">rules:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">admissionregistration.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">validatingwebhookconfigurations</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">update</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">RoleBinding</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">roleRef:</span><br>  <span class=\"hljs-attr\">apiGroup:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io</span><br>  <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Role</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">subjects:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ServiceAccount</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">RoleBinding</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">roleRef:</span><br>  <span class=\"hljs-attr\">apiGroup:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io</span><br>  <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Role</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-attr\">subjects:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ServiceAccount</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterRoleBinding</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">roleRef:</span><br>  <span class=\"hljs-attr\">apiGroup:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io</span><br>  <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterRole</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">subjects:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ServiceAccount</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterRoleBinding</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-attr\">roleRef:</span><br>  <span class=\"hljs-attr\">apiGroup:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io</span><br>  <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterRole</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-attr\">subjects:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ServiceAccount</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">data:</span><br>  <span class=\"hljs-attr\">allow-snippet-annotations:</span> <span class=\"hljs-string\">&quot;true&quot;</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ConfigMap</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-controller</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Service</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-controller</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">externalTrafficPolicy:</span> <span class=\"hljs-string\">Local</span><br>  <span class=\"hljs-attr\">ipFamilies:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">IPv4</span><br>  <span class=\"hljs-attr\">ipFamilyPolicy:</span> <span class=\"hljs-string\">SingleStack</span><br>  <span class=\"hljs-attr\">ports:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">appProtocol:</span> <span class=\"hljs-string\">http</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">http</span><br>    <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">80</span><br>    <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span><br>    <span class=\"hljs-attr\">targetPort:</span> <span class=\"hljs-string\">http</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">appProtocol:</span> <span class=\"hljs-string\">https</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">https</span><br>    <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">443</span><br>    <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span><br>    <span class=\"hljs-attr\">targetPort:</span> <span class=\"hljs-string\">https</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">NodePort</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Service</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-controller-admission</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">ports:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">appProtocol:</span> <span class=\"hljs-string\">https</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">https-webhook</span><br>    <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">443</span><br>    <span class=\"hljs-attr\">targetPort:</span> <span class=\"hljs-string\">webhook</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">ClusterIP</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Deployment</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-controller</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">minReadySeconds:</span> <span class=\"hljs-number\">0</span><br>  <span class=\"hljs-attr\">revisionHistoryLimit:</span> <span class=\"hljs-number\">10</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">matchLabels:</span><br>      <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>      <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>      <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">template:</span><br>    <span class=\"hljs-attr\">metadata:</span><br>      <span class=\"hljs-attr\">labels:</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">spec:</span><br>      <span class=\"hljs-attr\">hostNetwork:</span> <span class=\"hljs-literal\">true</span><br>      <span class=\"hljs-attr\">containers:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">args:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/nginx-ingress-controller</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--publish-service=$(POD_NAMESPACE)/ingress-nginx-controller</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--election-id=ingress-controller-leader</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--controller-class=k8s.io/ingress-nginx</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--ingress-class=nginx</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--configmap=$(POD_NAMESPACE)/ingress-nginx-controller</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--validating-webhook=:8443</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--validating-webhook-certificate=/usr/local/certificates/cert</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--validating-webhook-key=/usr/local/certificates/key</span><br>        <span class=\"hljs-attr\">env:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">POD_NAME</span><br>          <span class=\"hljs-attr\">valueFrom:</span><br>            <span class=\"hljs-attr\">fieldRef:</span><br>              <span class=\"hljs-attr\">fieldPath:</span> <span class=\"hljs-string\">metadata.name</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">POD_NAMESPACE</span><br>          <span class=\"hljs-attr\">valueFrom:</span><br>            <span class=\"hljs-attr\">fieldRef:</span><br>              <span class=\"hljs-attr\">fieldPath:</span> <span class=\"hljs-string\">metadata.namespace</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">LD_PRELOAD</span><br>          <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">/usr/local/lib/libmimalloc.so</span><br>        <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">registry.k8s.io/ingress-nginx/controller:v1.4.0</span><br>        <span class=\"hljs-attr\">imagePullPolicy:</span> <span class=\"hljs-string\">IfNotPresent</span><br>        <span class=\"hljs-attr\">lifecycle:</span><br>          <span class=\"hljs-attr\">preStop:</span><br>            <span class=\"hljs-attr\">exec:</span><br>              <span class=\"hljs-attr\">command:</span><br>              <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/wait-shutdown</span><br>        <span class=\"hljs-attr\">livenessProbe:</span><br>          <span class=\"hljs-attr\">failureThreshold:</span> <span class=\"hljs-number\">5</span><br>          <span class=\"hljs-attr\">httpGet:</span><br>            <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">/healthz</span><br>            <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">10254</span><br>            <span class=\"hljs-attr\">scheme:</span> <span class=\"hljs-string\">HTTP</span><br>          <span class=\"hljs-attr\">initialDelaySeconds:</span> <span class=\"hljs-number\">10</span><br>          <span class=\"hljs-attr\">periodSeconds:</span> <span class=\"hljs-number\">10</span><br>          <span class=\"hljs-attr\">successThreshold:</span> <span class=\"hljs-number\">1</span><br>          <span class=\"hljs-attr\">timeoutSeconds:</span> <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">controller</span><br>        <span class=\"hljs-attr\">ports:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">80</span><br>          <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">http</span><br>          <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">443</span><br>          <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">https</span><br>          <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">8443</span><br>          <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">webhook</span><br>          <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span><br>        <span class=\"hljs-attr\">readinessProbe:</span><br>          <span class=\"hljs-attr\">failureThreshold:</span> <span class=\"hljs-number\">3</span><br>          <span class=\"hljs-attr\">httpGet:</span><br>            <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">/healthz</span><br>            <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">10254</span><br>            <span class=\"hljs-attr\">scheme:</span> <span class=\"hljs-string\">HTTP</span><br>          <span class=\"hljs-attr\">initialDelaySeconds:</span> <span class=\"hljs-number\">10</span><br>          <span class=\"hljs-attr\">periodSeconds:</span> <span class=\"hljs-number\">10</span><br>          <span class=\"hljs-attr\">successThreshold:</span> <span class=\"hljs-number\">1</span><br>          <span class=\"hljs-attr\">timeoutSeconds:</span> <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-attr\">resources:</span><br>          <span class=\"hljs-attr\">requests:</span><br>            <span class=\"hljs-attr\">cpu:</span> <span class=\"hljs-string\">100m</span><br>            <span class=\"hljs-attr\">memory:</span> <span class=\"hljs-string\">90Mi</span><br>        <span class=\"hljs-attr\">securityContext:</span><br>          <span class=\"hljs-attr\">allowPrivilegeEscalation:</span> <span class=\"hljs-literal\">true</span><br>          <span class=\"hljs-attr\">capabilities:</span><br>            <span class=\"hljs-attr\">add:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">NET_BIND_SERVICE</span><br>            <span class=\"hljs-attr\">drop:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ALL</span><br>          <span class=\"hljs-attr\">runAsUser:</span> <span class=\"hljs-number\">101</span><br>        <span class=\"hljs-attr\">volumeMounts:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/usr/local/certificates/</span><br>          <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">webhook-cert</span><br>          <span class=\"hljs-attr\">readOnly:</span> <span class=\"hljs-literal\">true</span><br>      <span class=\"hljs-attr\">dnsPolicy:</span> <span class=\"hljs-string\">ClusterFirst</span><br>      <span class=\"hljs-attr\">nodeSelector:</span><br>        <span class=\"hljs-attr\">kubernetes.io/os:</span> <span class=\"hljs-string\">linux</span><br>      <span class=\"hljs-attr\">serviceAccountName:</span> <span class=\"hljs-string\">ingress-nginx</span><br>      <span class=\"hljs-attr\">terminationGracePeriodSeconds:</span> <span class=\"hljs-number\">300</span><br>      <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">webhook-cert</span><br>        <span class=\"hljs-attr\">secret:</span><br>          <span class=\"hljs-attr\">secretName:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">batch/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Job</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission-create</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">template:</span><br>    <span class=\"hljs-attr\">metadata:</span><br>      <span class=\"hljs-attr\">labels:</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission-create</span><br>    <span class=\"hljs-attr\">spec:</span><br>      <span class=\"hljs-attr\">containers:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">args:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">create</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--namespace=$(POD_NAMESPACE)</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--secret-name=ingress-nginx-admission</span><br>        <span class=\"hljs-attr\">env:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">POD_NAMESPACE</span><br>          <span class=\"hljs-attr\">valueFrom:</span><br>            <span class=\"hljs-attr\">fieldRef:</span><br>              <span class=\"hljs-attr\">fieldPath:</span> <span class=\"hljs-string\">metadata.namespace</span><br>        <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343</span><br>        <span class=\"hljs-attr\">imagePullPolicy:</span> <span class=\"hljs-string\">IfNotPresent</span><br>        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">create</span><br>        <span class=\"hljs-attr\">securityContext:</span><br>          <span class=\"hljs-attr\">allowPrivilegeEscalation:</span> <span class=\"hljs-literal\">false</span><br>      <span class=\"hljs-attr\">nodeSelector:</span><br>        <span class=\"hljs-attr\">kubernetes.io/os:</span> <span class=\"hljs-string\">linux</span><br>      <span class=\"hljs-attr\">restartPolicy:</span> <span class=\"hljs-string\">OnFailure</span><br>      <span class=\"hljs-attr\">securityContext:</span><br>        <span class=\"hljs-attr\">fsGroup:</span> <span class=\"hljs-number\">2000</span><br>        <span class=\"hljs-attr\">runAsNonRoot:</span> <span class=\"hljs-literal\">true</span><br>        <span class=\"hljs-attr\">runAsUser:</span> <span class=\"hljs-number\">2000</span><br>      <span class=\"hljs-attr\">serviceAccountName:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">batch/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Job</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission-patch</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">template:</span><br>    <span class=\"hljs-attr\">metadata:</span><br>      <span class=\"hljs-attr\">labels:</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission-patch</span><br>    <span class=\"hljs-attr\">spec:</span><br>      <span class=\"hljs-attr\">containers:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">args:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">patch</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--webhook-name=ingress-nginx-admission</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--namespace=$(POD_NAMESPACE)</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--patch-mutating=false</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--secret-name=ingress-nginx-admission</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--patch-failure-policy=Fail</span><br>        <span class=\"hljs-attr\">env:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">POD_NAMESPACE</span><br>          <span class=\"hljs-attr\">valueFrom:</span><br>            <span class=\"hljs-attr\">fieldRef:</span><br>              <span class=\"hljs-attr\">fieldPath:</span> <span class=\"hljs-string\">metadata.namespace</span><br>        <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343</span><br>        <span class=\"hljs-attr\">imagePullPolicy:</span> <span class=\"hljs-string\">IfNotPresent</span><br>        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">patch</span><br>        <span class=\"hljs-attr\">securityContext:</span><br>          <span class=\"hljs-attr\">allowPrivilegeEscalation:</span> <span class=\"hljs-literal\">false</span><br>      <span class=\"hljs-attr\">nodeSelector:</span><br>        <span class=\"hljs-attr\">kubernetes.io/os:</span> <span class=\"hljs-string\">linux</span><br>      <span class=\"hljs-attr\">restartPolicy:</span> <span class=\"hljs-string\">OnFailure</span><br>      <span class=\"hljs-attr\">securityContext:</span><br>        <span class=\"hljs-attr\">fsGroup:</span> <span class=\"hljs-number\">2000</span><br>        <span class=\"hljs-attr\">runAsNonRoot:</span> <span class=\"hljs-literal\">true</span><br>        <span class=\"hljs-attr\">runAsUser:</span> <span class=\"hljs-number\">2000</span><br>      <span class=\"hljs-attr\">serviceAccountName:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">networking.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">IngressClass</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">controller:</span> <span class=\"hljs-string\">k8s.io/ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">admissionregistration.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ValidatingWebhookConfiguration</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-attr\">webhooks:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">admissionReviewVersions:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">v1</span><br>  <span class=\"hljs-attr\">clientConfig:</span><br>    <span class=\"hljs-attr\">service:</span><br>      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-controller-admission</span><br>      <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br>      <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">/networking/v1/ingresses</span><br>  <span class=\"hljs-attr\">failurePolicy:</span> <span class=\"hljs-string\">Fail</span><br>  <span class=\"hljs-attr\">matchPolicy:</span> <span class=\"hljs-string\">Equivalent</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">validate.nginx.ingress.kubernetes.io</span><br>  <span class=\"hljs-attr\">rules:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">networking.k8s.io</span><br>    <span class=\"hljs-attr\">apiVersions:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">v1</span><br>    <span class=\"hljs-attr\">operations:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">CREATE</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">UPDATE</span><br>    <span class=\"hljs-attr\">resources:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingresses</span><br>  <span class=\"hljs-attr\">sideEffects:</span> <span class=\"hljs-string\">None</span><br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用Ingress\"><a href=\"#使用Ingress\" class=\"headerlink\" title=\"使用Ingress\"></a>使用Ingress</h2><h3 id=\"代理一个服务\"><a href=\"#代理一个服务\" class=\"headerlink\" title=\"代理一个服务\"></a>代理一个服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">apiVersion: networking.k8s.io/v1<br>kind: Ingress<br>metadata:<br>  name: hexo-ingress-https<br>  namespace: senna-server<br>  annotations:<br>    kubernetes.io/ingress.class: <span class=\"hljs-string\">&quot;nginx&quot;</span><br>spec:<br>  tls:<br>    - hosts:<br>      - www.senhao.top<br>      - senhao.top<br>      <span class=\"hljs-comment\">#使用tls</span><br>      secretName: tls-secret<br>  rules:<br>    - host: senhao.top<br>      http:<br>        paths:<br>          - path: /<br>            pathType: Prefix<br>            backend:<br>              service:<br>                name: hexo<br>                port:<br>                  number: 80<br>    - host: www.senhao.top<br>      http:<br>        paths:<br>          - path: /<br>            pathType: Prefix<br>            backend:<br>              service:<br>                name: hexo<br>                port:<br>                  number: 80<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装tls\"><a href=\"#安装tls\" class=\"headerlink\" title=\"安装tls\"></a>安装tls</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl create secret tls tls-secret \\<br>    --namespace senna-server \\<br>    --key tls.key \\<br>    --cert tls.crt<br></code></pre></td></tr></table></figure>\n\n","site":{"data":{}},"wordcount":15566,"excerpt":"","more":"<h1 id=\"Kubernetes-Ingress\"><a href=\"#Kubernetes-Ingress\" class=\"headerlink\" title=\"Kubernetes Ingress\"></a>Kubernetes Ingress</h1><h2 id=\"安装ingress\"><a href=\"#安装ingress\" class=\"headerlink\" title=\"安装ingress\"></a>安装ingress</h2><h3 id=\"部署实例\"><a href=\"#部署实例\" class=\"headerlink\" title=\"部署实例\"></a>部署实例</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.5.1/deploy/static/provider/cloud/deploy.yaml<br></code></pre></td></tr></table></figure>\n\n<p>官方quick start: <a href=\"https://kubernetes.github.io/ingress-nginx/deploy/#quick-start\">NGINX Ingress Controller</a></p>\n<p>参考Kubernetes对应的Ingress版本进行安装</p>\n<table>\n<thead>\n<tr>\n<th>Ingress-NGINX version</th>\n<th>k8s supported version</th>\n<th>Alpine Version</th>\n<th>Nginx Version</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>v1.5.1</td>\n<td>1.25, 1.24, 1.23</td>\n<td>3.16.2</td>\n<td>1.21.6</td>\n</tr>\n<tr>\n<td>v1.4.0</td>\n<td>1.25, 1.24, 1.23, 1.22</td>\n<td>3.16.2</td>\n<td>1.19.10†</td>\n</tr>\n<tr>\n<td>v1.3.1</td>\n<td>1.24, 1.23, 1.22, 1.21, 1.20</td>\n<td>3.16.2</td>\n<td>1.19.10†</td>\n</tr>\n<tr>\n<td>v1.3.0</td>\n<td>1.24, 1.23, 1.22, 1.21, 1.20</td>\n<td>3.16.0</td>\n<td>1.19.10†</td>\n</tr>\n<tr>\n<td>v1.2.1</td>\n<td>1.23, 1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.6</td>\n<td>1.19.10†</td>\n</tr>\n<tr>\n<td>v1.1.3</td>\n<td>1.23, 1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.4</td>\n<td>1.19.10†</td>\n</tr>\n<tr>\n<td>v1.1.2</td>\n<td>1.23, 1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.1.1</td>\n<td>1.23, 1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.1.0</td>\n<td>1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.0.5</td>\n<td>1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.0.4</td>\n<td>1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.0.3</td>\n<td>1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.0.2</td>\n<td>1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.0.1</td>\n<td>1.22, 1.21, 1.20, 1.19</td>\n<td>3.14.2</td>\n<td>1.19.9†</td>\n</tr>\n<tr>\n<td>v1.0.0</td>\n<td>1.22, 1.21, 1.20, 1.19</td>\n<td>3.13.5</td>\n<td>1.20.1</td>\n</tr>\n</tbody></table>\n<p>由于没有LoadBalancer类型的负载，所有需要修改为NodePort类型，修改deployment服务为主机网络.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Namespace</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">automountServiceAccountToken:</span> <span class=\"hljs-literal\">true</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ServiceAccount</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ServiceAccount</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Role</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">rules:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">namespaces</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">configmaps</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">pods</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">secrets</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">endpoints</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">services</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">networking.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingresses</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">networking.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingresses/status</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">update</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">networking.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingressclasses</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resourceNames:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingress-controller-leader</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">configmaps</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">update</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">configmaps</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">create</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">coordination.k8s.io</span><br>  <span class=\"hljs-attr\">resourceNames:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingress-controller-leader</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">leases</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">update</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">coordination.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">leases</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">create</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">events</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">create</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">patch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">discovery.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">endpointslices</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Role</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">rules:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">secrets</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">create</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterRole</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">rules:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">configmaps</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">endpoints</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">nodes</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">pods</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">secrets</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">namespaces</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">coordination.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">leases</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">nodes</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">services</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">networking.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingresses</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">events</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">create</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">patch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">networking.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingresses/status</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">update</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">networking.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingressclasses</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">discovery.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">endpointslices</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterRole</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-attr\">rules:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">admissionregistration.k8s.io</span><br>  <span class=\"hljs-attr\">resources:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">validatingwebhookconfigurations</span><br>  <span class=\"hljs-attr\">verbs:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">update</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">RoleBinding</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">roleRef:</span><br>  <span class=\"hljs-attr\">apiGroup:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io</span><br>  <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Role</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">subjects:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ServiceAccount</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">RoleBinding</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">roleRef:</span><br>  <span class=\"hljs-attr\">apiGroup:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io</span><br>  <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Role</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-attr\">subjects:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ServiceAccount</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterRoleBinding</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">roleRef:</span><br>  <span class=\"hljs-attr\">apiGroup:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io</span><br>  <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterRole</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">subjects:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ServiceAccount</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterRoleBinding</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-attr\">roleRef:</span><br>  <span class=\"hljs-attr\">apiGroup:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io</span><br>  <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterRole</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-attr\">subjects:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ServiceAccount</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">data:</span><br>  <span class=\"hljs-attr\">allow-snippet-annotations:</span> <span class=\"hljs-string\">&quot;true&quot;</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ConfigMap</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-controller</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Service</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-controller</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">externalTrafficPolicy:</span> <span class=\"hljs-string\">Local</span><br>  <span class=\"hljs-attr\">ipFamilies:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">IPv4</span><br>  <span class=\"hljs-attr\">ipFamilyPolicy:</span> <span class=\"hljs-string\">SingleStack</span><br>  <span class=\"hljs-attr\">ports:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">appProtocol:</span> <span class=\"hljs-string\">http</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">http</span><br>    <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">80</span><br>    <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span><br>    <span class=\"hljs-attr\">targetPort:</span> <span class=\"hljs-string\">http</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">appProtocol:</span> <span class=\"hljs-string\">https</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">https</span><br>    <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">443</span><br>    <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span><br>    <span class=\"hljs-attr\">targetPort:</span> <span class=\"hljs-string\">https</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">NodePort</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Service</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-controller-admission</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">ports:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">appProtocol:</span> <span class=\"hljs-string\">https</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">https-webhook</span><br>    <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">443</span><br>    <span class=\"hljs-attr\">targetPort:</span> <span class=\"hljs-string\">webhook</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">ClusterIP</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Deployment</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-controller</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">minReadySeconds:</span> <span class=\"hljs-number\">0</span><br>  <span class=\"hljs-attr\">revisionHistoryLimit:</span> <span class=\"hljs-number\">10</span><br>  <span class=\"hljs-attr\">selector:</span><br>    <span class=\"hljs-attr\">matchLabels:</span><br>      <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>      <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>      <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>  <span class=\"hljs-attr\">template:</span><br>    <span class=\"hljs-attr\">metadata:</span><br>      <span class=\"hljs-attr\">labels:</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">spec:</span><br>      <span class=\"hljs-attr\">hostNetwork:</span> <span class=\"hljs-literal\">true</span><br>      <span class=\"hljs-attr\">containers:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">args:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/nginx-ingress-controller</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--publish-service=$(POD_NAMESPACE)/ingress-nginx-controller</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--election-id=ingress-controller-leader</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--controller-class=k8s.io/ingress-nginx</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--ingress-class=nginx</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--configmap=$(POD_NAMESPACE)/ingress-nginx-controller</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--validating-webhook=:8443</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--validating-webhook-certificate=/usr/local/certificates/cert</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--validating-webhook-key=/usr/local/certificates/key</span><br>        <span class=\"hljs-attr\">env:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">POD_NAME</span><br>          <span class=\"hljs-attr\">valueFrom:</span><br>            <span class=\"hljs-attr\">fieldRef:</span><br>              <span class=\"hljs-attr\">fieldPath:</span> <span class=\"hljs-string\">metadata.name</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">POD_NAMESPACE</span><br>          <span class=\"hljs-attr\">valueFrom:</span><br>            <span class=\"hljs-attr\">fieldRef:</span><br>              <span class=\"hljs-attr\">fieldPath:</span> <span class=\"hljs-string\">metadata.namespace</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">LD_PRELOAD</span><br>          <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">/usr/local/lib/libmimalloc.so</span><br>        <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">registry.k8s.io/ingress-nginx/controller:v1.4.0</span><br>        <span class=\"hljs-attr\">imagePullPolicy:</span> <span class=\"hljs-string\">IfNotPresent</span><br>        <span class=\"hljs-attr\">lifecycle:</span><br>          <span class=\"hljs-attr\">preStop:</span><br>            <span class=\"hljs-attr\">exec:</span><br>              <span class=\"hljs-attr\">command:</span><br>              <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">/wait-shutdown</span><br>        <span class=\"hljs-attr\">livenessProbe:</span><br>          <span class=\"hljs-attr\">failureThreshold:</span> <span class=\"hljs-number\">5</span><br>          <span class=\"hljs-attr\">httpGet:</span><br>            <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">/healthz</span><br>            <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">10254</span><br>            <span class=\"hljs-attr\">scheme:</span> <span class=\"hljs-string\">HTTP</span><br>          <span class=\"hljs-attr\">initialDelaySeconds:</span> <span class=\"hljs-number\">10</span><br>          <span class=\"hljs-attr\">periodSeconds:</span> <span class=\"hljs-number\">10</span><br>          <span class=\"hljs-attr\">successThreshold:</span> <span class=\"hljs-number\">1</span><br>          <span class=\"hljs-attr\">timeoutSeconds:</span> <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">controller</span><br>        <span class=\"hljs-attr\">ports:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">80</span><br>          <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">http</span><br>          <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">443</span><br>          <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">https</span><br>          <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">8443</span><br>          <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">webhook</span><br>          <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">TCP</span><br>        <span class=\"hljs-attr\">readinessProbe:</span><br>          <span class=\"hljs-attr\">failureThreshold:</span> <span class=\"hljs-number\">3</span><br>          <span class=\"hljs-attr\">httpGet:</span><br>            <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">/healthz</span><br>            <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">10254</span><br>            <span class=\"hljs-attr\">scheme:</span> <span class=\"hljs-string\">HTTP</span><br>          <span class=\"hljs-attr\">initialDelaySeconds:</span> <span class=\"hljs-number\">10</span><br>          <span class=\"hljs-attr\">periodSeconds:</span> <span class=\"hljs-number\">10</span><br>          <span class=\"hljs-attr\">successThreshold:</span> <span class=\"hljs-number\">1</span><br>          <span class=\"hljs-attr\">timeoutSeconds:</span> <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-attr\">resources:</span><br>          <span class=\"hljs-attr\">requests:</span><br>            <span class=\"hljs-attr\">cpu:</span> <span class=\"hljs-string\">100m</span><br>            <span class=\"hljs-attr\">memory:</span> <span class=\"hljs-string\">90Mi</span><br>        <span class=\"hljs-attr\">securityContext:</span><br>          <span class=\"hljs-attr\">allowPrivilegeEscalation:</span> <span class=\"hljs-literal\">true</span><br>          <span class=\"hljs-attr\">capabilities:</span><br>            <span class=\"hljs-attr\">add:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">NET_BIND_SERVICE</span><br>            <span class=\"hljs-attr\">drop:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ALL</span><br>          <span class=\"hljs-attr\">runAsUser:</span> <span class=\"hljs-number\">101</span><br>        <span class=\"hljs-attr\">volumeMounts:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/usr/local/certificates/</span><br>          <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">webhook-cert</span><br>          <span class=\"hljs-attr\">readOnly:</span> <span class=\"hljs-literal\">true</span><br>      <span class=\"hljs-attr\">dnsPolicy:</span> <span class=\"hljs-string\">ClusterFirst</span><br>      <span class=\"hljs-attr\">nodeSelector:</span><br>        <span class=\"hljs-attr\">kubernetes.io/os:</span> <span class=\"hljs-string\">linux</span><br>      <span class=\"hljs-attr\">serviceAccountName:</span> <span class=\"hljs-string\">ingress-nginx</span><br>      <span class=\"hljs-attr\">terminationGracePeriodSeconds:</span> <span class=\"hljs-number\">300</span><br>      <span class=\"hljs-attr\">volumes:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">webhook-cert</span><br>        <span class=\"hljs-attr\">secret:</span><br>          <span class=\"hljs-attr\">secretName:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">batch/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Job</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission-create</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">template:</span><br>    <span class=\"hljs-attr\">metadata:</span><br>      <span class=\"hljs-attr\">labels:</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission-create</span><br>    <span class=\"hljs-attr\">spec:</span><br>      <span class=\"hljs-attr\">containers:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">args:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">create</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--namespace=$(POD_NAMESPACE)</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--secret-name=ingress-nginx-admission</span><br>        <span class=\"hljs-attr\">env:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">POD_NAMESPACE</span><br>          <span class=\"hljs-attr\">valueFrom:</span><br>            <span class=\"hljs-attr\">fieldRef:</span><br>              <span class=\"hljs-attr\">fieldPath:</span> <span class=\"hljs-string\">metadata.namespace</span><br>        <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343</span><br>        <span class=\"hljs-attr\">imagePullPolicy:</span> <span class=\"hljs-string\">IfNotPresent</span><br>        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">create</span><br>        <span class=\"hljs-attr\">securityContext:</span><br>          <span class=\"hljs-attr\">allowPrivilegeEscalation:</span> <span class=\"hljs-literal\">false</span><br>      <span class=\"hljs-attr\">nodeSelector:</span><br>        <span class=\"hljs-attr\">kubernetes.io/os:</span> <span class=\"hljs-string\">linux</span><br>      <span class=\"hljs-attr\">restartPolicy:</span> <span class=\"hljs-string\">OnFailure</span><br>      <span class=\"hljs-attr\">securityContext:</span><br>        <span class=\"hljs-attr\">fsGroup:</span> <span class=\"hljs-number\">2000</span><br>        <span class=\"hljs-attr\">runAsNonRoot:</span> <span class=\"hljs-literal\">true</span><br>        <span class=\"hljs-attr\">runAsUser:</span> <span class=\"hljs-number\">2000</span><br>      <span class=\"hljs-attr\">serviceAccountName:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">batch/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Job</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission-patch</span><br>  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">template:</span><br>    <span class=\"hljs-attr\">metadata:</span><br>      <span class=\"hljs-attr\">labels:</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>        <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission-patch</span><br>    <span class=\"hljs-attr\">spec:</span><br>      <span class=\"hljs-attr\">containers:</span><br>      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">args:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">patch</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--webhook-name=ingress-nginx-admission</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--namespace=$(POD_NAMESPACE)</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--patch-mutating=false</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--secret-name=ingress-nginx-admission</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">--patch-failure-policy=Fail</span><br>        <span class=\"hljs-attr\">env:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">POD_NAMESPACE</span><br>          <span class=\"hljs-attr\">valueFrom:</span><br>            <span class=\"hljs-attr\">fieldRef:</span><br>              <span class=\"hljs-attr\">fieldPath:</span> <span class=\"hljs-string\">metadata.namespace</span><br>        <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343</span><br>        <span class=\"hljs-attr\">imagePullPolicy:</span> <span class=\"hljs-string\">IfNotPresent</span><br>        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">patch</span><br>        <span class=\"hljs-attr\">securityContext:</span><br>          <span class=\"hljs-attr\">allowPrivilegeEscalation:</span> <span class=\"hljs-literal\">false</span><br>      <span class=\"hljs-attr\">nodeSelector:</span><br>        <span class=\"hljs-attr\">kubernetes.io/os:</span> <span class=\"hljs-string\">linux</span><br>      <span class=\"hljs-attr\">restartPolicy:</span> <span class=\"hljs-string\">OnFailure</span><br>      <span class=\"hljs-attr\">securityContext:</span><br>        <span class=\"hljs-attr\">fsGroup:</span> <span class=\"hljs-number\">2000</span><br>        <span class=\"hljs-attr\">runAsNonRoot:</span> <span class=\"hljs-literal\">true</span><br>        <span class=\"hljs-attr\">runAsUser:</span> <span class=\"hljs-number\">2000</span><br>      <span class=\"hljs-attr\">serviceAccountName:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">networking.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">IngressClass</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">controller</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx</span><br><span class=\"hljs-attr\">spec:</span><br>  <span class=\"hljs-attr\">controller:</span> <span class=\"hljs-string\">k8s.io/ingress-nginx</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">admissionregistration.k8s.io/v1</span><br><span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ValidatingWebhookConfiguration</span><br><span class=\"hljs-attr\">metadata:</span><br>  <span class=\"hljs-attr\">labels:</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/component:</span> <span class=\"hljs-string\">admission-webhook</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/instance:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/name:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/part-of:</span> <span class=\"hljs-string\">ingress-nginx</span><br>    <span class=\"hljs-attr\">app.kubernetes.io/version:</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.0</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-admission</span><br><span class=\"hljs-attr\">webhooks:</span><br><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">admissionReviewVersions:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">v1</span><br>  <span class=\"hljs-attr\">clientConfig:</span><br>    <span class=\"hljs-attr\">service:</span><br>      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ingress-nginx-controller-admission</span><br>      <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">ingress-nginx</span><br>      <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">/networking/v1/ingresses</span><br>  <span class=\"hljs-attr\">failurePolicy:</span> <span class=\"hljs-string\">Fail</span><br>  <span class=\"hljs-attr\">matchPolicy:</span> <span class=\"hljs-string\">Equivalent</span><br>  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">validate.nginx.ingress.kubernetes.io</span><br>  <span class=\"hljs-attr\">rules:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">networking.k8s.io</span><br>    <span class=\"hljs-attr\">apiVersions:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">v1</span><br>    <span class=\"hljs-attr\">operations:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">CREATE</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">UPDATE</span><br>    <span class=\"hljs-attr\">resources:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingresses</span><br>  <span class=\"hljs-attr\">sideEffects:</span> <span class=\"hljs-string\">None</span><br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用Ingress\"><a href=\"#使用Ingress\" class=\"headerlink\" title=\"使用Ingress\"></a>使用Ingress</h2><h3 id=\"代理一个服务\"><a href=\"#代理一个服务\" class=\"headerlink\" title=\"代理一个服务\"></a>代理一个服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">apiVersion: networking.k8s.io/v1<br>kind: Ingress<br>metadata:<br>  name: hexo-ingress-https<br>  namespace: senna-server<br>  annotations:<br>    kubernetes.io/ingress.class: <span class=\"hljs-string\">&quot;nginx&quot;</span><br>spec:<br>  tls:<br>    - hosts:<br>      - www.senhao.top<br>      - senhao.top<br>      <span class=\"hljs-comment\">#使用tls</span><br>      secretName: tls-secret<br>  rules:<br>    - host: senhao.top<br>      http:<br>        paths:<br>          - path: /<br>            pathType: Prefix<br>            backend:<br>              service:<br>                name: hexo<br>                port:<br>                  number: 80<br>    - host: www.senhao.top<br>      http:<br>        paths:<br>          - path: /<br>            pathType: Prefix<br>            backend:<br>              service:<br>                name: hexo<br>                port:<br>                  number: 80<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装tls\"><a href=\"#安装tls\" class=\"headerlink\" title=\"安装tls\"></a>安装tls</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">kubectl create secret tls tls-secret \\<br>    --namespace senna-server \\<br>    --key tls.key \\<br>    --cert tls.crt<br></code></pre></td></tr></table></figure>\n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clcwycos50001h0u2c1ny0zc8","category_id":"clcwycosa0004h0u29s8n210b","_id":"clcwycosi000fh0u2c2ryha28"},{"post_id":"clcwycosh000dh0u2c5k09euv","category_id":"clcwycosa0004h0u29s8n210b","_id":"clcwycosm000mh0u2ez5s5c2h"},{"post_id":"clcwycos80003h0u25zhr8kzk","category_id":"clcwycosf000ah0u26vqd1uul","_id":"clcwycosp000rh0u24fqx3ruy"},{"post_id":"clcwycosi000eh0u22xi9abtt","category_id":"clcwycosf000ah0u26vqd1uul","_id":"clcwycosp000uh0u2dysi98jb"},{"post_id":"clcwycosd0007h0u2fdgr8nv8","category_id":"clcwycosf000ah0u26vqd1uul","_id":"clcwycosr000yh0u20romdsnw"},{"post_id":"clcwycose0008h0u2hfhdg36v","category_id":"clcwycosm000nh0u2f581hz2f","_id":"clcwycosr0011h0u2a8fd3egp"},{"post_id":"clcwycosf0009h0u21b0ofkr1","category_id":"clcwycosq000vh0u2g4vdeyt6","_id":"clcwycost0017h0u2861rdw22"},{"post_id":"clcwycosl000jh0u2520j0lmq","category_id":"clcwycosr0012h0u23vw0hbj8","_id":"clcwycosv001fh0u2gsjydy6o"},{"post_id":"clcwycost0018h0u2b0k9fmse","category_id":"clcwycosm000nh0u2f581hz2f","_id":"clcwycosw001ih0u26caxc0e7"},{"post_id":"clcwycosl000lh0u254n40rng","category_id":"clcwycosu0019h0u2cr95ganh","_id":"clcwycosw001mh0u2cnul9let"},{"post_id":"clcwycosv001eh0u2euty9lem","category_id":"clcwycosf000ah0u26vqd1uul","_id":"clcwycosx001ph0u2hsc56p5v"},{"post_id":"clcwycosn000qh0u2cq6td39n","category_id":"clcwycosr0012h0u23vw0hbj8","_id":"clcwycosx001rh0u2gtljesuh"},{"post_id":"clcwycosp000th0u2hy7pf7tv","category_id":"clcwycosr0012h0u23vw0hbj8","_id":"clcwycosy001vh0u21k8kdd6n"},{"post_id":"clcwycosq000xh0u2djx8g82m","category_id":"clcwycosr0012h0u23vw0hbj8","_id":"clcwycosz001yh0u2epklcafo"},{"post_id":"clcwycosr0010h0u2fun0303m","category_id":"clcwycosy001uh0u2awnja4nj","_id":"clcwycosz0022h0u218jq82k1"},{"post_id":"clcwycoss0014h0u29o581lw0","category_id":"clcwycosz001zh0u2aa8678hu","_id":"clcwycot00026h0u2d58w63pl"},{"post_id":"clcwycoss0016h0u27z9l731i","category_id":"clcwycosz0023h0u221c26cvx","_id":"clcwycot2002ah0u23lhic499"},{"post_id":"clcwycosu001ch0u29ujncpda","category_id":"clcwycot00027h0u2bpfafmnc","_id":"clcwycot2002ch0u26k1o40rr"},{"post_id":"cld3yejr7000084u2dwy49344","category_id":"clcwycosr0012h0u23vw0hbj8","_id":"cld3yejrf000284u2fnbo5b5j"}],"PostTag":[{"post_id":"clcwycos50001h0u2c1ny0zc8","tag_id":"clcwycosc0005h0u2hkp42vfi","_id":"clcwycosh000ch0u21ccnca4v"},{"post_id":"clcwycosh000dh0u2c5k09euv","tag_id":"clcwycosc0005h0u2hkp42vfi","_id":"clcwycosk000ih0u2b8auexfh"},{"post_id":"clcwycos80003h0u25zhr8kzk","tag_id":"clcwycosg000bh0u266m325pp","_id":"clcwycosl000kh0u2ctgr0hy8"},{"post_id":"clcwycosi000eh0u22xi9abtt","tag_id":"clcwycosg000bh0u266m325pp","_id":"clcwycosn000ph0u2g5xmbj33"},{"post_id":"clcwycosd0007h0u2fdgr8nv8","tag_id":"clcwycosg000bh0u266m325pp","_id":"clcwycosp000sh0u27jyxcalp"},{"post_id":"clcwycose0008h0u2hfhdg36v","tag_id":"clcwycosn000oh0u23itj4vd7","_id":"clcwycosr000zh0u21nif9l3x"},{"post_id":"clcwycosf0009h0u21b0ofkr1","tag_id":"clcwycosq000wh0u2d12tgt2k","_id":"clcwycoss0015h0u2gl07acm0"},{"post_id":"clcwycosl000jh0u2520j0lmq","tag_id":"clcwycoss0013h0u24zbv2t2x","_id":"clcwycosu001bh0u2dve08oev"},{"post_id":"clcwycost0018h0u2b0k9fmse","tag_id":"clcwycosn000oh0u23itj4vd7","_id":"clcwycosv001dh0u2hlfv7fre"},{"post_id":"clcwycosl000lh0u254n40rng","tag_id":"clcwycosu001ah0u241ne32bc","_id":"clcwycosw001jh0u26frl9ynp"},{"post_id":"clcwycosv001eh0u2euty9lem","tag_id":"clcwycosg000bh0u266m325pp","_id":"clcwycosw001kh0u290cac91h"},{"post_id":"clcwycosn000qh0u2cq6td39n","tag_id":"clcwycoss0013h0u24zbv2t2x","_id":"clcwycosx001oh0u2d5mbagd4"},{"post_id":"clcwycosp000th0u2hy7pf7tv","tag_id":"clcwycoss0013h0u24zbv2t2x","_id":"clcwycosy001th0u23a679h3u"},{"post_id":"clcwycosq000xh0u2djx8g82m","tag_id":"clcwycoss0013h0u24zbv2t2x","_id":"clcwycosz001xh0u2axq4528h"},{"post_id":"clcwycosr0010h0u2fun0303m","tag_id":"clcwycosy001wh0u2880we4bn","_id":"clcwycosz0021h0u2cx455paq"},{"post_id":"clcwycoss0014h0u29o581lw0","tag_id":"clcwycosz0020h0u2d2jx3pcq","_id":"clcwycot00025h0u281hpa463"},{"post_id":"clcwycoss0016h0u27z9l731i","tag_id":"clcwycosz0024h0u2hwnz7mhj","_id":"clcwycot20029h0u21l3aarbg"},{"post_id":"clcwycosu001ch0u29ujncpda","tag_id":"clcwycot00028h0u2djwhciui","_id":"clcwycot2002bh0u2dcfuevo2"},{"post_id":"cld3yejr7000084u2dwy49344","tag_id":"clcwycoss0013h0u24zbv2t2x","_id":"cld3yejrd000184u25ets7a5v"}],"Tag":[{"name":"BackEnd","_id":"clcwycosc0005h0u2hkp42vfi"},{"name":"docker","_id":"clcwycosg000bh0u266m325pp"},{"name":"Linux","_id":"clcwycosn000oh0u23itj4vd7"},{"name":"git","_id":"clcwycosq000wh0u2d12tgt2k"},{"name":"kubernetes","_id":"clcwycoss0013h0u24zbv2t2x"},{"name":"blog","_id":"clcwycosu001ah0u241ne32bc"},{"name":"Proxy","_id":"clcwycosy001wh0u2880we4bn"},{"name":"FrontEnd","_id":"clcwycosz0020h0u2d2jx3pcq"},{"name":"SQL","_id":"clcwycosz0024h0u2hwnz7mhj"},{"name":"Windows","_id":"clcwycot00028h0u2djwhciui"}]}}